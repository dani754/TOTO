{"version":3,"sources":["components/LeagueComponents/LeaguePageNavbar.js","components/LeagueComponents/LeagueTable.js","components/LeagueComponents/CycleTable.js","components/LeagueComponents/CheckBetsAfterUpdate.js","components/pages/LeaguePage.js","components/AdminComponents/AdminNav.js","components/AdminComponents/CyclesUpdate.js","components/AdminComponents/LeagueData.js","components/AdminComponents/CycleActions.js","components/ToastMessage.js","components/pages/AdminPage.js","components/pages/ProfilePage.js","components/pages/HomeNavbar.js","components/Home.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["LeaguePageNavbar","props","allCycles","cycles","sort","a","b","Nav","onSelect","eventKey","className","Item","Link","length","indexOf","parseInt","cycleID","NavDropdown","id","map","i","LeagueTable","cycleData","url","fetch","method","dataType","then","res","json","data","result","setState","cycleid","console","log","state","catch","err","sortByTotalScore","tableArray","table","totalScore","sortByCycleScore","currentCycleScore","userName","originIndex","this","current_cycle","Array","isArray","names_array","user","index","scores_array","membersscores","Table","striped","bordered","hover","variant","type","onClick","React","Component","CycleTable","findUserIndexInLeague","membersids","userID","gamesIDs","gamesids","cycleOrderInLeague","cycleorderinleague","isLocked","islocked","membersScores","gamesDB","userIndex","setTable","newTable","gameid","hometeam","awayteam","score","userBet","bets","game","scoreUpdate","bet","membersbets","bonusMark","isbonus","gameID","bonus","handleChange","e","newCycleBet","target","value","handleSubmit","headers","body","JSON","stringify","gamesTable","onSubmit","OverlayTrigger","placement","overlay","Tooltip","style","showenBet","Button","Form","preventDefault","Group","Control","as","size","onChange","color","CheckBetsAfterUpdate","useState","show","setShow","message","complete","Row","Col","xs","Toast","onClose","delay","autohide","Header","src","alt","AdminNav","cycleCostumizeActions","isclosed","Divider","title","CyclesUpdate","isClosed","newScore","handleGamesInput","teamType","hometeamArray","awayteamArray","addGames","leagueID","leagueSize","membersIDs","firstGame","gamesToAdd","renderUpdateTable","deleteGame","markAsBonusGame","unmarkAsBonusGame","newCycleScore","updateScores","gamesArray","x","concat","placeholder","LeagueData","onLeagueNameChange","newLeagueName","changeLeagueName","currentLeagueName","answer","onDataChange","currentCycle","updateCurrentCycle","newCurrentCycle","leagueName","leagueNameProp","Label","cyclesIDs","cycle","member","verifyBets","ToastMessage","pop","Body","AdminPage","fullLeagueData","leagueid","leaguename","cycles_ids","members_ids","membersNames","members_names","members_scores_league","current_cycle_id","cyclesDB","refresh","switchTab","returnedTable","showCycle","toast","Actions","Content","cyclesArray","find","HomeNavbar","Home","getUserData","userid","username","isAdmin","is_admin","image","currentLeagueID","leagueData","navBar","logOut","SignIn","onUsernameChange","event","onPasswordChange","password","onSubmitSignin","signinEmail","validLogin","badSubmition","autoComplete","controlId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aaa91be.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function LeaguePageNavbar(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"secondNav\" >\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"CycleTable\">מחזור {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} </Nav.Link>\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\">\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >מחזור {allCycles.length-i}</NavDropdown.Item>\r\n                        );\r\n                    })}\r\n                    </NavDropdown>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"LeagueTable\" >טבלת הליגה</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            table: [\r\n                {userName: 'await',\r\n                totalScore: 1,\r\n                currentCycleScore: 1,\r\n                originIndex: 0}],\r\n            cycleID: 0,\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    cycleData: result,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    sortByTotalScore = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    sortByCycleScore  = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.currentCycleScore - a.currentCycleScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    render (){\r\n        if (this.props.data.current_cycle !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.data.current_cycle}`;\r\n            if (this.state.cycleID !== this.props.data.current_cycle){\r\n                this.cycleData(url);\r\n            } \r\n        }\r\n        if (Array.isArray(this.props.data.names_array) && this.state.table[0].userName === 'await' && this.state.cycleID !==0){\r\n            let membersNames = this.props.data.names_array;\r\n            let tableArray = membersNames.map((user,i)=>{\r\n                return {\r\n                    index: i,\r\n                    userName: user,\r\n                    totalScore: this.props.data.scores_array[i],\r\n                    currentCycleScore: this.state.cycleData.membersscores[i],\r\n                 };\r\n            });\r\n            tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n            this.setState({table: tableArray});\r\n        };\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByCycleScore()}>ניקוד למחזור נוכחי</th> \r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByTotalScore()}>סה\"כ נקודות</th> \r\n\r\n                            <th>שם</th> \r\n\r\n                            <th>#</th> \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.table.map((user,i) => {\r\n                      return( <tr>\r\n                            <td>{user.currentCycleScore}</td>\r\n                            <td>{user.totalScore}</td>\r\n                            <td>{user.userName}</td>\r\n                            <td>{i+1}</td>\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class CycleTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0, userBet: 0, bets: [0,]}],\r\n            userIndex: 0,\r\n        }\r\n    }\r\n\r\n\r\n    cycleData = (url) => {\r\n        let membersArray = this.props.data.membersids;\r\n        let findUserIndexInLeague = membersArray.indexOf(this.props.userID);\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                    userIndex: findUserIndexInLeague,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 'await',  cycleid: parseInt(this.props.cycleID), bets: [0,]}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'טרם נקבע';\r\n                if (this.state.isLocked && game.score > 0){\r\n                    if (game.score === 3)\r\n                        scoreUpdate = 'x';\r\n                    else\r\n                        scoreUpdate = game.score;\r\n                }\r\n                let bet = game.membersbets[this.state.userIndex];\r\n                if (this.state.isLocked && bet === 3)\r\n                    bet = 'x';\r\n                let bonusMark = '';\r\n                if (game.isbonus)\r\n                    bonusMark = 'בונוס! ';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: scoreUpdate,\r\n                    userBet: bet,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    bonus: bonusMark,\r\n                    isbonus: game.isbonus,\r\n                    bets: game.membersbets,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n        console.log(\"new table\", this.state.table)\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleBet = this.state.table;\r\n        newCycleBet[i].userBet = e.target.value;\r\n        this.setState({table: newCycleBet});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            return fetch('https://toto-server.herokuapp.com/updatebets',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        userIndex: this.state.userIndex,\r\n                        gamesTable: this.state.table,\r\n                    })\r\n            }).then((res) => {\r\n                console.log(\"updatebets res\", res);\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(\"updatebets\", data);\r\n                return this.props.onSubmit(this.state.table);\r\n            }).catch(err => console.log(\"updatebets\", err))\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked || tableArray[0].hometeam === 'await'){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr className=\"tr5column\">\r\n                                <th>תוצאה</th> \r\n                                <th>ההימור שלך</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLine\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.data.names_array[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td className=\"hebrew\" >בונוס</td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    return( <tr key={i} className=\"tr5column\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.data.names_array[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={(e)=> {\r\n                        e.preventDefault()\r\n                        this.handleSubmit()}} >\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>הימור</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLineFour\" >\r\n                                            <td className=\"hebrew\" className=\"bet\" >\r\n                                                <Form.Group className=\"bet\" >\r\n                                                    <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                        <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                        <option value='1' className=\"hebrew\"  >1</option>\r\n                                                        <option value='2' className=\"hebrew\" >2</option>\r\n                                                        <option value='3' className=\"hebrew\" >x</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td className=\"hebrew\" >בונוס</td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    return( <tr key={i} className=\"hebrew\" >\r\n                                            <td className=\"hebrew\" className=\"bet\" >\r\n                                                <Form.Group className=\"bet\" >\r\n                                                    <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                        <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                        <option value='1' className=\"hebrew\"  >1</option>\r\n                                                        <option value='2' className=\"hebrew\" >2</option>\r\n                                                        <option value='3' className=\"hebrew\" >x</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })}    \r\n                        </tbody>\r\n                        <Button size=\"lg\" style={{color: \"black\"}} type=\"submit\">שמור הימור</Button>\r\n                    </Table>\r\n                </Form>\r\n            </div>\r\n        );}\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CheckBetsAfterUpdate (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n    let message = \"ההימור עודכן בהצלחה\";\r\n    if (!props.complete){\r\n        message= \"ההימור עודכן! שים לב, קיימים משחקים שטרם הימרת עליהם\"\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">{message}</strong>\r\n                    </Toast.Header>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport LeaguePageNavbar from '../LeagueComponents/LeaguePageNavbar';\r\nimport LeagueTable from '../LeagueComponents/LeagueTable';\r\nimport CycleTable from '../LeagueComponents/CycleTable';\r\nimport CheckBetsAfterUpdate from '../LeagueComponents/CheckBetsAfterUpdate';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeaguePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            table: 0,\r\n            data: {},\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            userIndex: 0,\r\n            leagues: this.props.leagues,\r\n            currentCycleTable: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n\r\n    leagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"league data\", result);\r\n            this.setState({\r\n                data: result,\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                currentCycleTable: result.current_cycle,\r\n                table: 0,\r\n            });\r\n        }).catch(err => console.log('LeaguePage', err))\r\n    }\r\n\r\n    checkBets = (table) => {\r\n        let complete = true;\r\n        for (let i = 0; i<table.length; i++){\r\n            if (! (table[i].userBet >= 1 && table[i].userBet <= 3 ||  table[i].userBet === 'x')){\r\n                complete = false;\r\n            }\r\n        }\r\n        this.setState({\r\n            toast: <CheckBetsAfterUpdate show={true} complete={complete} />\r\n        });\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"LeagueTable\":\r\n                returnedTable = <LeagueTable data={this.state.data} />;\r\n                break;\r\n            case \"CycleTable\":\r\n                returnedTable = <CycleTable data={this.state.data} cycleID={this.state.currentCycleTable}\r\n                                            userID={this.props.userID} onSubmit={(table)=> {\r\n                                                                                    this.switchTab(\"LeagueTable\")\r\n                                                                                    this.checkBets(table) } }  />\r\n                break;\r\n           default:\r\n                this.setState({currentCycleTable: eventKey});\r\n                returnedTable = <CycleTable data={this.state.data} cycleID={eventKey}\r\n                                            userID={this.props.userID} onSubmit={(table)=> {\r\n                                                                                    this.switchTab(\"LeagueTable\")\r\n                                                                                    this.checkBets(table) } }  />\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/league/${this.props.leagueID}`;\r\n            if (this.state.leagueID !== this.props.leagueID){\r\n                this.leagueData(url);\r\n            }   \r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(\"LeagueTable\");\r\n        };\r\n        let toast = this.state.toast;\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 className=\"hebrew\"> שלום {this.props.userName} ! ברוכים הבאים לליגת {this.state.leagueName} </h1>\r\n                {toast}\r\n                <LeaguePageNavbar   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                    leagues={this.state.leagues} \r\n                                    cycles={this.state.cyclesIDs}\r\n                                    leagueID={this.state.leagueID}\r\n                                    cycleID={this.state.currentCycleTable}\r\n                                    betID={this.state.currentBetsCycle}\r\n                                    />\r\n                <p></p>\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AdminNav(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n\r\n    let showenCycle = props.cycleID;\r\n    if (showenCycle !== 0){\r\n        let cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                            <Nav.Link  eventKey=\"lock\" > נעילת מחזור </Nav.Link>\r\n                        </Nav.Item></>\r\n        if (props.cycleData.islocked){\r\n            if (props.cycleData.isclosed){\r\n                cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"unclose\" > ביטול סגירת מחזור </Nav.Link>\r\n                            </Nav.Item></>\r\n            } else {\r\n                cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"close\" > סגירת מחזור </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"unlock\" > ביטול נעילת מחזור </Nav.Link>\r\n                            </Nav.Item></>\r\n            }\r\n        }\r\n        return (\r\n            <div >\r\n                <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"adminNav\" >\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link  eventKey={props.cycleID} > {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} מחזור </Nav.Link>\r\n                        <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\"  >\r\n                            {allCycles.map((id,i)=>{\r\n                                return(\r\n                                    <NavDropdown.Item eventKey={id} key={i} > {allCycles.length-i} מחזור</NavDropdown.Item>\r\n                                ); \r\n                            })}\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item eventKey=\"addCycle\" >הוסף מחזור חדש  </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav.Item>\r\n                    {cycleCostumizeActions}\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link  eventKey=\"LeagueData\">עמוד ליגה</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"adminNav\" >\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"secondNavItem\" title=\"עבור למחזור\" >\r\n                        {allCycles.map((id,i)=>{\r\n                            return(\r\n                                <NavDropdown.Item eventKey={id} key={i} > {allCycles.length-i} מחזור</NavDropdown.Item>\r\n                            ); \r\n                        })}\r\n\r\n                    </NavDropdown>\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link   eventKey=\"addCycle\" >הוסף מחזור חדש </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\n\r\nexport default class CyclesUpdate extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            isClosed: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0}],\r\n            gamesToAdd: 0,\r\n            hometeam: [\"\"],\r\n            awayteam: [\"\"],\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    isClosed: result.isclosed,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                });\r\n                console.log(\"state admin cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.props.cycleID}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let score = game.score;\r\n                if (this.state.isClosed && score === 3)\r\n                    score = 'x';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: score,\r\n                    newScore: game.score,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    isbonus: game.isbonus,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleGamesInput = (e, i, teamType) => {\r\n        if (teamType ===1){\r\n            let hometeamArray = this.state.hometeam;\r\n            hometeamArray[i] = e.target.value;\r\n            this.setState({hometeam: hometeamArray}); \r\n        } else {\r\n            let awayteamArray = this.state.awayteam;\r\n            awayteamArray[i] = e.target.value;\r\n            this.setState({awayteam: awayteamArray}); \r\n        }\r\n    }\r\n\r\n    addGames = () => {\r\n        for (let i=0; i<= this.state.gamesToAdd; i++){\r\n            if (this.state.hometeam[i] !== '' && this.state.awayteam[i] !== ''){\r\n                fetch('https://toto-server.herokuapp.com/addgame',\r\n                    {\r\n                        method: \"post\",\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                            hometeam: this.state.hometeam[i],\r\n                            awayteam: this.state.awayteam[i],\r\n                            cycleID: this.state.cycleID,\r\n                            leagueID: this.props.data.leagueID,\r\n                            leagueSize: this.props.data.membersIDs.length,\r\n                            firstGame: (this.state.table[0].hometeam === 'await'),\r\n                        })\r\n                    })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        if (i===this.state.gamesToAdd){\r\n                            let renderUpdateTable = this.state.table;\r\n                            renderUpdateTable[0].cycleid = 0;\r\n                            this.setState({\r\n                                cycleID: 0,\r\n                                gamesToAdd: 0,\r\n                                hometeam: [\"\"],\r\n                                awayteam: [\"\"],\r\n                                table: renderUpdateTable,\r\n                            })                            \r\n                        }\r\n                    }).catch(err => console.log(\"addGame\", err))\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    deleteGame = (gameID) => {\r\n        console.log(\"delete game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/deletegame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response deletegame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            })   \r\n            console.log(\"response deletegame\", data)\r\n        }).catch(err => console.log(\"deletegame\", err))\r\n    }\r\n\r\n    markAsBonusGame = (gameID) => {\r\n        console.log(\"bunus game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/bonusgame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response bonusgame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            }) \r\n            console.log(\"response bonusgame\", data)\r\n        }).catch(err => console.log(\"bonusgame\", err))\r\n    }\r\n\r\n    unmarkAsBonusGame = (gameID) => {\r\n        console.log(\"un-bunus game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/unbonusgame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response unbonusgame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            }) \r\n            console.log(\"response unbonusgame\", data)\r\n        }).catch(err => console.log(\"unbonusgame\", err))\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleScore = this.state.table;\r\n        newCycleScore[i].newScore = e.target.value;\r\n        console.log(\"newCycleScore\", newCycleScore);\r\n        this.setState({table: newCycleScore});\r\n    }\r\n\r\n    updateScores = () => {\r\n        console.log(\"updateScores\", this.state);\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            fetch('https://toto-server.herokuapp.com/updatescores',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        gamesTable: this.state.table,\r\n                        cycleID: this.state.cycleID,\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(\"response updatescores\", data);\r\n                    this.props.onSelect(\"scoreUpdate\");\r\n                    this.setState({cycleID: 0});\r\n                }).catch(err => console.log(\"updatescores\", err))\r\n        }\r\n    }\r\n\r\n\r\n    render (){\r\n        console.log(\"cycle update state\", this.state);\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isClosed){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>תוצאה</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLineFour\" >\r\n                                        <td>{game.score}</td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{i+1}</td>\r\n                                    </tr>\r\n                                );} else {\r\n                                    return( <tr key={i} >\r\n                                        <td>{game.score}</td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{i+1}</td>\r\n                                    </tr>\r\n                                );}\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else if (this.state.isLocked) {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.updateScores()}>\r\n                        <Table striped bordered hover variant=\"dark\" >\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>תוצאה</th> \r\n                                    <th>קבוצת חוץ</th> \r\n                                    <th>קבוצת בית</th> \r\n                                    <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        if (game.isbonus){\r\n                                            return( <tr key={i}  className=\"bonusLineFour\" >\r\n                                                <td>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                            <option value='0' >await</option>\r\n                                                            <option value='1' >1</option>\r\n                                                            <option value='2' >2</option>\r\n                                                            <option value='3' >x</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </td>\r\n                                                <td>{game.awayteam}</td>\r\n                                                <td>{game.hometeam}</td>\r\n                                                <td>{i+1}</td>\r\n                                            </tr>\r\n                                        );} else {\r\n                                            return( <tr key={i} >\r\n                                                <td>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                            <option value='0' >await</option>\r\n                                                            <option value='1' >1</option>\r\n                                                            <option value='2' >2</option>\r\n                                                            <option value='3' >x</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </td>\r\n                                                <td>{game.awayteam}</td>\r\n                                                <td>{game.hometeam}</td>\r\n                                                <td>{i+1}</td>\r\n                                            </tr>\r\n                                        );}\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.updateScores()} >update scores</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else {\r\n            let gamesArray = this.state.hometeam;\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th> \r\n                                    <th>קבוצת חוץ</th> \r\n                                    <th>קבוצת בית</th> \r\n                                    <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tableArray.map((game,i) => {\r\n                                    if (game.isbonus){\r\n                                        return( <tr key={i}  className=\"bonusLineFour\" >\r\n                                            <td>\r\n                                                <Button variant=\"outline-secondary\" onClick={()=> this.deleteGame(game.gameID)}  >מחיקה</Button>\r\n                                                <Button variant=\"outline-secondary\"  onClick={()=> this.unmarkAsBonusGame(game.gameID)} >בטל סימון כבונוס</Button>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );} else {\r\n                                        return( <tr key={i} >\r\n                                            <td>\r\n                                                <Button variant=\"outline-secondary\" onClick={()=> this.deleteGame(game.gameID)}  >מחיקה</Button>\r\n                                                <Button variant=\"outline-secondary\"  onClick={()=> this.markAsBonusGame(game.gameID)} >סמן כבונוס</Button>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );}\r\n                                })}\r\n                                {gamesArray.map((x,i) => {\r\n                                    return( <tr key={i} className=\"Hebrew\" >\r\n                                            <td> <Button style={{color: \"black\"}} type=\"button\"\r\n                                                            onClick={()=> this.setState({gamesToAdd: this.state.gamesToAdd+1,\r\n                                                                                        hometeam: this.state.hometeam.concat([\"\"]), awayteam: this.state.awayteam.concat([\"\"])})} >\r\n                                                + </Button> </td>\r\n                                            <td><Form.Group>\r\n                                                <Form.Control type=\"text\" placeholder=\"קבוצת חוץ\" onChange={(e) => {this.handleGamesInput(e,i,2)}}\r\n                                                                                        value={this.state.awayteam[i]} />\r\n                                            </Form.Group></td>\r\n                                            <td><Form.Group>\r\n                                                <Form.Control type=\"text\" placeholder=\"קבוצת בית\" onChange={(e) => {this.handleGamesInput(e,i,1)}}\r\n                                                                                        value={this.state.hometeam[i]} />\r\n                                            </Form.Group></td>\r\n                                            <td>*</td>\r\n                                        </tr>\r\n                                    );\r\n                                })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.addGames()} >הוסף משחקים</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            changeLeagueName: false,\r\n            currentLeagueName: this.props.data.leagueName,\r\n            newLeagueName: '',\r\n            currentCycle: this.props.data.current_cycle,\r\n        }\r\n    }\r\n\r\n    onLeagueNameChange = (e) => {\r\n        this.setState({newLeagueName: e.target.value})\r\n    }\r\n\r\n    changeLeagueName = () => {\r\n        console.log(\"activate changeLeagueName\", this.state)\r\n        if (this.state.newLeagueName !== '' && this.state.newLeagueName !== this.state.currentLeagueName){\r\n            fetch('https://toto-server.herokuapp.com/changeleaguename',\r\n                {\r\n                    method: \"post\",\r\n                    dataType: \"json\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        leagueID: this.props.data.leagueID,\r\n                        newLeagueName: this.state.newLeagueName\r\n                    }),\r\n            }).then( res => res.json()\r\n            ).then ( answer => {\r\n                let result = answer;\r\n                console.log(\"change league name\", result);\r\n                this.setState({\r\n                    changeLeagueName: false,\r\n                    currentLeagueName: this.state.newLeagueName,\r\n                })\r\n                this.props.onDataChange();\r\n            }).catch(err => console.log('AdminPage', err))\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({currentCycle: e.target.value});\r\n    }\r\n\r\n    updateCurrentCycle = () => {\r\n        console.log(\"activate updateCurrentCycle\", this.state)\r\n        if (this.state.currentCycle !== this.props.data.current_cycle){\r\n            fetch('https://toto-server.herokuapp.com/updatecurrentcycle',\r\n                {\r\n                    method: \"post\",\r\n                    dataType: \"json\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        leagueID: this.props.data.leagueID,\r\n                        newCurrentCycle: this.state.currentCycle\r\n                    }),\r\n            }).then( res => res.json()\r\n            ).then ( answer => {\r\n                let result = answer;\r\n                console.log(\"change current league\", result);\r\n                this.props.onDataChange();\r\n            }).catch(err => console.log('AdminPage', err))\r\n        }\r\n    }\r\n\r\n    render (){\r\n\r\n        let leagueNameProp = <Col><Form.Label className=\"Hebrew\"  >שם הליגה:      {this.state.currentLeagueName} </Form.Label></Col>\r\n        if (this.state.changeLeagueName){\r\n            leagueNameProp =   <><Col><Button onClick={()=>this.changeLeagueName()} > עדכן </Button></Col>\r\n                                <Col><Form.Control className=\"Hebrew\" placeholder={this.state.currentLeagueName} onChange={(e)=>this.onLeagueNameChange(e)} /></Col></>\r\n        }\r\n        let cycles = this.props.data.cyclesIDs;\r\n        cycles.sort(function(a, b){return a-b});\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label >פרטים כללים</Form.Label>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={()=>this.setState({changeLeagueName: true})} size=\"sm\" > שנה שם ליגה</Button>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Form.Label className=\"Hebrew\" >מספר הליגה:   {this.props.data.leagueID} </Form.Label>\r\n                            </Col>\r\n                            {leagueNameProp}\r\n                        </Row>\r\n                        <p></p>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={()=>this.updateCurrentCycle()} size=\"sm\" >עדכן</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control as=\"select\" size=\"sm\" value={this.state.currentCycle} onChange={(e)=>this.handleChange(e)} >\r\n                                    {\r\n                                        cycles.map( (cycle, i) => {\r\n                                            return (\r\n                                                <option key={i} value={cycle}>{i+1}</option>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Form.Label>עדכון מחזור להצגה בטבלת הליגה  </Form.Label>\r\n                            </Col>\r\n                        </Row>\r\n                        <p></p>\r\n                    </Form.Group>\r\n                    <Form.Group><Row>\r\n                    <Col>\r\n                            <Form.Label>רשימת משתתפים</Form.Label>\r\n                            <Table striped bordered hover variant=\"dark\" >\r\n                                <thead>\r\n                                    <tr className=\"adminPageNamesTable\" >\r\n                                        <th>סטטוס</th>\r\n                                        <th>שם</th> \r\n                                        <th>#</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.props.data.names_array.map( (member, i) => {\r\n                                            return (\r\n                                                <tr key={i} className=\"adminPageNamesTable\" >\r\n                                                    <td>פעיל</td>\r\n                                                    <td>{member}</td>\r\n                                                    <td>{i+1}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>רשימת מחזורים</Form.Label>\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                    <tr className=\"adminPageCycleTable\" >\r\n                                        <th>סטטוס</th>\r\n                                        <th>#</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.props.data.cyclesIDs.map( (cycle, i) => {\r\n                                            return (\r\n                                                <tr key={i} className=\"adminPageCycleTable\" >\r\n                                                    <td>פעיל</td>\r\n                                                    <td>{i+1}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row></Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function addCycle (leagueID){\r\n        return fetch(`https://toto-server.herokuapp.com/addcycle/${leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"add cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))    \r\n\r\n}\r\n\r\nexport function closeCycle (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/closecycle/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"close cycle\", result);\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function lockCycle (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/lockcycle/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"lock cycle\", result);\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function verifyBets (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/verifybets/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"verify bets before lock cycle\", result);\r\n        return result\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function uncloseCycle (cycleID){\r\n    let url = `https://toto-server.herokuapp.com/unclosecycle/${cycleID}`;\r\n    return fetch(url,\r\n    {\r\n            method: \"get\",\r\n            headers: {'Content-Type': 'application/json'},\r\n    }).then((res) => {\r\n        console.log(\"response unclosecycle\", res)\r\n        res.json()\r\n    }).then((data) => {\r\n        console.log(\"response unclosecycle\", data)\r\n    }).catch(err => console.log(\"unclosecycle\", err))\r\n}\r\n\r\nexport function unlockCycle (cycleID) {\r\n    let url = `https://toto-server.herokuapp.com/unlockcycle/${cycleID}`;\r\n    return fetch(url,\r\n    {\r\n            method: \"get\",\r\n            headers: {'Content-Type': 'application/json'},\r\n    }).then((res) => {\r\n        console.log(\"response unlockcycle\", res)\r\n        res.json()\r\n    }).then((data) => {\r\n        console.log(\"response unlockcycle\", data)\r\n    }).catch(err => console.log(\"unlockcycle\", err))\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nexport default function ToastMessage (props){\r\n\r\n    const [show, setShow] = useState(props.pop);\r\n    \r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => {props.onClose()}} show={show}  >\r\n                <Toast.Header>\r\n            \r\n\r\n          </Toast.Header>\r\n          <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded mr-2\"\r\n              alt=\"\"\r\n            />\r\n                    <Toast.Body>{props.message}</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport AdminNav from '../AdminComponents/AdminNav';\r\nimport CyclesUpdate from '../AdminComponents/CyclesUpdate';\r\nimport LeagueData from '../AdminComponents/LeagueData';\r\nimport * as Actions from '../AdminComponents/CycleActions';\r\nimport ToastMessage from '../ToastMessage';\r\nimport '../../importStyle.css';\r\n\r\nexport default class AdminPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            membersNames: [],\r\n            membersScores: [],\r\n            currentCycle: 0,\r\n            cyclesDB: 0,\r\n            showCycle: 0,\r\n            table: 0,\r\n            toast: <p></p>,\r\n            refresh: false,\r\n        }\r\n    }\r\n\r\n    fullLeagueData = () => {\r\n        fetch(`https://toto-server.herokuapp.com/home/leagueadmin/${this.props.leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            this.setState({\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cycles_ids,\r\n                membersIDs: result.members_ids,\r\n                membersNames: result.members_names,\r\n                membersScores: result.members_scores_league,\r\n                currentCycle: result.current_cycle_id,\r\n                cyclesDB: result.cyclesDB,\r\n                refresh: true,\r\n            });\r\n            console.log(\"league data in admin page\", result, this.state);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable; \r\n        switch(eventKey){\r\n            case \"LeagueData\":\r\n                this.setState({showCycle: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break;\r\n            case \"addCycle\":\r\n                Actions.addCycle (this.props.leagueID);\r\n                this.setState({toast: <ToastMessage pop={true} onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"נוסף מחזור חדש לליגה!\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"close\":\r\n                Actions.closeCycle (this.state.showCycle);\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"המחזור סגור - לא ניתן לעדכן יותר תוצאות\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"lock\":\r\n                let verified = Actions.verifyBets\r\n                if (verified){\r\n                    Actions.lockCycle (this.state.showCycle);\r\n                    this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                        message=\"המחזור נעול - לא ניתן להמר\"   /> ,\r\n                                leagueID: 0});\r\n                    returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                } else {\r\n                    this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                    message=\"קיימים שחקנים שטרם שלחו הימור - לא ניתן לנעול את המחזור\"   /> ,\r\n                    leagueID: 0});\r\n                    returnedTable = <CyclesUpdate   data={this.state} cycleID={this.state.showCycle}\r\n                                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} />;\r\n                }\r\n                break; \r\n            case \"unlock\":\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"נעילת המחזור בוטלה\"   /> ,\r\n                            leagueID: 0});\r\n                Actions.unlockCycle (this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"unclose\":\r\n                Actions.uncloseCycle (this.state.showCycle);\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"המחזור נפתח לעדכון תוצאות משחקים\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"scoreUpdate\":\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"תוצאות המחזור עודכנו\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            default: {\r\n                this.setState({showCycle: eventKey});\r\n                returnedTable = <CyclesUpdate   data={this.state} cycleID={parseInt(eventKey)}\r\n                                            onSelect={(eventKey)=>{this.switchTab(eventKey)}}\r\n                />\r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0 && this.state.leagueID === 0){\r\n                this.fullLeagueData();\r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(this.state.current_cycle);\r\n        };\r\n        let toast = this.state.toast;\r\n        let cyclesArray = this.state.cyclesDB;\r\n        let cycleData = 0;\r\n        if (Array.isArray(cyclesArray) && this.state.showCycle > 0){\r\n            cycleData = cyclesArray.find( cycle => cycle.cycleid === parseInt(this.state.showCycle))\r\n        }\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 > ליגת  {this.state.leagueName} - עמוד ניהול </h1>\r\n                {toast}\r\n                <AdminNav   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs} \r\n                            cycleID = {this.state.showCycle}\r\n                            cycleData = {cycleData}\r\n                             />\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class ProfilePage extends React.Component {\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1>Profile Page - under construction</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function HomeNavbar (props) {\r\n    \r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item >\r\n                    <Nav.Link onClick={()=>{props.onClick()}} > התנתק </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"profile\"> פרופיל </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"news\"> עדכונים </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey={props.currentCycle}>מחזור {allCycles.length-allCycles.indexOf(parseInt(props.currentCycle))} </Nav.Link>\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\">\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >מחזור {allCycles.length-i}</NavDropdown.Item>\r\n                        );\r\n                    })}\r\n                    </NavDropdown>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"league\" > טבלת ליגה </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}                \r\n\r\n\r\n","import React from 'react';\r\nimport LeaguePage from './pages/LeaguePage';\r\nimport AdminPage from './pages/AdminPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport HomeNavbar from './pages/HomeNavbar';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            navBar: <p>league</p>,\r\n            userID: 0,\r\n            userName: '',\r\n            isAdmin: 0,\r\n            image: '',\r\n            currentLeagueID: 0,\r\n            leagueName: '',\r\n            membersIDs: [],\r\n            membersNames: [],\r\n            cyclesIDs: [],\r\n            membersScores: [],\r\n            currentCycle: 0,\r\n            showCycle: 0,\r\n            cyclesDB: 0,\r\n        }\r\n    }\r\n    \r\n\r\n    getUserData = () => {\r\n        fetch(`https://toto-server.herokuapp.com/home/user/${this.props.userID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then( res => res.json() )\r\n        .then (data => {\r\n            const result = data[0];\r\n            this.setState({\r\n                userID: result.userid,\r\n                userName: result.username,\r\n                isAdmin: result.is_admin,\r\n                image: result.image,\r\n                currentLeagueID: result.leagueData.leagueid,\r\n                leagueName: result.leagueData.leaguename,\r\n                membersIDs: result.leagueData.members_ids,\r\n                membersNames: result.leagueData.members_names,\r\n                cyclesIDs: result.leagueData.cycles_ids,\r\n                membersScores: result.leagueData.members_scores_league,\r\n                currentCycle: result.leagueData.current_cycle_id,\r\n                showCycle: result.leagueData.current_cycle_id,           \r\n            });\r\n            console.log(\"home data\",result, this.state);\r\n        }).catch(err => console.log('home', err));\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        console.log(\"switchTab\", eventKey)\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"profile\":\r\n                returnedTable = <p>profile</p>\r\n                break;\r\n            case \"league\":\r\n                returnedTable = <p>league</p>\r\n                break;\r\n            case \"news\":\r\n                returnedTable = <p>news</p>\r\n                break;\r\n            default: \r\n                this.setState({showCycle: eventKey});\r\n                returnedTable =  <p>cycle {this.state.showCycle}</p>\r\n        }\r\n        this.setState({navBar: returnedTable});\r\n    }\r\n\r\n    render (){\r\n        if (this.props.userID !== 0 && this.state.userID === 0){\r\n                this.getUserData();\r\n        }\r\n        if (this.state.isAdmin !== 0){\r\n            return (\r\n                <AdminPage leagueID={this.state.currentLeagueID}  />\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <div>\r\n                    <HomeNavbar onClick={()=>{this.props.logOut()}}\r\n                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                cycles={this.state.cyclesIDs}\r\n                                currentCycle={this.state.showCycle} />\r\n                    {this.state.navBar}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button , Form} from 'react-bootstrap';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    onSubmitSignin = () => {\r\n        if (this.state.signinEmail !== ''){\r\n            return fetch('https://toto-server.herokuapp.com/signin' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"signin\", user);\r\n                this.props.validLogin(user);\r\n        }).catch(err => console.log('signin', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"שם משתמש\" autoComplete=\"username\"  onChange={this.onUsernameChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמא</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"password\" placeholder=\"סיסמא\" autoComplete=\"current-password\"  onChange={this.onPasswordChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    e.preventDefault();\r\n                                    this.onSubmitSignin();\r\n                                }}>\r\n                        התחברות\r\n                        </Button>      \r\n                    </Form.Group>     \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}\r\n","import React from 'react';\r\nimport Home from './components/Home';\r\nimport SignIn from './components/SignIn';\r\nimport './style.css';\r\nimport './importStyle.css';\r\n\r\n\r\nexport default class App extends React.Component  {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      userID: 0,\r\n\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    if (this.state.userID !== 0){\r\n      return (\r\n        <Home\r\n          userID={this.state.userID} \r\n          logOut={()=>{this.setState({userID:0})}}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SignIn\r\n          validLogin ={(userid) => {this.setState({userID: userid})}}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}