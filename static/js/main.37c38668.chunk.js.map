{"version":3,"sources":["components/NavBar.js","components/pages/League.js","components/pages/AdminNav.js","components/AdminComponents/CyclesUpdate.js","components/AdminComponents/LeagueData.js","components/AdminComponents/CycleActions.js","components/pop-ups/ToastMessage.js","components/pages/Admin.js","components/pages/Cycle.js","components/pages/Feed.js","components/pages/Profile.js","components/pop-ups/CheckBetsAfterUpdate.js","components/Home.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","allCycles","cycles","sort","a","b","Nav","onSelect","eventKey","Item","className","Link","onClick","currentCycle","length","indexOf","parseInt","NavDropdown","id","map","i","League","getCurrentCycleScores","cycleID","fetch","method","dataType","then","res","json","data","console","log","setState","currentCycleScores","catch","err","sortByTotalScore","tableArray","state","table","totalScore","sortByCycleScore","currentCycleScore","userName","originIndex","this","membersNames","user","index","membersScores","leagueName","Table","striped","bordered","hover","variant","type","React","Component","AdminNav","cycleCostumizeActions","cycleData","islocked","isclosed","Divider","title","CyclesUpdate","updateState","cycleid","gamesIDs","games_ids","cycleOrderInLeague","order_in_league","isLocked","lock_for_bets","isClosed","lock_for_updates","lockingTime","lock_bets_time","gamesDB","setTable","newTable","gameid","hometeam","awayteam","score","Array","isArray","game","home_team","away_team","newScore","gameID","isbonus","is_bonus","handleGamesInput","e","teamType","hometeamArray","target","value","awayteamArray","addGames","headers","body","JSON","stringify","leagueSize","membersIDs","isFirst","gamesToAdd","renderUpdateTable","deleteGame","url","markAsBonusGame","unmarkAsBonusGame","handleChange","newCycleScore","updateScores","gamesTable","Form","onSubmit","Group","Control","as","size","onChange","Button","style","color","gamesArray","handleSubmit","x","concat","placeholder","LeagueData","onLeagueNameChange","newLeagueName","changeLeagueName","currentLeagueName","leagueID","answer","result","onDataChange","updateCurrentCycle","current_cycle","newCurrentCycle","leagueNameProp","Col","Label","cyclesIDs","Row","cycle","names_array","member","verifyBets","ToastMessage","useState","pop","show","xs","Toast","onClose","Header","src","alt","Body","message","AdminPage","fullLeagueData","cyclesDB","find","current_cycle_id","leagueid","leaguename","cycles_ids","members_ids","members_names","members_scores_league","showCycle","showCycleData","getGamesDB","switchTab","returnedTable","toast","Actions","Cycle","findUserIndexInLeague","userID","members_scores_cycle","userIndex","userBet","bets","scoreUpdate","bet","members_bets","bonusMark","bonus","newCycleBet","checkBets","complete","showBetUpdatingToast","OverlayTrigger","placement","overlay","Tooltip","showenBet","preventDefault","Feed","Profile","CheckBetsAfterUpdate","setShow","hide","delay","autohide","Home","getUserData","userid","username","isAdmin","is_admin","image","currentLeagueID","leagueData","navBar","logOut","SignIn","onUsernameChange","event","onPasswordChange","password","onSubmitSignin","signinEmail","validLogin","badSubmition","autoComplete","controlId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37c38668.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default function NavBar (props) {\r\n    \r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item className=\"secondNavItem\" >\r\n                    <Nav.Link onClick={()=>{props.onClick()}} className=\"navLink\" > התנתק </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"profile\" className=\"navLink\" > פרופיל </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"feed\" className=\"navLink\" > עדכונים </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey={props.currentCycle} className=\"navLink\" >מחזור {allCycles.length-allCycles.indexOf(parseInt(props.currentCycle))} </Nav.Link>\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\">\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item  className=\"navLink\"  eventKey={id} key={i} >מחזור {allCycles.length-i}</NavDropdown.Item>\r\n                        );\r\n                    })}\r\n                    </NavDropdown>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\" >\r\n                    <Nav.Link eventKey=\"league\" className=\"navLink\" > טבלת ליגה </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}                \r\n\r\n\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class League extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            table: [\r\n                {userName: 'await',\r\n                totalScore: 1,\r\n                currentCycleScore: 1,\r\n                originIndex: 0}\r\n            ],\r\n            currentCycleScores: [],\r\n        }\r\n    }\r\n\r\n    getCurrentCycleScores = (cycleID) => {\r\n        fetch(`https://toto-server.herokuapp.com/home/get-cycle-scores/${cycleID}`,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log ('fetching cycle scores', data);\r\n                this.setState({\r\n                    currentCycleScores: data,\r\n                });\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    sortByTotalScore = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    sortByCycleScore  = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.currentCycleScore - a.currentCycleScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    render (){\r\n        if (this.state.table[0].userName === 'await' && this.props.currentCycle !== 0){\r\n            let membersNames = this.props.membersNames;\r\n            if (this.state.currentCycleScores.length === 0 ){\r\n                this.getCurrentCycleScores(this.props.currentCycle)\r\n            } else {\r\n                let tableArray = membersNames.map((user,i)=>{\r\n                    return {\r\n                        index: i,\r\n                        userName: user,\r\n                        totalScore: this.props.membersScores[i],\r\n                        currentCycleScore: this.state.currentCycleScores[i],\r\n                     };\r\n                });\r\n                tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n                this.setState({table: tableArray});\r\n            }\r\n        };\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1> שלום {this.props.userName} ! לליגת {this.props.leagueName} </h1>\r\n                <p></p>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByCycleScore()}>ניקוד למחזור נוכחי</th> \r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByTotalScore()}>סה\"כ נקודות</th> \r\n\r\n                            <th>שם</th> \r\n\r\n                            <th>#</th> \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.table.map((user,i) => {\r\n                      return( <tr>\r\n                            <td>{user.currentCycleScore}</td>\r\n                            <td>{user.totalScore}</td>\r\n                            <td>{user.userName}</td>\r\n                            <td>{i+1}</td>\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AdminNav(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n\r\n    if (props.cycleID !== 0){\r\n        let cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                            <Nav.Link  eventKey=\"lock\" > נעילת מחזור </Nav.Link>\r\n                        </Nav.Item></>\r\n        if (props.cycleData.islocked){\r\n            if (props.cycleData.isclosed){\r\n                cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"unclose\" > ביטול סגירת מחזור </Nav.Link>\r\n                            </Nav.Item></>\r\n            } else {\r\n                cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"close\" > סגירת מחזור </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"unlock\" > ביטול נעילת מחזור </Nav.Link>\r\n                            </Nav.Item></>\r\n            }\r\n        }\r\n        return (\r\n            <div >\r\n                <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"adminNav\" >\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link  eventKey={props.cycleID} > {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} מחזור </Nav.Link>\r\n                        <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\"  >\r\n                            {allCycles.map((id,i)=>{\r\n                                return(\r\n                                    <NavDropdown.Item eventKey={id} key={i} > {allCycles.length-i} מחזור</NavDropdown.Item>\r\n                                ); \r\n                            })}\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item eventKey=\"addCycle\" >הוסף מחזור חדש  </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav.Item>\r\n                    {cycleCostumizeActions}\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link  eventKey=\"LeagueData\">עמוד ליגה</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"adminNav\" >\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"secondNavItem\" title=\"עבור למחזור\" >\r\n                        {allCycles.map((id,i)=>{\r\n                            return(\r\n                                <NavDropdown.Item eventKey={id} key={i} > {allCycles.length-i} מחזור</NavDropdown.Item>\r\n                            ); \r\n                        })}\r\n\r\n                    </NavDropdown>\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link   eventKey=\"addCycle\" >הוסף מחזור חדש </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\n\r\nexport default class CyclesUpdate extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: false,\r\n            isClosed: false,\r\n            lockingTime: 0,\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0}],\r\n            gamesToAdd: 0,\r\n            hometeam: [\"\"],\r\n            awayteam: [\"\"],\r\n        }\r\n    }\r\n\r\n    updateState = () => {\r\n        this.setState({\r\n            cycleID: this.props.cycleData.cycleid,\r\n            gamesIDs: this.props.cycleData.games_ids,\r\n            cycleOrderInLeague: this.props.cycleData.order_in_league,\r\n            isLocked: this.props.cycleData.lock_for_bets,\r\n            isClosed: this.props.cycleData.lock_for_updates,\r\n            lockingTime: this.props.cycleData.lock_bets_time,\r\n            gamesDB: this.props.gamesDB,\r\n        })\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.state.cycleID}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let score = game.score;\r\n                if (this.state.isClosed && score === 3)\r\n                    score = 'x';\r\n                return {\r\n                    hometeam: game.home_team,\r\n                    awayteam: game.away_team,\r\n                    score: score,\r\n                    newScore: game.score,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    isbonus: game.is_bonus,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleGamesInput = (e, i, teamType) => {\r\n        if (teamType ===1){\r\n            let hometeamArray = this.state.hometeam;\r\n            hometeamArray[i] = e.target.value;\r\n            this.setState({hometeam: hometeamArray}); \r\n        } else {\r\n            let awayteamArray = this.state.awayteam;\r\n            awayteamArray[i] = e.target.value;\r\n            this.setState({awayteam: awayteamArray}); \r\n        }\r\n    }\r\n\r\n    addGames = () => {\r\n        for (let i=0; i<= this.state.gamesToAdd; i++){\r\n            if (this.state.hometeam[i] !== '' && this.state.awayteam[i] !== ''){\r\n                fetch('https://toto-server.herokuapp.com/addgame',\r\n                    {\r\n                        method: \"post\",\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                            hometeam: this.state.hometeam[i],\r\n                            awayteam: this.state.awayteam[i],\r\n                            cycleID: this.state.cycleID,\r\n                            leagueSize: this.props.data.membersIDs.length,\r\n                            isFirst: (this.state.table[0].hometeam === 'await'),\r\n                        })\r\n                    })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        if (i===this.state.gamesToAdd){\r\n                            let renderUpdateTable = this.state.table;\r\n                            renderUpdateTable[0].cycleid = 0;\r\n                            this.setState({\r\n                                cycleID: 0,\r\n                                gamesToAdd: 0,\r\n                                hometeam: [\"\"],\r\n                                awayteam: [\"\"],\r\n                                table: renderUpdateTable,\r\n                            })                            \r\n                        }\r\n                    }).catch(err => console.log(\"addGame\", err))\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    deleteGame = (gameID) => {\r\n        console.log(\"delete game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/deletegame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response deletegame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            })   \r\n            console.log(\"response deletegame\", data)\r\n        }).catch(err => console.log(\"deletegame\", err))\r\n    }\r\n\r\n    markAsBonusGame = (gameID) => {\r\n        console.log(\"bunus game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/bonusgame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response bonusgame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            }) \r\n            console.log(\"response bonusgame\", data)\r\n        }).catch(err => console.log(\"bonusgame\", err))\r\n    }\r\n\r\n    unmarkAsBonusGame = (gameID) => {\r\n        console.log(\"un-bunus game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/unbonusgame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response unbonusgame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            }) \r\n            console.log(\"response unbonusgame\", data)\r\n        }).catch(err => console.log(\"unbonusgame\", err))\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleScore = this.state.table;\r\n        newCycleScore[i].newScore = parseInt(e.target.value);\r\n        console.log(\"newCycleScore\", newCycleScore);\r\n        this.setState({table: newCycleScore});\r\n    }\r\n\r\n    updateScores = () => {\r\n        console.log(\"updateScores\", this.state);\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            fetch('https://toto-server.herokuapp.com/updatescores',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        gamesTable: this.state.table,\r\n                        cycleID: this.state.cycleID,\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(\"response updatescores\", data);\r\n                    this.props.onSelect(\"scoreUpdate\");\r\n                    this.setState({cycleID: 0});\r\n                }).catch(err => console.log(\"updatescores\", err))\r\n        }\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.state.cycleID !== this.props.cycleData.cycleid){\r\n            this.updateState();\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isClosed){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>תוצאה</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLineFour\" >\r\n                                        <td>{game.score}</td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{i+1}</td>\r\n                                    </tr>\r\n                                );} else {\r\n                                    return( <tr key={i} >\r\n                                        <td>{game.score}</td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{i+1}</td>\r\n                                    </tr>\r\n                                );}\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else if (this.state.isLocked) {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.updateScores()}>\r\n                        <Table striped bordered hover variant=\"dark\" >\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>תוצאה</th> \r\n                                    <th>קבוצת חוץ</th> \r\n                                    <th>קבוצת בית</th> \r\n                                    <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        if (game.isbonus){\r\n                                            return( <tr key={i}  className=\"bonusLineFour\" >\r\n                                                <td>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                            <option value='0' >await</option>\r\n                                                            <option value='1' >1</option>\r\n                                                            <option value='2' >2</option>\r\n                                                            <option value='3' >x</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </td>\r\n                                                <td>{game.awayteam}</td>\r\n                                                <td>{game.hometeam}</td>\r\n                                                <td>{i+1}</td>\r\n                                            </tr>\r\n                                        );} else {\r\n                                            return( <tr key={i} >\r\n                                                <td>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                            <option value='0' >await</option>\r\n                                                            <option value='1' >1</option>\r\n                                                            <option value='2' >2</option>\r\n                                                            <option value='3' >x</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </td>\r\n                                                <td>{game.awayteam}</td>\r\n                                                <td>{game.hometeam}</td>\r\n                                                <td>{i+1}</td>\r\n                                            </tr>\r\n                                        );}\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.updateScores()} >update scores</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else {\r\n            let gamesArray = this.state.hometeam;\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th> \r\n                                    <th>קבוצת חוץ</th> \r\n                                    <th>קבוצת בית</th> \r\n                                    <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tableArray.map((game,i) => {\r\n                                    if (game.isbonus){\r\n                                        return( <tr key={i}  className=\"bonusLineFour\" >\r\n                                            <td>\r\n                                                <Button variant=\"outline-secondary\" onClick={()=> this.deleteGame(game.gameID)}  >מחיקה</Button>\r\n                                                <Button variant=\"outline-secondary\"  onClick={()=> this.unmarkAsBonusGame(game.gameID)} >בטל סימון כבונוס</Button>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );} else {\r\n                                        return( <tr key={i} >\r\n                                            <td>\r\n                                                <Button variant=\"outline-secondary\" onClick={()=> this.deleteGame(game.gameID)}  >מחיקה</Button>\r\n                                                <Button variant=\"outline-secondary\"  onClick={()=> this.markAsBonusGame(game.gameID)} >סמן כבונוס</Button>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );}\r\n                                })}\r\n                                {gamesArray.map((x,i) => {\r\n                                    return( <tr key={i} className=\"Hebrew\" >\r\n                                            <td> <Button style={{color: \"black\"}} type=\"button\"\r\n                                                            onClick={()=> this.setState({gamesToAdd: this.state.gamesToAdd+1,\r\n                                                                                        hometeam: this.state.hometeam.concat([\"\"]), awayteam: this.state.awayteam.concat([\"\"])})} >\r\n                                                + </Button> </td>\r\n                                            <td><Form.Group>\r\n                                                <Form.Control type=\"text\" placeholder=\"קבוצת חוץ\" onChange={(e) => {this.handleGamesInput(e,i,2)}}\r\n                                                                                        value={this.state.awayteam[i]} />\r\n                                            </Form.Group></td>\r\n                                            <td><Form.Group>\r\n                                                <Form.Control type=\"text\" placeholder=\"קבוצת בית\" onChange={(e) => {this.handleGamesInput(e,i,1)}}\r\n                                                                                        value={this.state.hometeam[i]} />\r\n                                            </Form.Group></td>\r\n                                            <td>*</td>\r\n                                        </tr>\r\n                                    );\r\n                                })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.addGames()} >הוסף משחקים</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            changeLeagueName: false,\r\n            currentLeagueName: this.props.data.leagueName,\r\n            newLeagueName: '',\r\n            currentCycle: this.props.data.current_cycle,\r\n        }\r\n    }\r\n\r\n    onLeagueNameChange = (e) => {\r\n        this.setState({newLeagueName: e.target.value})\r\n    }\r\n\r\n    changeLeagueName = () => {\r\n        console.log(\"activate changeLeagueName\", this.state)\r\n        if (this.state.newLeagueName !== '' && this.state.newLeagueName !== this.state.currentLeagueName){\r\n            fetch('https://toto-server.herokuapp.com/changeleaguename',\r\n                {\r\n                    method: \"post\",\r\n                    dataType: \"json\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        leagueID: this.props.data.leagueID,\r\n                        newLeagueName: this.state.newLeagueName\r\n                    }),\r\n            }).then( res => res.json()\r\n            ).then ( answer => {\r\n                let result = answer;\r\n                console.log(\"change league name\", result);\r\n                this.setState({\r\n                    changeLeagueName: false,\r\n                    currentLeagueName: this.state.newLeagueName,\r\n                })\r\n                this.props.onDataChange();\r\n            }).catch(err => console.log('AdminPage', err))\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({currentCycle: e.target.value});\r\n    }\r\n\r\n    updateCurrentCycle = () => {\r\n        console.log(\"activate updateCurrentCycle\", this.state)\r\n        if (this.state.currentCycle !== this.props.data.current_cycle){\r\n            fetch('https://toto-server.herokuapp.com/updatecurrentcycle',\r\n                {\r\n                    method: \"post\",\r\n                    dataType: \"json\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        leagueID: this.props.data.leagueID,\r\n                        newCurrentCycle: this.state.currentCycle\r\n                    }),\r\n            }).then( res => res.json()\r\n            ).then ( answer => {\r\n                let result = answer;\r\n                console.log(\"change current league\", result);\r\n                this.props.onDataChange();\r\n            }).catch(err => console.log('AdminPage', err))\r\n        }\r\n    }\r\n\r\n    render (){\r\n\r\n        let leagueNameProp = <Col><Form.Label className=\"Hebrew\"  >שם הליגה:      {this.state.currentLeagueName} </Form.Label></Col>\r\n        if (this.state.changeLeagueName){\r\n            leagueNameProp =   <><Col><Button onClick={()=>this.changeLeagueName()} > עדכן </Button></Col>\r\n                                <Col><Form.Control className=\"Hebrew\" placeholder={this.state.currentLeagueName} onChange={(e)=>this.onLeagueNameChange(e)} /></Col></>\r\n        }\r\n        let cycles = this.props.data.cyclesIDs;\r\n        cycles.sort(function(a, b){return a-b});\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label >פרטים כללים</Form.Label>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={()=>this.setState({changeLeagueName: true})} size=\"sm\" > שנה שם ליגה</Button>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Form.Label className=\"Hebrew\" >מספר הליגה:   {this.props.data.leagueID} </Form.Label>\r\n                            </Col>\r\n                            {leagueNameProp}\r\n                        </Row>\r\n                        <p></p>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={()=>this.updateCurrentCycle()} size=\"sm\" >עדכן</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control as=\"select\" size=\"sm\" value={this.state.currentCycle} onChange={(e)=>this.handleChange(e)} >\r\n                                    {\r\n                                        cycles.map( (cycle, i) => {\r\n                                            return (\r\n                                                <option key={i} value={cycle}>{i+1}</option>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Form.Label>עדכון מחזור להצגה בטבלת הליגה  </Form.Label>\r\n                            </Col>\r\n                        </Row>\r\n                        <p></p>\r\n                    </Form.Group>\r\n                    <Form.Group><Row>\r\n                    <Col>\r\n                            <Form.Label>רשימת משתתפים</Form.Label>\r\n                            <Table striped bordered hover variant=\"dark\" >\r\n                                <thead>\r\n                                    <tr className=\"adminPageNamesTable\" >\r\n                                        <th>סטטוס</th>\r\n                                        <th>שם</th> \r\n                                        <th>#</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.props.data.names_array.map( (member, i) => {\r\n                                            return (\r\n                                                <tr key={i} className=\"adminPageNamesTable\" >\r\n                                                    <td>פעיל</td>\r\n                                                    <td>{member}</td>\r\n                                                    <td>{i+1}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>רשימת מחזורים</Form.Label>\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                    <tr className=\"adminPageCycleTable\" >\r\n                                        <th>סטטוס</th>\r\n                                        <th>#</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.props.data.cyclesIDs.map( (cycle, i) => {\r\n                                            return (\r\n                                                <tr key={i} className=\"adminPageCycleTable\" >\r\n                                                    <td>פעיל</td>\r\n                                                    <td>{i+1}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row></Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function addCycle (leagueID){\r\n        return fetch(`https://toto-server.herokuapp.com/addcycle/${leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"add cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))    \r\n\r\n}\r\n\r\nexport function closeCycle (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/closecycle/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"close cycle\", result);\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function lockCycle (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/lockcycle/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"lock cycle\", result);\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function verifyBets (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/verifybets/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"verify bets before lock cycle\", result);\r\n        return result\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function uncloseCycle (cycleID){\r\n    let url = `https://toto-server.herokuapp.com/unclosecycle/${cycleID}`;\r\n    return fetch(url,\r\n    {\r\n            method: \"get\",\r\n            headers: {'Content-Type': 'application/json'},\r\n    }).then((res) => {\r\n        console.log(\"response unclosecycle\", res)\r\n        res.json()\r\n    }).then((data) => {\r\n        console.log(\"response unclosecycle\", data)\r\n    }).catch(err => console.log(\"unclosecycle\", err))\r\n}\r\n\r\nexport function unlockCycle (cycleID) {\r\n    let url = `https://toto-server.herokuapp.com/unlockcycle/${cycleID}`;\r\n    return fetch(url,\r\n    {\r\n            method: \"get\",\r\n            headers: {'Content-Type': 'application/json'},\r\n    }).then((res) => {\r\n        console.log(\"response unlockcycle\", res)\r\n        res.json()\r\n    }).then((data) => {\r\n        console.log(\"response unlockcycle\", data)\r\n    }).catch(err => console.log(\"unlockcycle\", err))\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nexport default function ToastMessage (props){\r\n\r\n    const [show, setShow] = useState(props.pop);\r\n    \r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => {props.onClose()}} show={show}  >\r\n                <Toast.Header>\r\n            \r\n\r\n          </Toast.Header>\r\n          <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded mr-2\"\r\n              alt=\"\"\r\n            />\r\n                    <Toast.Body>{props.message}</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport AdminNav from './AdminNav';\r\nimport CyclesUpdate from '../AdminComponents/CyclesUpdate';\r\nimport LeagueData from '../AdminComponents/LeagueData';\r\nimport * as Actions from '../AdminComponents/CycleActions';\r\nimport ToastMessage from '../pop-ups/ToastMessage';\r\nimport '../../importStyle.css';\r\n\r\nexport default class AdminPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            membersNames: [],\r\n            membersScores: [],          \r\n            currentCycle: 0,\r\n            cyclesDB: 0,\r\n            showCycle: 0,\r\n            showCycleData: {cycleid: 0},\r\n            gamesDB: [],\r\n            table: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n\r\n    fullLeagueData = () => {\r\n        fetch(`https://toto-server.herokuapp.com/leagueadmin/${this.props.leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            let cycleData = result.cyclesDB.find( cycle => cycle.cycleid === parseInt(result.current_cycle_id));\r\n            this.setState({\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cycles_ids,\r\n                membersIDs: result.members_ids,\r\n                membersNames: result.members_names,\r\n                membersScores: result.members_scores_league,\r\n                currentCycle: result.current_cycle_id,\r\n                showCycle: result.current_cycle_id,\r\n                cyclesDB: result.cyclesDB,\r\n                showCycleData: cycleData,\r\n                gamesDB: result.gamesDB,\r\n            });\r\n            console.log(\"league data in admin page\", result, this.state);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    getGamesDB = () => {\r\n        fetch(`https://toto-server.herokuapp.com/gamesDB/${this.state.showCycle}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                gamesDB: data,\r\n            });\r\n            console.log(\"gamesDB in admin page\", data);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable; \r\n        switch(eventKey){\r\n            case \"LeagueData\":\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break;\r\n            case \"addCycle\":\r\n                Actions.addCycle (this.props.leagueID);\r\n                this.setState({toast: <ToastMessage pop={true} onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"נוסף מחזור חדש לליגה!\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"close\":\r\n                Actions.closeCycle (this.state.showCycle);\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"המחזור סגור - לא ניתן לעדכן יותר תוצאות\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"lock\":\r\n                let verified = Actions.verifyBets\r\n                if (verified){\r\n                    Actions.lockCycle (this.state.showCycle);\r\n                    this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                        message=\"המחזור נעול - לא ניתן להמר\"   /> ,\r\n                                leagueID: 0});\r\n                    returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                } else {\r\n                    this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                    message=\"קיימים שחקנים שטרם שלחו הימור - לא ניתן לנעול את המחזור\"   /> ,\r\n                    leagueID: 0});\r\n                    returnedTable = <CyclesUpdate   data={this.state} cycleID={this.state.showCycle}\r\n                                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} />;\r\n                }\r\n                break; \r\n            case \"unlock\":\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"נעילת המחזור בוטלה\"   /> ,\r\n                            leagueID: 0});\r\n                Actions.unlockCycle (this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"unclose\":\r\n                Actions.uncloseCycle (this.state.showCycle);\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"המחזור נפתח לעדכון תוצאות משחקים\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"scoreUpdate\":\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"תוצאות המחזור עודכנו\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            default: {\r\n                this.setState({showCycle: eventKey});\r\n                returnedTable = <CyclesUpdate   cycleData={this.state.showCycleData}\r\n                                                gamesDB={this.state.gamesDB}\r\n                                                onSelect={(eventKey)=>{this.switchTab(eventKey)}}\r\n                />\r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0 && this.state.leagueID === 0){\r\n                this.fullLeagueData();\r\n        };\r\n        if (this.state.leagueID !== 0 && this.state.gamesDB !== [] && this.state.showCycle !== this.state.gamesDB[0].cycleid){\r\n            this.getGamesDB();\r\n        };\r\n        if (this.state.leagueID !==0 && this.state.table === 0){\r\n            this.switchTab(this.state.showCycle);\r\n        };\r\n        \r\n        return (\r\n            <div>\r\n                {this.state.toast}\r\n                <AdminNav   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs} \r\n                            cycleID = {this.state.showCycle}\r\n                            cycleData = {this.state.showCycleData}\r\n                             />\r\n                {this.state.table}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Cycle extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0, userBet: 0, bets: [0,]}],\r\n            userIndex: 0,\r\n        }\r\n    }\r\n\r\n\r\n    cycleData = () => {\r\n        let membersArray = this.props.membersIDs;\r\n        let findUserIndexInLeague = membersArray.indexOf(this.props.userID);\r\n        fetch(`https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.games_ids,\r\n                    cycleOrderInLeague: result.order_in_league,\r\n                    isLocked: result.lock_for_bets,\r\n                    membersScores: result.members_scores_cycle,\r\n                    gamesDB: result.gamesDB,\r\n                    userIndex: findUserIndexInLeague,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 'await',  cycleid: parseInt(this.props.cycleID), bets: [0,]}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'טרם נקבע';\r\n                if (this.state.isLocked && game.score > 0){\r\n                    if (game.score === 3)\r\n                        scoreUpdate = 'x';\r\n                    else\r\n                        scoreUpdate = game.score;\r\n                }\r\n                let bet = game.members_bets[this.state.userIndex];\r\n                if (this.state.isLocked && bet === 3)\r\n                    bet = 'x';\r\n                let bonusMark = '';\r\n                if (game.is_bonus)\r\n                    bonusMark = 'בונוס! ';\r\n                return {\r\n                    hometeam: game.home_team,\r\n                    awayteam: game.away_team,\r\n                    score: scoreUpdate,\r\n                    userBet: bet,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    bonus: bonusMark,\r\n                    isbonus: game.is_bonus,\r\n                    bets: game.members_bets,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n        console.log(\"new table\", this.state.table)\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleBet = this.state.table;\r\n        newCycleBet[i].userBet = e.target.value;\r\n        this.setState({table: newCycleBet});\r\n    }\r\n\r\n    checkBets = (table) => {\r\n        let complete = true;\r\n        for (let i = 0; i<table.length; i++){\r\n            if (! (table[i].userBet >= 1 && table[i].userBet <= 3 ||  table[i].userBet === 'x')){\r\n                complete = false;\r\n            }\r\n        }\r\n        this.props.showBetUpdatingToast(complete);\r\n        this.setState({cycleID: 0});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            console.log(\"gamesTable\",this.state.table,this.state.userIndex);\r\n            return fetch('https://toto-server.herokuapp.com/updatebets',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        userIndex: this.state.userIndex,\r\n                        gamesTable: this.state.table,\r\n                    })\r\n            }).then((res) => {\r\n                console.log(\"updatebets res\", res);\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(\"updatebets\", data);\r\n                return this.checkBets(this.state.table);\r\n            }).catch(err => console.log(\"updatebets\", err))\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render (){\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData();\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked || tableArray[0].hometeam === 'await'){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr className=\"tr5column\">\r\n                                <th>תוצאה</th> \r\n                                <th>ההימור שלך</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLine\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.membersNames[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td className=\"hebrew\" >בונוס</td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    return( <tr key={i} className=\"tr5column\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.membersNames[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={(e)=> {\r\n                        e.preventDefault()\r\n                        this.handleSubmit()}} >\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>הימור</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLineFour\" >\r\n                                            <td className=\"hebrew\" className=\"bet\" >\r\n                                                <Form.Group className=\"bet\" >\r\n                                                    <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                        <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                        <option value='1' className=\"hebrew\"  >1</option>\r\n                                                        <option value='2' className=\"hebrew\" >2</option>\r\n                                                        <option value='3' className=\"hebrew\" >x</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td className=\"hebrew\" >בונוס</td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    return( <tr key={i} className=\"hebrew\" >\r\n                                            <td className=\"hebrew\" className=\"bet\" >\r\n                                                <Form.Group className=\"bet\" >\r\n                                                    <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                        <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                        <option value='1' className=\"hebrew\"  >1</option>\r\n                                                        <option value='2' className=\"hebrew\" >2</option>\r\n                                                        <option value='3' className=\"hebrew\" >x</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })}    \r\n                        </tbody>\r\n                        <Button size=\"lg\" style={{color: \"black\"}} type=\"submit\">שמור הימור</Button>\r\n                    </Table>\r\n                </Form>\r\n            </div>\r\n        );}\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport {Toast} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function Feed (props){\r\n\r\n    return (\r\n        <div><p>feed</p></div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Toast} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function Profile (props){\r\n\r\n    return (\r\n        <div><p>profle</p></div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CheckBetsAfterUpdate (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n    let message = \"ההימור עודכן בהצלחה\";\r\n    if (!props.complete){\r\n        message= \"ההימור עודכן! שים לב, קיימים משחקים שלא הימרת עליהם\"\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast  onClose={() => {setShow(false); props.hide(); }} show={show} delay={5000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong >{message}</strong>\r\n                    </Toast.Header>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport League from './pages/League';\r\nimport Admin from './pages/Admin';\r\nimport Cycle from './pages/Cycle';\r\nimport Feed from './pages/Feed';\r\nimport Profile from './pages/Profile';\r\nimport CheckBetsAfterUpdate from './pop-ups/CheckBetsAfterUpdate';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            navBar: \"טוען טבלה...\",\r\n            userID: 0,\r\n            userName: '',\r\n            isAdmin: 0,\r\n            image: '',\r\n            currentLeagueID: 0,\r\n            leagueName: '',\r\n            membersIDs: [],\r\n            membersNames: [],\r\n            cyclesIDs: [],\r\n            membersScores: [],\r\n            currentCycle: 0,\r\n            showCycle: 0,\r\n            cyclesDB: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n    \r\n\r\n    getUserData = () => {\r\n        fetch(`https://toto-server.herokuapp.com/home/user/${this.props.userID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then( res => res.json() )\r\n        .then (data => {\r\n            const result = data;\r\n            this.setState({\r\n                userID: result.userid,\r\n                userName: result.username,\r\n                isAdmin: result.is_admin,\r\n                image: result.image,\r\n                currentLeagueID: result.leagueData.leagueid,\r\n                leagueName: result.leagueData.leaguename,\r\n                membersIDs: result.leagueData.members_ids,\r\n                membersNames: result.leagueData.members_names,\r\n                cyclesIDs: result.leagueData.cycles_ids,\r\n                membersScores: result.leagueData.members_scores_league,\r\n                currentCycle: result.leagueData.current_cycle_id,\r\n                showCycle: result.leagueData.current_cycle_id,  \r\n            });\r\n            console.log(\"home data\",result, this.state);\r\n        }).catch(err => console.log('home', err));\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        console.log(\"switchTab\", eventKey)\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"profile\":\r\n                returnedTable = <Profile  />\r\n                break;\r\n            case \"league\":\r\n                returnedTable = <League userName={this.state.userName}\r\n                                        image={this.state.image}\r\n                                        leagueName = {this.state.leagueName}\r\n                                        membersNames = {this.state.membersNames}\r\n                                        membersScores = {this.state.membersScores}\r\n                                        currentCycle = {this.state.currentCycle}\r\n                />\r\n                break;\r\n            case \"feed\":\r\n                returnedTable = <Feed />\r\n                break;\r\n            default: \r\n                this.setState({showCycle: eventKey});\r\n                returnedTable =  <Cycle cycleID = {this.state.showCycle}\r\n                                        membersNames = {this.state.membersNames}\r\n                                        membersIDs = {this.state.membersIDs}\r\n                                        userID = {this.state.userID}\r\n                                        showBetUpdatingToast = {(complete) => this.setState({\r\n                                            toast: <CheckBetsAfterUpdate show={true} complete={complete} hide={()=>{this.setState({toast: <p></p>})}} />\r\n                                        })}\r\n                />\r\n        }\r\n        this.setState({navBar: returnedTable});\r\n    }\r\n\r\n    render (){\r\n        if (this.props.userID !== 0 && this.state.userID === 0){\r\n                this.getUserData();\r\n        }\r\n        if (this.state.isAdmin){\r\n            return (\r\n                <Admin leagueID={this.state.currentLeagueID} />\r\n            );\r\n        } else {\r\n            if (this.state.navBar === \"טוען טבלה...\"  && this.state.currentCycle !== 0){\r\n                this.switchTab(\"league\");\r\n            }\r\n            return(\r\n                <div>\r\n                    <NavBar onClick={()=>{this.props.logOut()}}\r\n                            onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs}\r\n                            currentCycle={this.state.showCycle} />\r\n                    {this.state.toast}\r\n                    {this.state.image}\r\n                    {this.state.navBar}\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button , Form} from 'react-bootstrap';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    onSubmitSignin = () => {\r\n        if (this.state.signinEmail !== ''){\r\n            return fetch('https://toto-server.herokuapp.com/signin' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"signin\", user);\r\n                this.props.validLogin(user);\r\n        }).catch(err => console.log('signin', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"שם משתמש\" autoComplete=\"username\"  onChange={this.onUsernameChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמא</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"password\" placeholder=\"סיסמא\" autoComplete=\"current-password\"  onChange={this.onPasswordChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    e.preventDefault();\r\n                                    this.onSubmitSignin();\r\n                                }}>\r\n                        התחברות\r\n                        </Button>      \r\n                    </Form.Group>     \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}\r\n","import React from 'react';\r\nimport Home from './components/Home';\r\nimport SignIn from './components/SignIn';\r\nimport './style.css';\r\nimport './importStyle.css';\r\n\r\n\r\nexport default class App extends React.Component  {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      userID: 0,\r\n\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    if (this.state.userID !== 0){\r\n      return (\r\n        <Home\r\n          userID={this.state.userID} \r\n          logOut={()=>{this.setState({userID:0})}}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SignIn\r\n          validLogin ={(userid) => {this.setState({userID: userid})}}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}