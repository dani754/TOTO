{"version":3,"sources":["components/LeagueComponents/LeaguePageNavbar.js","components/LeagueComponents/LeagueTable.js","components/LeagueComponents/CycleTable.js","components/LeagueComponents/CycleBets.js","components/LeagueComponents/CheckBetsAfterUpdate.js","components/pages/LeaguePage.js","components/AdminComponents/AdminNav.js","components/AdminComponents/CyclesUpdate.js","components/AdminComponents/LeagueData.js","components/AdminComponents/AddCycle.js","components/AdminComponents/CloseCycle.js","components/AdminComponents/LockCycle.js","components/pages/AdminPage.js","components/pages/ProfilePage.js","components/pages/Join.js","components/pages/CreateLeague.js","components/pages/HomeNavbar.js","components/Home.js","components/pages/SignInForm.js","components/pages/Register.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["LeaguePageNavbar","props","allCycles","cycles","sort","a","b","Nav","onSelect","eventKey","className","Item","Link","length","indexOf","parseInt","betID","NavDropdown","title","id","map","i","cycleID","LeagueTable","cycleData","url","fetch","method","dataType","then","res","json","data","result","setState","cycleid","console","log","state","catch","err","sortByTotalScore","tableArray","table","totalScore","sortByCycleScore","currentCycleScore","userName","originIndex","this","current_cycle","Array","isArray","names_array","user","index","scores_array","membersscores","Table","striped","bordered","hover","variant","type","onClick","React","Component","CycleTable","gamesIDs","gamesids","cycleOrderInLeague","cycleorderinleague","isLocked","islocked","membersScores","gamesDB","setTable","newTable","gameid","hometeam","awayteam","score","bets","game","scoreUpdate","membersbets","OverlayTrigger","placement","overlay","Tooltip","bet","showenBet","Button","CycleBets","findUserIndexInLeague","membersids","userID","userIndex","userBet","bonusMark","isbonus","gameID","bonus","handleChange","e","newCycleBet","target","value","handleSubmit","headers","body","JSON","stringify","gamesTable","onSubmit","Form","preventDefault","Group","Control","as","size","onChange","style","color","CheckBetsAfterUpdate","useState","show","setShow","message","complete","Row","Col","xs","Toast","onClose","delay","autohide","Header","src","alt","LeaguePage","leagueData","leagueID","leagueid","leagueName","leaguename","cyclesIDs","cyclesids","membersIDs","currentCycleTable","currentBetsCycle","checkBets","toast","switchTab","returnedTable","leagues","Content","AdminNav","actions","Divider","CyclesUpdate","isClosed","isclosed","newScore","newCycleScore","updateScores","addGame","leagueSize","firstGame","deleteGame","placeholder","LeagueData","AddCycle","Body","CloseCycle","LockCycle","AdminPage","addCycle","closeCycle","lockCycle","showCycle","ProfilePage","Join","onLeagueNameChange","event","onLeagueIdChange","JoinLeague","username","onJoining","badSubmition","createLeague","isAdmin","controlId","Label","onNameChange","onScoreMethodChange","scoringMethod","onSubmition","newLeague","scoreMethod","submit","language","HomeNavbar","adminTab","disable","Home","userData","userid","defaultLeague","defaultleague","isadmin","LeagueID","currentLeague","navBar","logOut","SignIn","onEmailChange","signinEmail","onPasswordChange","signinPassword","onSubmitSignin","email","password","onRegistration","autocomplete","Register","newEmail","onUsernameChange","newUserName","newPassword","onPasswordAgainChange","passwordAgain","onSubmitRegister","rePassword","eventsHandler","changeLanguage","register","validLogin","about","login","pageDesign","App","update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83e9fe54.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function LeaguePageNavbar(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"secondNav\" >\r\n               \r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"CycleBets\" >הימורים למחזור {allCycles.length-allCycles.indexOf(parseInt(props.betID))} </Nav.Link>\r\n                </Nav.Item>\r\n               \r\n                    <NavDropdown title=\"החלף מחזור\" id=\"nav-dropdown\" className=\"secondNavItem\">\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id+1000000} key={i} >מחזור {allCycles.length-i}</NavDropdown.Item>\r\n                        );\r\n                    })}\r\n                </NavDropdown>\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"CycleTable\">מחזור {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} </Nav.Link>\r\n                   \r\n                </Nav.Item>\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"LeagueTable\" >טבלת הליגה</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            table: [\r\n                {userName: 'await',\r\n                totalScore: 1,\r\n                currentCycleScore: 1,\r\n                originIndex: 0}],\r\n            cycleID: 0,\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    cycleData: result,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    sortByTotalScore = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    sortByCycleScore  = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.currentCycleScore - a.currentCycleScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    render (){\r\n        if (this.props.data.current_cycle !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.data.current_cycle}`;\r\n            if (this.state.cycleID !== this.props.data.current_cycle){\r\n                this.cycleData(url);\r\n            } \r\n        }\r\n        if (Array.isArray(this.props.data.names_array) && this.state.table[0].userName === 'await' && this.state.cycleID !==0){\r\n            let membersNames = this.props.data.names_array;\r\n            let tableArray = membersNames.map((user,i)=>{\r\n                return {\r\n                    index: i,\r\n                    userName: user,\r\n                    totalScore: this.props.data.scores_array[i],\r\n                    currentCycleScore: this.state.cycleData.membersscores[i],\r\n                 };\r\n            });\r\n            tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n            this.setState({table: tableArray});\r\n        };\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByCycleScore()}>ניקוד למחזור נוכחי</th> \r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByTotalScore()}>סה\"כ נקודות</th> \r\n\r\n                            <th>שם</th> \r\n\r\n                            <th>#</th> \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.table.map((user,i) => {\r\n                      return( <tr>\r\n                            <td>{user.currentCycleScore}</td>\r\n                            <td>{user.totalScore}</td>\r\n                            <td>{user.userName}</td>\r\n                            <td>{i+1}</td>\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class CycleTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0, bets: [0,]}],\r\n\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.props.cycleID, bets: [0,]}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'טרם נקבע';\r\n                if (game.score > 0)\r\n                    scoreUpdate = game.score;\r\n                if (scoreUpdate === 3)\r\n                scoreUpdate = 'x';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: scoreUpdate,\r\n                    cycleid: game.cycleid,\r\n                    bets: game.membersbets,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n        console.log(\"new table\", this.state.table)\r\n    }\r\n\r\n    \r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (this.state.cycleID !== this.props.cycleID){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th>תוצאה</th> \r\n                            <th>קבוצת חוץ</th> \r\n\r\n                            <th>קבוצת בית</th> \r\n\r\n                            <th>#</th> \r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                return( <tr key={i}>\r\n                                            <td><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'left'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-left`} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th>Name</th> \r\n                                                                    <th>Bet</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td>{this.props.data.names_array[i]}</td>\r\n                                                                                <td>{showenBet}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                                <td>{game.awayteam}</td>\r\n\r\n                                                <td>{game.hometeam}</td>\r\n\r\n                                                <td>{i+1}</td>\r\n\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>תוצאה</th> \r\n                            <th>קבוצת חוץ</th> \r\n\r\n                            <th>קבוצת בית</th> \r\n\r\n                            <th>#</th> \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {tableArray.map((game,i) => {\r\n                      return( <tr key={i}>\r\n                            <td>{game.score}</td>\r\n                            <td>{game.awayteam}</td>\r\n\r\n                            <td>{game.hometeam}</td>\r\n\r\n                            <td>{i+1}</td>\r\n\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );}\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class CycleBets extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 0, cycleid: 0}],\r\n            userIndex: 0,\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        let membersArray = this.props.data.membersids;\r\n        let findUserIndexInLeague = membersArray.indexOf(this.props.userID);\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                    userIndex: findUserIndexInLeague,\r\n                });\r\n                console.log(\"state bets cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 'await', cycleid: parseInt(this.props.cycleID)}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'await';\r\n                if (this.state.isLocked){\r\n                    if (game.score > 0)\r\n                    scoreUpdate = game.score;\r\n                    if (scoreUpdate === 3)\r\n                        scoreUpdate = 'x';\r\n                }\r\n                let bet = 'await';\r\n                if (Array.isArray(game.membersbets) && game.membersbets[this.state.userIndex] !== 0){\r\n                    if (this.state.isLocked && game.membersbets[this.state.userIndex] === 3)\r\n                        bet = 'x';\r\n                    else\r\n                        bet = game.membersbets[this.state.userIndex];\r\n                }\r\n                let bonusMark = '';\r\n                if (game.isbonus)\r\n                    bonusMark = 'בונוס! ';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: scoreUpdate,\r\n                    userBet: bet,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    bonus: bonusMark,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleBet = this.state.table;\r\n        newCycleBet[i].userBet = e.target.value;\r\n        this.setState({table: newCycleBet});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            return fetch('https://toto-server.herokuapp.com/updatebets',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        userIndex: this.state.userIndex,\r\n                        gamesTable: this.state.table,\r\n                    })\r\n            }).then((res) => {\r\n                console.log(\"updatebets res\", res);\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(\"updatebets\", data);\r\n                return this.props.onSubmit(this.state.table);\r\n            }).catch(err => console.log(\"updatebets\", err))\r\n        }\r\n    }\r\n\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked || tableArray[0].hometeam === 'await'){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr className=\"tr5column\">\r\n\r\n                            <th>הימור</th> \r\n                            <th>תוצאה</th> \r\n                            <th>קבוצת חוץ</th> \r\n                            <th>קבוצת בית</th> \r\n\r\n\r\n                            <th>#</th> \r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                return( <tr key={i} className=\"tr5column\">\r\n                                        <td>{game.userBet}</td>\r\n\r\n                                            <td>{game.score}</td>\r\n                                            <td>{game.awayteam}</td>\r\n\r\n                                            <td>{game.hometeam}</td>\r\n\r\n                                            <td>{game.bonus}{i+1}</td>\r\n\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n            console.log(\"table bets\", this.state.table);\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={(e)=> {\r\n                            e.preventDefault()\r\n                            this.handleSubmit()}} >\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n\r\n                                <th>הימור</th> \r\n                            <th>קבוצת חוץ</th> \r\n                            <th>קבוצת בית</th> \r\n\r\n\r\n                            <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} className=\"hebrew\" >\r\n                                                    <td className=\"hebrew\" className=\"bet\" >\r\n                                                        <Form.Group className=\"bet\" >\r\n                                                            <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                                <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                                <option value='1' className=\"hebrew\"  >1</option>\r\n                                                                <option value='2' className=\"hebrew\" >2</option>\r\n                                                                <option value='3' className=\"hebrew\" >x</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{game.bonus}{i+1}</td>\r\n\r\n                                                </tr>\r\n                                        );\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button size=\"lg\" style={{color: \"black\"}} type=\"submit\">שמור הימור</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CheckBetsAfterUpdate (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n    let message = \"ההימור עודכן בהצלחה\";\r\n    if (!props.complete){\r\n        message= \"ההימור עודכן! שים לב, קיימים משחקים שטרם הימרת עליהם\"\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">{message}</strong>\r\n                    </Toast.Header>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport LeaguePageNavbar from '../LeagueComponents/LeaguePageNavbar';\r\nimport LeagueTable from '../LeagueComponents/LeagueTable';\r\nimport CycleTable from '../LeagueComponents/CycleTable';\r\nimport CycleBets from '../LeagueComponents/CycleBets';\r\nimport CheckBetsAfterUpdate from '../LeagueComponents/CheckBetsAfterUpdate';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeaguePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            table: 0,\r\n            data: {},\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            userIndex: 0,\r\n            leagues: this.props.leagues,\r\n            currentCycleTable: 0,\r\n            currentBetsCycle: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n\r\n    leagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"league data\", result);\r\n            this.setState({\r\n                data: result,\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                currentCycleTable: result.current_cycle,\r\n                currentBetsCycle: result.cyclesids[result.cyclesids.length-1],\r\n                table: 0,\r\n            });\r\n        }).catch(err => console.log('LeaguePage', err))\r\n    }\r\n\r\n    checkBets = (table) => {\r\n        let complete = true;\r\n        for (let i = 0; i<table.length; i++){\r\n            if (! (table[i].userBet >= 1 && table[i].userBet <= 3 ||  table[i].userBet === 'x')){\r\n                complete = false;\r\n            }\r\n        }\r\n        this.setState({\r\n            toast: <CheckBetsAfterUpdate show={true} complete={complete} />\r\n        });\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"LeagueTable\":\r\n                returnedTable = <LeagueTable data={this.state.data} />;\r\n                break;\r\n            case \"CycleTable\":\r\n                returnedTable = <CycleTable data={this.state.data} cycleID={this.state.currentCycleTable}/>;\r\n                break;\r\n            case \"CycleBets\":\r\n                returnedTable = <CycleBets data={this.state.data} userID={this.props.userID}\r\n                                            cycleID={this.state.currentBetsCycle} onSubmit={(table)=> {\r\n                                                                                        this.switchTab(\"LeagueTable\")\r\n                                                                                        this.checkBets(table) } }  />\r\n                break;\r\n           default: {\r\n                if (eventKey-1000000 >0){\r\n                    this.setState({currentCycleTable: eventKey-1000000});\r\n                    returnedTable = <CycleTable data={this.state.data} cycleID={eventKey-1000000} />;\r\n                } else {\r\n                    this.setState({currentBetsCycle: eventKey});\r\n                    returnedTable = <CycleBets data={this.state.data} cycleID={eventKey} userID={this.props.userID} onSubmit={(id)=>{this.switchTab(id)}} />;\r\n                }\r\n                    \r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/league/${this.props.leagueID}`;\r\n            if (this.state.leagueID !== this.props.leagueID){\r\n                this.leagueData(url);\r\n            }   \r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(\"LeagueTable\");\r\n        };\r\n        let toast = this.state.toast;\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 className=\"hebrew\"> שלום {this.props.userName} ! ברוכים הבאים לליגת {this.state.leagueName} </h1>\r\n                {toast}\r\n                <LeaguePageNavbar   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                    leagues={this.state.leagues} \r\n                                    cycles={this.state.cyclesIDs}\r\n                                    leagueID={this.state.leagueID}\r\n                                    cycleID={this.state.currentCycleTable}\r\n                                    betID={this.state.currentBetsCycle}\r\n                                    />\r\n                <p></p>\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AdminNav(props){\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n    let actions = <></>;\r\n    if (props.cycleID > 0){\r\n        actions =  <NavDropdown id=\"nav-dropdown\"  title=\"edit cycle\"  className=\"secondNavItem\"  >\r\n                        <NavDropdown.Item eventKey=\"lock\" >lock cycle (no more bets) </NavDropdown.Item>\r\n                        <NavDropdown.Item eventKey=\"close\" >close cycle (no more scores updates) </NavDropdown.Item>\r\n                    </NavDropdown>\r\n    }\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link  eventKey={props.cycleID} >Cycle {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} </Nav.Link>\r\n                </Nav.Item>\r\n                {actions}\r\n                <NavDropdown id=\"nav-dropdown\"  title=\"switch cycle\"  className=\"secondNavItem\"  >\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >cycle {allCycles.length-i}</NavDropdown.Item>\r\n                        ); \r\n                    })}\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item eventKey=\"addCycle\" > add a new cycle </NavDropdown.Item>\r\n                </NavDropdown>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link  eventKey=\"LeagueData\">League Data</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../../style.css';\r\n\r\nexport default class CyclesUpdate extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            isClosed: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0}],\r\n            hometeam: '',\r\n            awayteam: '',\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    isClosed: result.isclosed,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                });\r\n                console.log(\"state admin cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.props.cycleID}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: game.score,\r\n                    newScore: game.score,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleScore = this.state.table;\r\n        newCycleScore[i].newScore = e.target.value;\r\n        console.log(\"newCycleScore\", newCycleScore);\r\n        this.setState({table: newCycleScore});\r\n    }\r\n\r\n    updateScores = () => {\r\n        console.log(\"updateScores\", this.state);\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            fetch('https://toto-server.herokuapp.com/updatescores',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        gamesTable: this.state.table,\r\n                        cycleID: this.state.cycleID,\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                console.log(\"response updatescores\", data);\r\n                this.props.onSubmit();\r\n                }).catch(err => console.log(\"updatescores\", err))\r\n        }\r\n    }\r\n\r\n    addGame = () => {\r\n        console.log(\"addGame\", this.state, this.props);\r\n        if (this.state.hometeam !== '' && this.state.awayteam !== ''){\r\n            fetch('https://toto-server.herokuapp.com/addgame',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        hometeam: this.state.hometeam,\r\n                        awayteam: this.state.awayteam,\r\n                        cycleID: this.state.cycleID,\r\n                        leagueID: this.props.data.leagueID,\r\n                        leagueSize: this.props.data.membersIDs.length,\r\n                        firstGame: (this.state.table[0].hometeam === 'await'),\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(\"response addGame\", data);\r\n                    this.props.onSubmit();\r\n                }).catch(err => console.log(\"addGame\", err))\r\n        }\r\n    }\r\n\r\n    deleteGame = (gameID) => {\r\n        console.log(\"delete game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/deletegame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response deletegame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            console.log(\"response deletegame\", data)\r\n        }).catch(err => console.log(\"deletegame\", err))\r\n    }\r\n\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isClosed){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr  >\r\n                            <th>#</th> \r\n                            <th>Home Team</th> \r\n                            <th>Away Team</th> \r\n                            <th>Score</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                return( <tr key={i} >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.score}</td>\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else if (this.state.isLocked) {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.updateScores()}>\r\n                        <Table striped bordered hover variant=\"dark\" >\r\n                            <thead>\r\n                                <tr >\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>Score</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} >\r\n                                                    <td>{i+1}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td>\r\n                                                        <Form.Group>\r\n                                                            <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                                <option value='0' >await</option>\r\n                                                                <option value='1' >1</option>\r\n                                                                <option value='2' >2</option>\r\n                                                                <option value='3' >x</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        );\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.updateScores()} >update scores</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else if (this.state.table[0].hometeam === 'await'){\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>update</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>*</td>\r\n                                    <td><Form.Group>\r\n                                        <Form.Control type=\"text\" placeholder=\"home team\" onChange={(e) => this.setState({hometeam: e.target.value})} value={this.state.hometeam} />\r\n                                    </Form.Group></td>\r\n                                    <td><Form.Group>\r\n                                        <Form.Control type=\"text\" placeholder=\"away team\" onChange={(e) => this.setState({awayteam: e.target.value})} value={this.state.awayteam} />\r\n                                    </Form.Group></td>\r\n                                    <td> <Button style={{color: \"black\"}} type=\"button\" onClick={()=> this.addGame()}  > add </Button> </td>\r\n                                </tr>    \r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>update</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} >\r\n                                                    <td>{i+1}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td>\r\n                                                        <Button variant=\"outline-secondary\" >delete</Button></td>\r\n                                                </tr>\r\n                                        );\r\n                                    })}\r\n                                    <tr>\r\n                                                    <td>*</td>\r\n                                                    <td><Form.Group>\r\n                                                        <Form.Control type=\"text\" placeholder=\"home team\" onChange={(e) => this.setState({hometeam: e.target.value})} value={this.state.hometeam} />\r\n                                                    </Form.Group></td>\r\n                                                    <td><Form.Group>\r\n                                                        <Form.Control type=\"text\" placeholder=\"away team\" onChange={(e) => this.setState({awayteam: e.target.value})} value={this.state.awayteam} />\r\n                                                    </Form.Group></td>\r\n                                                    <td> <Button style={{color: \"black\"}} type=\"button\" onClick={()=> this.addGame()}  > add </Button> </td>\r\n                                                </tr>    \r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport '../../style.css';\r\n\r\nexport default class LeagueData extends React.Component {\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1>League Data</h1>\r\n                <h1>members in league</h1>\r\n                <h1>cycles list</h1>\r\n                <h1>more info</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AddCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">A NEW CYCLE IS OPEN!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>start adding games...</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CloseCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">NO MORE CHANGES!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>This cycle is now closed for updates</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function LockCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">NO MORE BETS!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>This cycle is now locked</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport AdminNav from '../AdminComponents/AdminNav';\r\nimport CyclesUpdate from '../AdminComponents/CyclesUpdate';\r\nimport LeagueData from '../AdminComponents/LeagueData';\r\nimport AddCycle from '../AdminComponents/AddCycle';\r\nimport CloseCycle from '../AdminComponents/CloseCycle';\r\nimport LockCycle from '../AdminComponents/LockCycle';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class AdminPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            names_array: [],\r\n            scores_array: [],\r\n            current_cycle: 0,\r\n            showCycle: 0,\r\n            table: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n\r\n    leagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"league data in admin page\", result);\r\n            this.setState({\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                names_array: result.names_array,\r\n                scores_array: result.scores_array,\r\n                current_cycle: result.current_cycle,\r\n                table: 0,\r\n            });\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    addCycle = (leagueID) => {\r\n        fetch(`https://toto-server.herokuapp.com/addcycle/${leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"add cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    closeCycle = (cycleID) => {\r\n        fetch(`https://toto-server.herokuapp.com/closecycle/${cycleID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"close cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    lockCycle = (cycleID) => {\r\n        fetch(`https://toto-server.herokuapp.com/lockcycle/${cycleID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"lock cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"LeagueData\":\r\n                this.setState({showCycle: 0});\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            case \"addCycle\":\r\n                this.setState({toast: <AddCycle  show={true} /> });\r\n                this.addCycle(this.state.leagueID);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break; \r\n            case \"close\":\r\n                this.setState({toast: <CloseCycle show={true} /> });\r\n                this.closeCycle(this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            case \"lock\":\r\n                this.setState({toast: <LockCycle show={true} /> });\r\n                this.lockCycle(this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            default: {\r\n                this.setState({showCycle: eventKey});\r\n                returnedTable = <CyclesUpdate data={this.state} cycleID={parseInt(eventKey)}\r\n                                                onSubmit={()=> this.setState({leagueID: 0})} />\r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/league/${this.props.leagueID}`;\r\n            if (this.state.leagueID === 0){\r\n                this.leagueData(url);\r\n            }\r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(this.state.current_cycle);\r\n        };\r\n        let toast = this.state.toast;\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 > League {this.state.leagueName} - Admin Page </h1>\r\n                {toast}\r\n                <AdminNav   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs} \r\n                            cycleID = {this.state.showCycle}  />\r\n                <p></p>\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class ProfilePage extends React.Component {\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1>Profile Page - under construction</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Join extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leagueName: '',\r\n            leagueID: 0,\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onLeagueNameChange = (event) => {\r\n        this.setState({leagueName: event.target.value});\r\n    }\r\n    onLeagueIdChange = (event) => {\r\n        this.setState({leagueID: event.target.value});\r\n    }\r\n\r\n    JoinLeague = () => {\r\n        fetch('https://toto-server.herokuapp.com/joinLeague' , {\r\n            method: \"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                leagueName: this.state.leagueName,\r\n                leagueID: this.state.leagueID,\r\n                userID: this.props.userID,\r\n                userName: this.props.username,\r\n            })\r\n        }).then( (res) => res.json())\r\n        .then( data => {\r\n            let leagueID = data[data.length-1];\r\n            console.log(\"join league\", leagueID);\r\n            this.props.onJoining(leagueID);\r\n        }).catch(err => console.log('join', err))\r\n    }\r\n    render (){\r\n        let createLeague = <></>;\r\n        if (this.props.isAdmin === 0){\r\n            createLeague = <Form.Group>\r\n            OR... &nbsp;&nbsp;&nbsp;\r\n                                <Button variant=\"primary\" type=\"submit\" \r\n                                    onClick = {(e)=> {\r\n                                        e.preventDefault();\r\n                                        this.props.createLeague()}} >\r\n                                    Create new League as Admin\r\n                                </Button>\r\n                            </Form.Group>\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"joinForm\">\r\n                    <Form.Group controlId=\"text\">\r\n                        <Form.Label>League Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter league name\" \r\n                                        onChange={this.onLeagueNameChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"text\">\r\n                        <Form.Label>League ID</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter league ID number\" \r\n                                        onChange={this.onLeagueIdChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" size=\"lg\"\r\n                            onClick = {()=> this.JoinLeague()}>\r\n                            Join League\r\n                        </Button>\r\n                    </Form.Group>\r\n                    {createLeague}\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class createLeague extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leagueName: '',\r\n            scoringMethod: 1,\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({leagueName: event.target.value});\r\n    }\r\n    onScoreMethodChange = (event) => {\r\n        this.setState({scoringMethod: event.target.value});\r\n    }\r\n\r\n    onSubmition = () => {\r\n        console.log(\"create league\", this.state);\r\n        if (this.state.leagueName !== ''){\r\n            fetch('https://toto-server.herokuapp.com/createleague' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    leagueName: this.state.leagueName,\r\n                    scoringMethod: this.state.scoringMethod,\r\n                    userID: this.props.userID,\r\n                    userName: this.props.userName,\r\n                })\r\n            }).then((res) => {\r\n                console.log(res);\r\n                res.json()\r\n            })\r\n            .then( data => {\r\n                console.log(\"new league\", data);\r\n                this.props.newLeague();\r\n            }).catch(err => console.log('create league', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        let leagueName=\"League Name\";\r\n        let scoreMethod=\"Scoring method\";\r\n        let submit = \"Create new league as admin\";\r\n        if (this.props.language === \"hebrew\"){\r\n            leagueName=\"שם הליגה\";\r\n            scoreMethod=\"שיטת ניקוד\";\r\n            submit = \"צור ליגה חדשה כמנהל ליגה\";\r\n        }\r\n        console.log(\"inside create league\", this.state)\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{leagueName}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"League Name\" \r\n                                        onChange={this.onNameChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>{scoreMethod}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control as=\"select\" size=\"sm\" onChange={(e)=>this.onScoreMethodChange(e)} value={this.state.scoringMethod}>\r\n                            <option value='1' >The simple method: 1 point for each correct guess (1, 2 or x)</option>\r\n                            <option value='2' >The simple method with an option for bonus games (2 points)</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    this.onSubmition();\r\n                                }}>\r\n                        {submit}\r\n                        </Button>      \r\n                    </Form.Group>           \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}","\r\nimport React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function HomeNavbar (props) {\r\n    \r\n    let adminTab =  <Nav.Item >\r\n                        <Nav.Link eventKey=\"adminPage\"> דף ניהול ליגה </Nav.Link>\r\n                    </Nav.Item>;\r\n    let createLeague = <></>;\r\n    if (props.isAdmin === 0){\r\n        adminTab = <Nav.Item >\r\n        <Nav.Link disable>  </Nav.Link>\r\n                    </Nav.Item>;;\r\n        createLeague = <NavDropdown.Item eventKey=\"create\" > פתח ליגה חדשה כאדמין </NavDropdown.Item>\r\n    }\r\n    \r\n    return (\r\n        \r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item >\r\n                    <Nav.Link eventKey={props.leagueID} > עמוד בית </Nav.Link>\r\n                </Nav.Item>\r\n                <NavDropdown title=\"החלף ליגה\" id=\"nav-dropdown\">\r\n                    {props.leagues.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >ליגה {id}</NavDropdown.Item>\r\n                        );\r\n                        })\r\n                    }\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item eventKey=\"join\" > הצטרף לליגה קיימת</NavDropdown.Item>\r\n                    {createLeague}\r\n                </NavDropdown>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"profilePage\"> פרופיל (בהכנה) </Nav.Link>\r\n                </Nav.Item>\r\n                {adminTab}\r\n                <Nav.Item >\r\n                    <Nav.Link onClick={()=>{props.onClick()}} >התנתק  </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}                \r\n\r\n\r\n","import React from 'react';\r\nimport LeaguePage from './pages/LeaguePage';\r\nimport AdminPage from './pages/AdminPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport Join from './pages/Join';\r\nimport CreateLeague from './pages/CreateLeague';\r\nimport HomeNavbar from './pages/HomeNavbar';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: 0,\r\n            userName: '',\r\n            defaultLeague: 0,\r\n            currentLeague: 0,\r\n            isAdmin: 0,\r\n            leagues: [],\r\n            navBar: 0,\r\n            language: this.props.language,\r\n        }\r\n    }\r\n    \r\n\r\n    userData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then( res => res.json() )\r\n        .then (data => {\r\n            const result = data[0];\r\n            this.setState({\r\n                userID: result.userid,\r\n                userName: result.username,\r\n                defaultLeague: result.defaultleague,\r\n                isAdmin: result.isadmin,\r\n                leagues: result.leagues,\r\n            });\r\n            console.log(\"home data\",result, this.state);\r\n        }).catch(err => console.log('home', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        console.log(\"switchTab\", eventKey)\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"profilePage\":\r\n                returnedTable = <ProfilePage  userID = {this.state.userID}/>\r\n                break;\r\n            case \"adminPage\":\r\n                returnedTable = <AdminPage  leagueID = {this.state.isAdmin}/>\r\n                break;\r\n            case \"create\":\r\n                returnedTable = <CreateLeague userID = {this.state.userID}\r\n                                              userName= {this.state.userName}\r\n                                              newLeague = {()=>{this.setState({userID: 0, defaultLeague:0})}} \r\n                                              language = {this.state.language}    />;\r\n                break;\r\n            case \"join\":\r\n                returnedTable = <Join  userID={this.state.userID} \r\n                                        username={this.state.userName}\r\n                                        onJoining = {(LeagueID)=>{this.switchTab(LeagueID)}}\r\n                                        isAdmin = {this.state.isAdmin}\r\n                                        createLeague = {()=>{this.switchTab(\"create\")}}  />\r\n                break;\r\n            default:{\r\n                    this.setState({currentLeague: parseInt(eventKey)});\r\n                    returnedTable =  <LeaguePage userName = {this.state.userName} \r\n                                                userID = {this.state.userID}\r\n                                                leagueID = {parseInt(eventKey)}\r\n                                                leagues={this.state.leagues} />\r\n            }\r\n        }\r\n        this.setState({navBar: returnedTable});\r\n    }\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/user/${this.props.user}`;\r\n        if (this.props.user !== 0){\r\n            if (this.state.userID === 0) {\r\n                this.userData(url);\r\n            }\r\n        }\r\n        if (this.state.defaultLeague === 0 && this.state.userID !== 0){\r\n            return (\r\n                <Join   userID={this.state.userID} \r\n                        username={this.state.userName}\r\n                        onJoining = {()=>{this.userData(url)}}\r\n                        isAdmin = {this.state.isAdmin}\r\n                        createLeague = {()=>{   \r\n                            console.log(\"create\")\r\n                            this.switchTab(\"create\") }}  />\r\n            );\r\n        }\r\n        else {\r\n            let Content = this.state.navBar;\r\n            if (Content === 0 && this.state.userID !== 0){\r\n                if (this.state.currentLeague === 0)\r\n                    this.switchTab(this.state.defaultLeague);\r\n                else \r\n                    this.switchTab(this.state.currentLeague);\r\n            }\r\n            return (\r\n                <div>\r\n                    <HomeNavbar onClick={()=>{this.props.logOut()}}\r\n                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                isAdmin={this.state.isAdmin}\r\n                                leagues={this.state.leagues} \r\n                                leagueID={this.state.currentLeague} />\r\n                    {Content}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signinEmail: '',\r\n            signinPassword: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signinEmail: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({signinPassword: event.target.value});\r\n    }\r\n\r\n    onSubmitSignin = () => {\r\n        if (this.state.signinEmail !== ''){\r\n            return fetch('https://toto-server.herokuapp.com/signin' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: this.state.signinEmail,\r\n                    password: this.state.signinPassword\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"signin\", user);\r\n                this.props.onRegistration(user);\r\n        }).catch(err => console.log('signin', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        let email=\"Email address\";\r\n        let password=\"Password\";\r\n        let submit = \"Log In\";\r\n        if (this.props.language === \"hebrew\"){\r\n            email=\"כתובת אימייל\";\r\n            password=\"סיסמא\";\r\n            submit = \"התחברות\";\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{email}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" autocomplete=\"username\"\r\n                                        onChange={this.onEmailChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{password}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\r\n                                        onChange={this.onPasswordChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    e.preventDefault();\r\n                                    this.onSubmitSignin();\r\n                                }}>\r\n                        {submit}\r\n                        </Button>      \r\n                    </Form.Group>           \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newEmail: '',\r\n            newUserName: '',\r\n            newPassword: '',\r\n            passwordAgain: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({newEmail: event.target.value});\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({newUserName: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({newPassword: event.target.value});\r\n    }\r\n    onPasswordAgainChange = (event) => {\r\n        this.setState({passwordAgain: event.target.value});\r\n    }\r\n\r\n\r\n    onSubmitRegister = () => {\r\n        if (this.state.newPassword === this.state.passwordAgain){\r\n            fetch('https://toto-server.herokuapp.com/register' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: this.state.newEmail,\r\n                    username: this.state.newUserName,\r\n                    password: this.state.newPassword\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"register\", user);\r\n                this.props.onRegistration(user);\r\n            }).catch(err => console.log('register', err))\r\n        }\r\n    }\r\n    \r\n\r\n    render (){\r\n        let email=\"Email address\";\r\n        let username = \"User Name\";\r\n        let password=\"Password\";\r\n        let rePassword=\"Please re-enter Password\";\r\n        let submit = \"Register\";\r\n        if (this.props.language === \"hebrew\"){\r\n            email=\"כתובת אימייל\";\r\n            username=\"שם משתמש (ציבורי)\";\r\n            password=\"סיסמא\";\r\n            rePassword=\"הזנת הסיסמא בשנית\";\r\n            submit = \"הרשמה\";\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"registerForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{email}</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" autocomplete=\"username\"\r\n                                        onChange={this.onEmailChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formUsername\">\r\n                        <Form.Label>{username}</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter a unique user name (public)\" autocomplete=\"username\"\r\n                                        onChange={this.onUsernameChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{password}</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" autocomplete=\"new-password\"\r\n                                        onChange={this.onPasswordChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{rePassword}</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password (again)\" autocomplete=\"new-password\"\r\n                                        onChange={this.onPasswordAgainChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"\r\n                                            onClick= {()=> this.onSubmitRegister()}>\r\n                            {submit}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport SignInForm from './pages/SignInForm';\r\nimport Register from './pages/Register';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            register: false,\r\n            language: this.props.language,\r\n            userID: 0,\r\n        };\r\n    }\r\n\r\n    eventsHandler = (eventKey) => {\r\n        switch(eventKey){\r\n            case \"english\":\r\n            case \"hebrew\":\r\n                this.props.changeLanguage(eventKey);\r\n                this.setState({language: eventKey});\r\n                break;\r\n            case \"register\":\r\n                this.setState({register: true});\r\n                break;\r\n            case \"login\":\r\n            case \"about\":\r\n                this.setState({register: false});\r\n                break;\r\n            default:\r\n                this.setState({register: false});\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let Content = <SignInForm onRegistration={(user)=> this.setState({userID: user})}\r\n                                  language = {this.state.language} />\r\n        if (this.state.register){\r\n            Content = <Register   onRegistration = {(user)=> this.setState({userID: user})}\r\n                                  language = {this.state.language} /> \r\n        }\r\n        if (this.state.userID !== 0){\r\n            this.props.validLogin(parseInt(this.state.userID));\r\n        }\r\n        let about = 'About';\r\n        let register = 'Register';\r\n        let login = 'Log In';\r\n        let pageDesign = \"signinPage English\"\r\n        if (this.state.language === 'hebrew'){\r\n            about = 'אודות';\r\n            register = 'הרשמה';\r\n            login = 'כניסה לחשבון';\r\n            pageDesign = \"signinPage Hebrew\"\r\n        }\r\n        return (\r\n            <div className={pageDesign} >\r\n                <Nav onSelect={(eventKey) => this.eventsHandler(eventKey)} >\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"english\" >English</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"hebrew\"  >עברית</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"about\"  >{about}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"register\" >{register} </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"login\" >{login}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <div></div>\r\n                {Content}\r\n                <div></div>\r\n            </div>\r\n        );   \r\n    }\r\n}","import React from 'react';\nimport Home from './components/Home';\nimport SignIn from './components/SignIn';\nimport './style.css';\nimport './importStyle.css';\n\n\nexport default class App extends React.Component  {\n  constructor (props) {\n    super(props);\n    this.state = {\n      userID: 0,\n      language: 'english',\n\n    }\n  }\n  \n  render(){\n    if (this.state.userID !== 0){\n      return (\n        <Home\n          user={this.state.userID} \n          logOut={()=>{this.setState({userID:0})}}\n          language = {this.state.language}\n        />\n      );\n    } else {\n      return (\n        <SignIn\n          validLogin ={(userid) => {this.setState({userID: userid})}}\n          changeLanguage = {(update)=>{this.setState({language: update})}}\n        />\n      );\n    }\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}