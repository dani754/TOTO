{"version":3,"sources":["components/LeagueComponents/LeaguePageNavbar.js","components/LeagueComponents/LeagueTable.js","components/LeagueComponents/CycleTable.js","components/LeagueComponents/CheckBetsAfterUpdate.js","components/pages/LeaguePage.js","components/AdminComponents/AdminNav.js","components/AdminComponents/CyclesUpdate.js","components/AdminComponents/LeagueData.js","components/AdminComponents/CycleActions.js","components/ToastMessage.js","components/pages/AdminPage.js","components/pages/ProfilePage.js","components/pages/Join.js","components/pages/CreateLeague.js","components/pages/HomeNavbar.js","components/Home.js","components/pages/SignInForm.js","components/pages/Register.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["LeaguePageNavbar","props","allCycles","cycles","sort","a","b","Nav","onSelect","eventKey","className","Item","Link","length","indexOf","parseInt","cycleID","NavDropdown","id","map","i","LeagueTable","cycleData","url","fetch","method","dataType","then","res","json","data","result","setState","cycleid","console","log","state","catch","err","sortByTotalScore","tableArray","table","totalScore","sortByCycleScore","currentCycleScore","userName","originIndex","this","current_cycle","Array","isArray","names_array","user","index","scores_array","membersscores","Table","striped","bordered","hover","variant","type","onClick","React","Component","CycleTable","findUserIndexInLeague","membersids","userID","gamesIDs","gamesids","cycleOrderInLeague","cycleorderinleague","isLocked","islocked","membersScores","gamesDB","userIndex","setTable","newTable","gameid","hometeam","awayteam","score","userBet","bets","game","scoreUpdate","bet","membersbets","bonusMark","isbonus","gameID","bonus","handleChange","e","newCycleBet","target","value","handleSubmit","headers","body","JSON","stringify","gamesTable","onSubmit","OverlayTrigger","placement","overlay","Tooltip","style","showenBet","Button","Form","preventDefault","Group","Control","as","size","onChange","color","CheckBetsAfterUpdate","useState","show","setShow","message","complete","Row","Col","xs","Toast","onClose","delay","autohide","Header","src","alt","LeaguePage","leagueData","leagueID","leagueid","leagueName","leaguename","cyclesIDs","cyclesids","membersIDs","currentCycleTable","checkBets","toast","switchTab","returnedTable","leagues","Content","betID","currentBetsCycle","AdminNav","cycleCostumizeActions","isclosed","Divider","title","CyclesUpdate","isClosed","newScore","handleGamesInput","teamType","hometeamArray","awayteamArray","addGames","leagueSize","firstGame","gamesToAdd","renderUpdateTable","deleteGame","markAsBonusGame","unmarkAsBonusGame","newCycleScore","updateScores","gamesArray","x","concat","placeholder","LeagueData","onLeagueNameChange","newLeagueName","changeLeagueName","currentLeagueName","answer","onDataChange","currentCycle","updateCurrentCycle","newCurrentCycle","leagueNameProp","Label","cycle","member","verifyBets","ToastMessage","pop","Body","AdminPage","fullLeagueData","scoring_method","cyclesDB","refresh","showCycle","Actions","cyclesArray","find","ProfilePage","Join","event","onLeagueIdChange","JoinLeague","username","onJoining","badSubmition","createLeague","isAdmin","controlId","onNameChange","onScoreMethodChange","scoringMethod","onSubmition","newLeague","scoreMethod","submit","language","HomeNavbar","adminTab","disable","Home","userData","userid","defaultLeague","defaultleague","isadmin","main_language","navBar","LeagueID","currentLeague","logOut","SignIn","onUsernameChange","onPasswordChange","password","onSubmitSignin","signinEmail","loginIn","autoComplete","Register","newUsername","onPublicNameChange","newPublicName","newPassword","onPasswordAgainChange","passwordAgain","onSubmitRegister","publicName","onRegistration","eventsHandler","changeLanguage","register","validLogin","about","login","pageDesign","App","update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9be8b202.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function LeaguePageNavbar(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"secondNav\" >\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"CycleTable\">מחזור {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} </Nav.Link>\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\">\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >מחזור {allCycles.length-i}</NavDropdown.Item>\r\n                        );\r\n                    })}\r\n                    </NavDropdown>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"LeagueTable\" >טבלת הליגה</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            table: [\r\n                {userName: 'await',\r\n                totalScore: 1,\r\n                currentCycleScore: 1,\r\n                originIndex: 0}],\r\n            cycleID: 0,\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    cycleData: result,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    sortByTotalScore = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    sortByCycleScore  = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.currentCycleScore - a.currentCycleScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    render (){\r\n        if (this.props.data.current_cycle !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.data.current_cycle}`;\r\n            if (this.state.cycleID !== this.props.data.current_cycle){\r\n                this.cycleData(url);\r\n            } \r\n        }\r\n        if (Array.isArray(this.props.data.names_array) && this.state.table[0].userName === 'await' && this.state.cycleID !==0){\r\n            let membersNames = this.props.data.names_array;\r\n            let tableArray = membersNames.map((user,i)=>{\r\n                return {\r\n                    index: i,\r\n                    userName: user,\r\n                    totalScore: this.props.data.scores_array[i],\r\n                    currentCycleScore: this.state.cycleData.membersscores[i],\r\n                 };\r\n            });\r\n            tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n            this.setState({table: tableArray});\r\n        };\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByCycleScore()}>ניקוד למחזור נוכחי</th> \r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByTotalScore()}>סה\"כ נקודות</th> \r\n\r\n                            <th>שם</th> \r\n\r\n                            <th>#</th> \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.table.map((user,i) => {\r\n                      return( <tr>\r\n                            <td>{user.currentCycleScore}</td>\r\n                            <td>{user.totalScore}</td>\r\n                            <td>{user.userName}</td>\r\n                            <td>{i+1}</td>\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class CycleTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0, userBet: 0, bets: [0,]}],\r\n            userIndex: 0,\r\n        }\r\n    }\r\n\r\n\r\n    cycleData = (url) => {\r\n        let membersArray = this.props.data.membersids;\r\n        let findUserIndexInLeague = membersArray.indexOf(this.props.userID);\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                    userIndex: findUserIndexInLeague,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 'await',  cycleid: parseInt(this.props.cycleID), bets: [0,]}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'טרם נקבע';\r\n                if (this.state.isLocked && game.score > 0){\r\n                    if (game.score === 3)\r\n                        scoreUpdate = 'x';\r\n                    else\r\n                        scoreUpdate = game.score;\r\n                }\r\n                let bet = game.membersbets[this.state.userIndex];\r\n                if (this.state.isLocked && bet === 3)\r\n                    bet = 'x';\r\n                let bonusMark = '';\r\n                if (game.isbonus)\r\n                    bonusMark = 'בונוס! ';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: scoreUpdate,\r\n                    userBet: bet,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    bonus: bonusMark,\r\n                    isbonus: game.isbonus,\r\n                    bets: game.membersbets,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n        console.log(\"new table\", this.state.table)\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleBet = this.state.table;\r\n        newCycleBet[i].userBet = e.target.value;\r\n        this.setState({table: newCycleBet});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            return fetch('https://toto-server.herokuapp.com/updatebets',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        userIndex: this.state.userIndex,\r\n                        gamesTable: this.state.table,\r\n                    })\r\n            }).then((res) => {\r\n                console.log(\"updatebets res\", res);\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(\"updatebets\", data);\r\n                return this.props.onSubmit(this.state.table);\r\n            }).catch(err => console.log(\"updatebets\", err))\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked || tableArray[0].hometeam === 'await'){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr className=\"tr5column\">\r\n                                <th>תוצאה</th> \r\n                                <th>ההימור שלך</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLine\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.data.names_array[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td className=\"hebrew\" >בונוס</td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    return( <tr key={i} className=\"tr5column\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.data.names_array[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={(e)=> {\r\n                        e.preventDefault()\r\n                        this.handleSubmit()}} >\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>הימור</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLineFour\" >\r\n                                            <td className=\"hebrew\" className=\"bet\" >\r\n                                                <Form.Group className=\"bet\" >\r\n                                                    <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                        <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                        <option value='1' className=\"hebrew\"  >1</option>\r\n                                                        <option value='2' className=\"hebrew\" >2</option>\r\n                                                        <option value='3' className=\"hebrew\" >x</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td className=\"hebrew\" >בונוס</td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    return( <tr key={i} className=\"hebrew\" >\r\n                                            <td className=\"hebrew\" className=\"bet\" >\r\n                                                <Form.Group className=\"bet\" >\r\n                                                    <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                        <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                        <option value='1' className=\"hebrew\"  >1</option>\r\n                                                        <option value='2' className=\"hebrew\" >2</option>\r\n                                                        <option value='3' className=\"hebrew\" >x</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })}    \r\n                        </tbody>\r\n                        <Button size=\"lg\" style={{color: \"black\"}} type=\"submit\">שמור הימור</Button>\r\n                    </Table>\r\n                </Form>\r\n            </div>\r\n        );}\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CheckBetsAfterUpdate (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n    let message = \"ההימור עודכן בהצלחה\";\r\n    if (!props.complete){\r\n        message= \"ההימור עודכן! שים לב, קיימים משחקים שטרם הימרת עליהם\"\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">{message}</strong>\r\n                    </Toast.Header>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport LeaguePageNavbar from '../LeagueComponents/LeaguePageNavbar';\r\nimport LeagueTable from '../LeagueComponents/LeagueTable';\r\nimport CycleTable from '../LeagueComponents/CycleTable';\r\nimport CheckBetsAfterUpdate from '../LeagueComponents/CheckBetsAfterUpdate';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeaguePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            table: 0,\r\n            data: {},\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            userIndex: 0,\r\n            leagues: this.props.leagues,\r\n            currentCycleTable: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n\r\n    leagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"league data\", result);\r\n            this.setState({\r\n                data: result,\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                currentCycleTable: result.current_cycle,\r\n                table: 0,\r\n            });\r\n        }).catch(err => console.log('LeaguePage', err))\r\n    }\r\n\r\n    checkBets = (table) => {\r\n        let complete = true;\r\n        for (let i = 0; i<table.length; i++){\r\n            if (! (table[i].userBet >= 1 && table[i].userBet <= 3 ||  table[i].userBet === 'x')){\r\n                complete = false;\r\n            }\r\n        }\r\n        this.setState({\r\n            toast: <CheckBetsAfterUpdate show={true} complete={complete} />\r\n        });\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"LeagueTable\":\r\n                returnedTable = <LeagueTable data={this.state.data} />;\r\n                break;\r\n            case \"CycleTable\":\r\n                returnedTable = <CycleTable data={this.state.data} cycleID={this.state.currentCycleTable}\r\n                                            userID={this.props.userID} onSubmit={(table)=> {\r\n                                                                                    this.switchTab(\"LeagueTable\")\r\n                                                                                    this.checkBets(table) } }  />\r\n                break;\r\n           default:\r\n                this.setState({currentCycleTable: eventKey});\r\n                returnedTable = <CycleTable data={this.state.data} cycleID={eventKey}\r\n                                            userID={this.props.userID} onSubmit={(table)=> {\r\n                                                                                    this.switchTab(\"LeagueTable\")\r\n                                                                                    this.checkBets(table) } }  />\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/league/${this.props.leagueID}`;\r\n            if (this.state.leagueID !== this.props.leagueID){\r\n                this.leagueData(url);\r\n            }   \r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(\"LeagueTable\");\r\n        };\r\n        let toast = this.state.toast;\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 className=\"hebrew\"> שלום {this.props.userName} ! ברוכים הבאים לליגת {this.state.leagueName} </h1>\r\n                {toast}\r\n                <LeaguePageNavbar   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                    leagues={this.state.leagues} \r\n                                    cycles={this.state.cyclesIDs}\r\n                                    leagueID={this.state.leagueID}\r\n                                    cycleID={this.state.currentCycleTable}\r\n                                    betID={this.state.currentBetsCycle}\r\n                                    />\r\n                <p></p>\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AdminNav(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n\r\n    let showenCycle = props.cycleID;\r\n    if (showenCycle !== 0){\r\n        let cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                            <Nav.Link  eventKey=\"lock\" > נעילת מחזור </Nav.Link>\r\n                        </Nav.Item></>\r\n        if (props.cycleData.islocked){\r\n            if (props.cycleData.isclosed){\r\n                cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"unclose\" > ביטול סגירת מחזור </Nav.Link>\r\n                            </Nav.Item></>\r\n            } else {\r\n                cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"close\" > סגירת מחזור </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"unlock\" > ביטול נעילת מחזור </Nav.Link>\r\n                            </Nav.Item></>\r\n            }\r\n        }\r\n        return (\r\n            <div >\r\n                <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"adminNav\" >\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link  eventKey={props.cycleID} > {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} מחזור </Nav.Link>\r\n                        <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\"  >\r\n                            {allCycles.map((id,i)=>{\r\n                                return(\r\n                                    <NavDropdown.Item eventKey={id} key={i} > {allCycles.length-i} מחזור</NavDropdown.Item>\r\n                                ); \r\n                            })}\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item eventKey=\"addCycle\" >הוסף מחזור חדש  </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav.Item>\r\n                    {cycleCostumizeActions}\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link  eventKey=\"LeagueData\">עמוד ליגה</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"adminNav\" >\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"secondNavItem\" title=\"עבור למחזור\" >\r\n                        {allCycles.map((id,i)=>{\r\n                            return(\r\n                                <NavDropdown.Item eventKey={id} key={i} > {allCycles.length-i} מחזור</NavDropdown.Item>\r\n                            ); \r\n                        })}\r\n\r\n                    </NavDropdown>\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link   eventKey=\"addCycle\" >הוסף מחזור חדש </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\n\r\nexport default class CyclesUpdate extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            isClosed: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0}],\r\n            gamesToAdd: 0,\r\n            hometeam: [\"\"],\r\n            awayteam: [\"\"],\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    isClosed: result.isclosed,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                });\r\n                console.log(\"state admin cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.props.cycleID}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let score = game.score;\r\n                if (this.state.isClosed && score === 3)\r\n                    score = 'x';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: score,\r\n                    newScore: game.score,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    isbonus: game.isbonus,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleGamesInput = (e, i, teamType) => {\r\n        if (teamType ===1){\r\n            let hometeamArray = this.state.hometeam;\r\n            hometeamArray[i] = e.target.value;\r\n            this.setState({hometeam: hometeamArray}); \r\n        } else {\r\n            let awayteamArray = this.state.awayteam;\r\n            awayteamArray[i] = e.target.value;\r\n            this.setState({awayteam: awayteamArray}); \r\n        }\r\n    }\r\n\r\n    addGames = () => {\r\n        for (let i=0; i<= this.state.gamesToAdd; i++){\r\n            if (this.state.hometeam[i] !== '' && this.state.awayteam[i] !== ''){\r\n                fetch('https://toto-server.herokuapp.com/addgame',\r\n                    {\r\n                        method: \"post\",\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                            hometeam: this.state.hometeam[i],\r\n                            awayteam: this.state.awayteam[i],\r\n                            cycleID: this.state.cycleID,\r\n                            leagueID: this.props.data.leagueID,\r\n                            leagueSize: this.props.data.membersIDs.length,\r\n                            firstGame: (this.state.table[0].hometeam === 'await'),\r\n                        })\r\n                    })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        if (i===this.state.gamesToAdd){\r\n                            let renderUpdateTable = this.state.table;\r\n                            renderUpdateTable[0].cycleid = 0;\r\n                            this.setState({\r\n                                cycleID: 0,\r\n                                gamesToAdd: 0,\r\n                                hometeam: [\"\"],\r\n                                awayteam: [\"\"],\r\n                                table: renderUpdateTable,\r\n                            })                            \r\n                        }\r\n                    }).catch(err => console.log(\"addGame\", err))\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    deleteGame = (gameID) => {\r\n        console.log(\"delete game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/deletegame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response deletegame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            })   \r\n            console.log(\"response deletegame\", data)\r\n        }).catch(err => console.log(\"deletegame\", err))\r\n    }\r\n\r\n    markAsBonusGame = (gameID) => {\r\n        console.log(\"bunus game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/bonusgame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response bonusgame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            }) \r\n            console.log(\"response bonusgame\", data)\r\n        }).catch(err => console.log(\"bonusgame\", err))\r\n    }\r\n\r\n    unmarkAsBonusGame = (gameID) => {\r\n        console.log(\"un-bunus game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/unbonusgame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response unbonusgame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            }) \r\n            console.log(\"response unbonusgame\", data)\r\n        }).catch(err => console.log(\"unbonusgame\", err))\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleScore = this.state.table;\r\n        newCycleScore[i].newScore = e.target.value;\r\n        console.log(\"newCycleScore\", newCycleScore);\r\n        this.setState({table: newCycleScore});\r\n    }\r\n\r\n    updateScores = () => {\r\n        console.log(\"updateScores\", this.state);\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            fetch('https://toto-server.herokuapp.com/updatescores',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        gamesTable: this.state.table,\r\n                        cycleID: this.state.cycleID,\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(\"response updatescores\", data);\r\n                    this.props.onSelect(\"scoreUpdate\");\r\n                    this.setState({cycleID: 0});\r\n                }).catch(err => console.log(\"updatescores\", err))\r\n        }\r\n    }\r\n\r\n\r\n    render (){\r\n        console.log(\"cycle update state\", this.state);\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isClosed){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>תוצאה</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLineFour\" >\r\n                                        <td>{game.score}</td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{i+1}</td>\r\n                                    </tr>\r\n                                );} else {\r\n                                    return( <tr key={i} >\r\n                                        <td>{game.score}</td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{i+1}</td>\r\n                                    </tr>\r\n                                );}\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else if (this.state.isLocked) {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.updateScores()}>\r\n                        <Table striped bordered hover variant=\"dark\" >\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>תוצאה</th> \r\n                                    <th>קבוצת חוץ</th> \r\n                                    <th>קבוצת בית</th> \r\n                                    <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        if (game.isbonus){\r\n                                            return( <tr key={i}  className=\"bonusLineFour\" >\r\n                                                <td>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                            <option value='0' >await</option>\r\n                                                            <option value='1' >1</option>\r\n                                                            <option value='2' >2</option>\r\n                                                            <option value='3' >x</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </td>\r\n                                                <td>{game.awayteam}</td>\r\n                                                <td>{game.hometeam}</td>\r\n                                                <td>{i+1}</td>\r\n                                            </tr>\r\n                                        );} else {\r\n                                            return( <tr key={i} >\r\n                                                <td>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                            <option value='0' >await</option>\r\n                                                            <option value='1' >1</option>\r\n                                                            <option value='2' >2</option>\r\n                                                            <option value='3' >x</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </td>\r\n                                                <td>{game.awayteam}</td>\r\n                                                <td>{game.hometeam}</td>\r\n                                                <td>{i+1}</td>\r\n                                            </tr>\r\n                                        );}\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.updateScores()} >update scores</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else {\r\n            let gamesArray = this.state.hometeam;\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th> \r\n                                    <th>קבוצת חוץ</th> \r\n                                    <th>קבוצת בית</th> \r\n                                    <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tableArray.map((game,i) => {\r\n                                    if (game.isbonus){\r\n                                        return( <tr key={i}  className=\"bonusLineFour\" >\r\n                                            <td>\r\n                                                <Button variant=\"outline-secondary\" onClick={()=> this.deleteGame(game.gameID)}  >מחיקה</Button>\r\n                                                <Button variant=\"outline-secondary\"  onClick={()=> this.unmarkAsBonusGame(game.gameID)} >בטל סימון כבונוס</Button>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );} else {\r\n                                        return( <tr key={i} >\r\n                                            <td>\r\n                                                <Button variant=\"outline-secondary\" onClick={()=> this.deleteGame(game.gameID)}  >מחיקה</Button>\r\n                                                <Button variant=\"outline-secondary\"  onClick={()=> this.markAsBonusGame(game.gameID)} >סמן כבונוס</Button>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );}\r\n                                })}\r\n                                {gamesArray.map((x,i) => {\r\n                                    return( <tr key={i} className=\"Hebrew\" >\r\n                                            <td> <Button style={{color: \"black\"}} type=\"button\"\r\n                                                            onClick={()=> this.setState({gamesToAdd: this.state.gamesToAdd+1,\r\n                                                                                        hometeam: this.state.hometeam.concat([\"\"]), awayteam: this.state.awayteam.concat([\"\"])})} >\r\n                                                + </Button> </td>\r\n                                            <td><Form.Group>\r\n                                                <Form.Control type=\"text\" placeholder=\"קבוצת חוץ\" onChange={(e) => {this.handleGamesInput(e,i,2)}}\r\n                                                                                        value={this.state.awayteam[i]} />\r\n                                            </Form.Group></td>\r\n                                            <td><Form.Group>\r\n                                                <Form.Control type=\"text\" placeholder=\"קבוצת בית\" onChange={(e) => {this.handleGamesInput(e,i,1)}}\r\n                                                                                        value={this.state.hometeam[i]} />\r\n                                            </Form.Group></td>\r\n                                            <td>*</td>\r\n                                        </tr>\r\n                                    );\r\n                                })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.addGames()} >הוסף משחקים</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            changeLeagueName: false,\r\n            currentLeagueName: this.props.data.leagueName,\r\n            newLeagueName: '',\r\n            currentCycle: this.props.data.current_cycle,\r\n        }\r\n    }\r\n\r\n    onLeagueNameChange = (e) => {\r\n        this.setState({newLeagueName: e.target.value})\r\n    }\r\n\r\n    changeLeagueName = () => {\r\n        console.log(\"activate changeLeagueName\", this.state)\r\n        if (this.state.newLeagueName !== '' && this.state.newLeagueName !== this.state.currentLeagueName){\r\n            fetch('https://toto-server.herokuapp.com/changeleaguename',\r\n                {\r\n                    method: \"post\",\r\n                    dataType: \"json\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        leagueID: this.props.data.leagueID,\r\n                        newLeagueName: this.state.newLeagueName\r\n                    }),\r\n            }).then( res => res.json()\r\n            ).then ( answer => {\r\n                let result = answer;\r\n                console.log(\"change league name\", result);\r\n                this.setState({\r\n                    changeLeagueName: false,\r\n                    currentLeagueName: this.state.newLeagueName,\r\n                })\r\n                this.props.onDataChange();\r\n            }).catch(err => console.log('AdminPage', err))\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({currentCycle: e.target.value});\r\n    }\r\n\r\n    updateCurrentCycle = () => {\r\n        console.log(\"activate updateCurrentCycle\", this.state)\r\n        if (this.state.currentCycle !== this.props.data.current_cycle){\r\n            fetch('https://toto-server.herokuapp.com/updatecurrentcycle',\r\n                {\r\n                    method: \"post\",\r\n                    dataType: \"json\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        leagueID: this.props.data.leagueID,\r\n                        newCurrentCycle: this.state.currentCycle\r\n                    }),\r\n            }).then( res => res.json()\r\n            ).then ( answer => {\r\n                let result = answer;\r\n                console.log(\"change current league\", result);\r\n                this.props.onDataChange();\r\n            }).catch(err => console.log('AdminPage', err))\r\n        }\r\n    }\r\n\r\n    render (){\r\n\r\n        let leagueNameProp = <Col><Form.Label className=\"Hebrew\"  >שם הליגה:      {this.state.currentLeagueName} </Form.Label></Col>\r\n        if (this.state.changeLeagueName){\r\n            leagueNameProp =   <><Col><Button onClick={()=>this.changeLeagueName()} > עדכן </Button></Col>\r\n                                <Col><Form.Control className=\"Hebrew\" placeholder={this.state.currentLeagueName} onChange={(e)=>this.onLeagueNameChange(e)} /></Col></>\r\n        }\r\n        let cycles = this.props.data.cyclesIDs;\r\n        cycles.sort(function(a, b){return a-b});\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label >פרטים כללים</Form.Label>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={()=>this.setState({changeLeagueName: true})} size=\"sm\" > שנה שם ליגה</Button>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Form.Label className=\"Hebrew\" >מספר הליגה:   {this.props.data.leagueID} </Form.Label>\r\n                            </Col>\r\n                            {leagueNameProp}\r\n                        </Row>\r\n                        <p></p>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={()=>this.updateCurrentCycle()} size=\"sm\" >עדכן</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control as=\"select\" size=\"sm\" value={this.state.currentCycle} onChange={(e)=>this.handleChange(e)} >\r\n                                    {\r\n                                        cycles.map( (cycle, i) => {\r\n                                            return (\r\n                                                <option key={i} value={cycle}>{i+1}</option>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Form.Label>עדכון מחזור להצגה בטבלת הליגה  </Form.Label>\r\n                            </Col>\r\n                        </Row>\r\n                        <p></p>\r\n                    </Form.Group>\r\n                    <Form.Group><Row>\r\n                    <Col>\r\n                            <Form.Label>רשימת משתתפים</Form.Label>\r\n                            <Table striped bordered hover variant=\"dark\" >\r\n                                <thead>\r\n                                    <tr className=\"adminPageNamesTable\" >\r\n                                        <th>סטטוס</th>\r\n                                        <th>שם</th> \r\n                                        <th>#</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.props.data.names_array.map( (member, i) => {\r\n                                            return (\r\n                                                <tr key={i} className=\"adminPageNamesTable\" >\r\n                                                    <td>פעיל</td>\r\n                                                    <td>{member}</td>\r\n                                                    <td>{i+1}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>רשימת מחזורים</Form.Label>\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                    <tr className=\"adminPageCycleTable\" >\r\n                                        <th>סטטוס</th>\r\n                                        <th>#</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.props.data.cyclesIDs.map( (cycle, i) => {\r\n                                            return (\r\n                                                <tr key={i} className=\"adminPageCycleTable\" >\r\n                                                    <td>פעיל</td>\r\n                                                    <td>{i+1}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row></Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function addCycle (leagueID){\r\n        return fetch(`https://toto-server.herokuapp.com/addcycle/${leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"add cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))    \r\n\r\n}\r\n\r\nexport function closeCycle (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/closecycle/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"close cycle\", result);\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function lockCycle (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/lockcycle/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"lock cycle\", result);\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function verifyBets (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/verifybets/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"verify bets before lock cycle\", result);\r\n        return result\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function uncloseCycle (cycleID){\r\n    let url = `https://toto-server.herokuapp.com/unclosecycle/${cycleID}`;\r\n    return fetch(url,\r\n    {\r\n            method: \"get\",\r\n            headers: {'Content-Type': 'application/json'},\r\n    }).then((res) => {\r\n        console.log(\"response unclosecycle\", res)\r\n        res.json()\r\n    }).then((data) => {\r\n        console.log(\"response unclosecycle\", data)\r\n    }).catch(err => console.log(\"unclosecycle\", err))\r\n}\r\n\r\nexport function unlockCycle (cycleID) {\r\n    let url = `https://toto-server.herokuapp.com/unlockcycle/${cycleID}`;\r\n    return fetch(url,\r\n    {\r\n            method: \"get\",\r\n            headers: {'Content-Type': 'application/json'},\r\n    }).then((res) => {\r\n        console.log(\"response unlockcycle\", res)\r\n        res.json()\r\n    }).then((data) => {\r\n        console.log(\"response unlockcycle\", data)\r\n    }).catch(err => console.log(\"unlockcycle\", err))\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nexport default function ToastMessage (props){\r\n\r\n    const [show, setShow] = useState(props.pop);\r\n    \r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => {props.onClose()}} show={show}  >\r\n                <Toast.Header>\r\n            \r\n\r\n          </Toast.Header>\r\n          <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded mr-2\"\r\n              alt=\"\"\r\n            />\r\n                    <Toast.Body>{props.message}</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport AdminNav from '../AdminComponents/AdminNav';\r\nimport CyclesUpdate from '../AdminComponents/CyclesUpdate';\r\nimport LeagueData from '../AdminComponents/LeagueData';\r\nimport * as Actions from '../AdminComponents/CycleActions';\r\nimport ToastMessage from '../ToastMessage';\r\nimport '../../importStyle.css';\r\n\r\nexport default class AdminPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            names_array: [],\r\n            scores_array: [],\r\n            current_cycle: 0,\r\n            scoring_method: 1,\r\n            cyclesDB: 0,\r\n            showCycle: 0,\r\n            table: 0,\r\n            toast: <p></p>,\r\n            refresh: false,\r\n        }\r\n    }\r\n\r\n    fullLeagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            this.setState({\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                names_array: result.names_array,\r\n                scores_array: result.scores_array,\r\n                current_cycle: result.current_cycle,\r\n                scoring_method: result.scoring_method,\r\n                cyclesDB: result.cyclesDB,\r\n                refresh: true,\r\n            });\r\n            console.log(\"league data in admin page\", result, this.state);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable; \r\n        switch(eventKey){\r\n            case \"LeagueData\":\r\n                this.setState({showCycle: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break;\r\n            case \"addCycle\":\r\n                Actions.addCycle (this.props.leagueID);\r\n                this.setState({toast: <ToastMessage pop={true} onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"נוסף מחזור חדש לליגה!\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"close\":\r\n                Actions.closeCycle (this.state.showCycle);\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"המחזור סגור - לא ניתן לעדכן יותר תוצאות\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"lock\":\r\n                let verified = Actions.verifyBets\r\n                if (verified){\r\n                    Actions.lockCycle (this.state.showCycle);\r\n                    this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                        message=\"המחזור נעול - לא ניתן להמר\"   /> ,\r\n                                leagueID: 0});\r\n                    returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                } else {\r\n                    this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                    message=\"קיימים שחקנים שטרם שלחו הימור - לא ניתן לנעול את המחזור\"   /> ,\r\n                    leagueID: 0});\r\n                    returnedTable = <CyclesUpdate   data={this.state} cycleID={this.state.showCycle}\r\n                                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} />;\r\n                }\r\n                break; \r\n            case \"unlock\":\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"נעילת המחזור בוטלה\"   /> ,\r\n                            leagueID: 0});\r\n                Actions.unlockCycle (this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"unclose\":\r\n                Actions.uncloseCycle (this.state.showCycle);\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"המחזור נפתח לעדכון תוצאות משחקים\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"scoreUpdate\":\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"תוצאות המחזור עודכנו\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            default: {\r\n                this.setState({showCycle: eventKey});\r\n                returnedTable = <CyclesUpdate   data={this.state} cycleID={parseInt(eventKey)}\r\n                                            onSelect={(eventKey)=>{this.switchTab(eventKey)}}\r\n                />\r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/leagueadmin/${this.props.leagueID}`;\r\n            if (this.state.leagueID === 0){\r\n                this.fullLeagueData(url);\r\n            }\r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(this.state.current_cycle);\r\n        };\r\n        let toast = this.state.toast;\r\n        let cyclesArray = this.state.cyclesDB;\r\n        let cycleData = 0;\r\n        if (Array.isArray(cyclesArray) && this.state.showCycle > 0){\r\n            cycleData = cyclesArray.find( cycle => cycle.cycleid === parseInt(this.state.showCycle))\r\n        }\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 > ליגת  {this.state.leagueName} - עמוד ניהול </h1>\r\n                {toast}\r\n                <AdminNav   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs} \r\n                            cycleID = {this.state.showCycle}\r\n                            cycleData = {cycleData}\r\n                             />\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class ProfilePage extends React.Component {\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1>Profile Page - under construction</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Join extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leagueName: '',\r\n            leagueID: 0,\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onLeagueNameChange = (event) => {\r\n        this.setState({leagueName: event.target.value});\r\n    }\r\n    onLeagueIdChange = (event) => {\r\n        this.setState({leagueID: event.target.value});\r\n    }\r\n\r\n    JoinLeague = () => {\r\n        fetch('https://toto-server.herokuapp.com/joinLeague' , {\r\n            method: \"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                leagueName: this.state.leagueName,\r\n                leagueID: this.state.leagueID,\r\n                userID: this.props.userID,\r\n                userName: this.props.username,\r\n            })\r\n        }).then( (res) => res.json())\r\n        .then( data => {\r\n            let leagueID = data[data.length-1];\r\n            console.log(\"join league\", leagueID);\r\n            this.props.onJoining(leagueID);\r\n        }).catch(err => console.log('join', err))\r\n    }\r\n    render (){\r\n        let createLeague = <></>;\r\n        if (this.props.isAdmin === 0){\r\n            createLeague = <Form.Group>\r\n            OR... &nbsp;&nbsp;&nbsp;\r\n                                <Button variant=\"primary\" type=\"submit\" \r\n                                    onClick = {(e)=> {\r\n                                        e.preventDefault();\r\n                                        this.props.createLeague()}} >\r\n                                    Create new League as Admin\r\n                                </Button>\r\n                            </Form.Group>\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"joinForm\">\r\n                    <Form.Group controlId=\"text\">\r\n                        <Form.Label>League Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter league name\" \r\n                                        onChange={this.onLeagueNameChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"text\">\r\n                        <Form.Label>League ID</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter league ID number\" \r\n                                        onChange={this.onLeagueIdChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" size=\"lg\"\r\n                            onClick = {()=> this.JoinLeague()}>\r\n                            Join League\r\n                        </Button>\r\n                    </Form.Group>\r\n                    {createLeague}\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class createLeague extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leagueName: '',\r\n            scoringMethod: 1,\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({leagueName: event.target.value});\r\n    }\r\n    onScoreMethodChange = (event) => {\r\n        this.setState({scoringMethod: event.target.value});\r\n    }\r\n\r\n    onSubmition = () => {\r\n        console.log(\"create league\", this.state);\r\n        if (this.state.leagueName !== ''){\r\n            fetch('https://toto-server.herokuapp.com/createleague' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    leagueName: this.state.leagueName,\r\n                    scoringMethod: this.state.scoringMethod,\r\n                    userID: this.props.userID,\r\n                    userName: this.props.userName,\r\n                })\r\n            }).then((res) => {\r\n                console.log(res);\r\n                res.json()\r\n            })\r\n            .then( data => {\r\n                console.log(\"new league\", data);\r\n                this.props.newLeague();\r\n            }).catch(err => console.log('create league', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        let leagueName=\"League Name\";\r\n        let scoreMethod=\"Scoring method\";\r\n        let submit = \"Create new league as admin\";\r\n        if (this.props.language === \"hebrew\"){\r\n            leagueName=\"שם הליגה\";\r\n            scoreMethod=\"שיטת ניקוד\";\r\n            submit = \"צור ליגה חדשה כמנהל ליגה\";\r\n        }\r\n        console.log(\"inside create league\", this.state)\r\n        return (\r\n            <div className=\"Hebrew\" >\r\n                <p></p>\r\n                <Form className=\"registerForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{leagueName}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder={leagueName} \r\n                                        onChange={this.onNameChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>{scoreMethod}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control as=\"select\" size=\"sm\" onChange={(e)=>this.onScoreMethodChange(e)} value={this.state.scoringMethod}>\r\n                            <option value='1' > (2, x, 1) השיטה הבסיסית - נקודה לכל ניחוש נכון בטופס </option>\r\n                            <option value='2' >השיטה הבסיסית עם משחקי בונוס (2 נק')</option>\r\n                            <option value='2' >שיטת היורו (בקרוב)</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    this.onSubmition();\r\n                                }}>\r\n                        {submit}\r\n                        </Button>      \r\n                    </Form.Group>           \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function HomeNavbar (props) {\r\n    \r\n    let adminTab =  <Nav.Item >\r\n                        <Nav.Link eventKey=\"adminPage\"> דף ניהול ליגה </Nav.Link>\r\n                    </Nav.Item>;\r\n    let createLeague = <></>;\r\n    if (props.isAdmin === 0){\r\n        adminTab = <Nav.Item >\r\n        <Nav.Link disable>  </Nav.Link>\r\n                    </Nav.Item>;;\r\n        createLeague = <NavDropdown.Item eventKey=\"create\" > פתח ליגה חדשה כאדמין </NavDropdown.Item>\r\n    }\r\n    \r\n    return (\r\n        \r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item >\r\n                    <Nav.Link eventKey={props.leagueID} > עמוד בית </Nav.Link>\r\n                </Nav.Item>\r\n                <NavDropdown title=\"החלף ליגה\" id=\"nav-dropdown\">\r\n                    {props.leagues.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >ליגה {id}</NavDropdown.Item>\r\n                        );\r\n                        })\r\n                    }\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item eventKey=\"join\" > הצטרף לליגה קיימת</NavDropdown.Item>\r\n                    {createLeague}\r\n                </NavDropdown>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"profilePage\"> פרופיל (בהכנה) </Nav.Link>\r\n                </Nav.Item>\r\n                {adminTab}\r\n                <Nav.Item >\r\n                    <Nav.Link onClick={()=>{props.onClick()}} >התנתק  </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}                \r\n\r\n\r\n","import React from 'react';\r\nimport LeaguePage from './pages/LeaguePage';\r\nimport AdminPage from './pages/AdminPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport Join from './pages/Join';\r\nimport CreateLeague from './pages/CreateLeague';\r\nimport HomeNavbar from './pages/HomeNavbar';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: 0,\r\n            userName: '',\r\n            defaultLeague: 0,\r\n            currentLeague: 0,\r\n            isAdmin: 0,\r\n            leagues: [],\r\n            navBar: 0,\r\n            language: \"english\",\r\n        }\r\n    }\r\n    \r\n\r\n    userData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then( res => res.json() )\r\n        .then (data => {\r\n            const result = data[0];\r\n            this.setState({\r\n                userID: result.userid,\r\n                userName: result.username,\r\n                defaultLeague: result.defaultleague,\r\n                isAdmin: result.isadmin,\r\n                leagues: result.leagues,\r\n                language: result.main_language,\r\n            });\r\n            console.log(\"home data\",result, this.state);\r\n        }).catch(err => console.log('home', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        console.log(\"switchTab\", eventKey)\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"profilePage\":\r\n                returnedTable = <ProfilePage  userID = {this.state.userID}/>\r\n                break;\r\n            case \"adminPage\":\r\n                returnedTable = <AdminPage  leagueID = {this.state.isAdmin} />\r\n                break;\r\n            case \"create\":\r\n                returnedTable = <CreateLeague userID = {this.state.userID}\r\n                                              userName= {this.state.userName}\r\n                                              newLeague = {()=>{this.setState({userID: 0, navBar: 0})}}\r\n                                              language = {this.state.language}    />;\r\n                break;\r\n            case \"join\":\r\n                returnedTable = <Join  userID={this.state.userID} \r\n                                        username={this.state.userName}\r\n                                        onJoining = {(LeagueID)=>{this.switchTab(LeagueID)}}\r\n                                        isAdmin = {this.state.isAdmin}\r\n                                        createLeague = {()=>{this.switchTab(\"create\")}}  />\r\n                break;\r\n            default:{\r\n                    this.setState({currentLeague: parseInt(eventKey)});\r\n                    returnedTable =  <LeaguePage userName = {this.state.userName} \r\n                                                userID = {this.state.userID}\r\n                                                leagueID = {parseInt(eventKey)}\r\n                                                leagues={this.state.leagues} />\r\n            }\r\n        }\r\n        this.setState({navBar: returnedTable});\r\n    }\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/user/${this.props.user}`;\r\n        if (this.props.user !== 0){\r\n            if (this.state.userID === 0) {\r\n                this.userData(url);\r\n            }\r\n        }\r\n        if (this.state.defaultLeague === 0 && this.state.userID !== 0){\r\n            return (\r\n                <Join   userID={this.state.userID} \r\n                        username={this.state.userName}\r\n                        onJoining = {()=>{this.userData(url)}}\r\n                        isAdmin = {this.state.isAdmin}\r\n                        createLeague = {()=> {   \r\n                            this.setState({defaultLeague: -1})\r\n                            this.switchTab(\"create\") }}  />\r\n            );\r\n        }\r\n        else {\r\n            let Content = this.state.navBar;\r\n            if (Content === 0 && this.state.userID !== 0){\r\n                if (this.state.currentLeague === 0)\r\n                    this.switchTab(this.state.defaultLeague);\r\n                else \r\n                    this.switchTab(this.state.currentLeague);\r\n            }\r\n            return (\r\n                <div>\r\n                    <HomeNavbar onClick={()=>{this.props.logOut()}}\r\n                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                isAdmin={this.state.isAdmin}\r\n                                leagues={this.state.leagues} \r\n                                leagueID={this.state.currentLeague} />\r\n                    {Content}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    onSubmitSignin = () => {\r\n        if (this.state.signinEmail !== ''){\r\n            return fetch('https://toto-server.herokuapp.com/signin' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"signin\", user);\r\n                this.props.loginIn(user);\r\n        }).catch(err => console.log('signin', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"שם משתמש\" autoComplete=\"username\"  onChange={this.onUsernameChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמא</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"password\" placeholder=\"סיסמא\" autoComplete=\"current-password\"  onChange={this.onPasswordChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    e.preventDefault();\r\n                                    this.onSubmitSignin();\r\n                                }}>\r\n                        התחברות\r\n                        </Button>      \r\n                    </Form.Group>           \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newUsername: '',\r\n            newPublicName: '',\r\n            newPassword: '',\r\n            passwordAgain: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({newUsername: event.target.value});\r\n    }\r\n    onPublicNameChange = (event) => {\r\n        this.setState({newPublicName: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({newPassword: event.target.value});\r\n    }\r\n    onPasswordAgainChange = (event) => {\r\n        this.setState({passwordAgain: event.target.value});\r\n    }\r\n\r\n\r\n    onSubmitRegister = () => {\r\n        if (this.state.newPassword === this.state.passwordAgain){\r\n            fetch('https://toto-server.herokuapp.com/register' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    username: this.state.newUsername,\r\n                    publicName: this.state.newPublicName,\r\n                    password: this.state.newPassword\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"register\", user);\r\n                this.props.onRegistration(user);\r\n            }).catch(err => console.log('register', err))\r\n        }\r\n    }\r\n    \r\n\r\n    render (){\r\n        \r\n        return (\r\n            <div>\r\n                <Form className=\"registerForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"שם משתמש\" onChange={this.onUsernameChange}    />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>שם פרופיל (פומבי)</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"שם משתמש פומבי\"  onChange={this.onPublicNameChange}    />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמא</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\"  onChange={this.onPasswordChange}    />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמא (שוב)</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password (again)\"   onChange={this.onPasswordAgainChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"\r\n                                onClick = {(e)=> {\r\n                                    e.preventDefault();\r\n                                    this.onSubmitRegister();\r\n                                }}>\r\n                            הירשם\r\n                        </Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport SignInForm from './pages/SignInForm';\r\nimport Register from './pages/Register';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            register: false,\r\n            language: this.props.language,\r\n            userID: 0,\r\n        };\r\n    }\r\n\r\n    eventsHandler = (eventKey) => {\r\n        switch(eventKey){\r\n            case \"english\":\r\n            case \"hebrew\":\r\n                this.props.changeLanguage(eventKey);\r\n                this.setState({language: eventKey});\r\n                break;\r\n            case \"register\":\r\n                this.setState({register: true});\r\n                break;\r\n            case \"login\":\r\n            case \"about\":\r\n                this.setState({register: false});\r\n                break;\r\n            default:\r\n                this.setState({register: false});\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let Content = <SignInForm loginIn={(user)=> this.setState({userID: user})}\r\n                                  language = {this.state.language} />\r\n        if (this.state.register){\r\n            Content = <Register   onRegistration = {(user)=> this.props.validLogin(user)}\r\n                                  language = {this.state.language} /> \r\n        }\r\n        if (this.state.userID !== 0){\r\n            this.props.validLogin(parseInt(this.state.userID));\r\n        }\r\n        let about = 'About';\r\n        let register = 'Register';\r\n        let login = 'Log In';\r\n        let pageDesign = \"signinPage English\"\r\n        if (this.state.language === 'hebrew'){\r\n            about = 'אודות';\r\n            register = 'הרשמה';\r\n            login = 'כניסה לחשבון';\r\n            pageDesign = \"signinPage Hebrew\"\r\n        }\r\n        return (\r\n            <div className={pageDesign} >\r\n                <Nav onSelect={(eventKey) => this.eventsHandler(eventKey)} >\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"english\" >English</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"hebrew\"  >עברית</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"about\"  >{about}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"register\" >{register} </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"login\" >{login}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <div></div>\r\n                {Content}\r\n                <div></div>\r\n            </div>\r\n        );   \r\n    }\r\n}\r\n","import React from 'react';\r\nimport Home from './components/Home';\r\nimport SignIn from './components/SignIn';\r\nimport './style.css';\r\nimport './importStyle.css';\r\n\r\n\r\nexport default class App extends React.Component  {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      userID: 0,\r\n      language: 'english',\r\n\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    if (this.state.userID !== 0){\r\n      return (\r\n        <Home\r\n          user={this.state.userID} \r\n          logOut={()=>{this.setState({userID:0})}}\r\n          language = {this.state.language}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SignIn\r\n          validLogin ={(userid) => {this.setState({userID: userid})}}\r\n          changeLanguage = {(update)=>{this.setState({language: update})}}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}