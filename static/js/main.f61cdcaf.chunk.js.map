{"version":3,"sources":["components/NavBar.js","components/pages/League.js","components/pages/AdminNav.js","components/AdminComponents/CyclesUpdate.js","components/AdminComponents/LeagueData.js","components/AdminComponents/CycleActions.js","components/pop-ups/ToastMessage.js","components/pages/Admin.js","components/pages/Cycle.js","components/pages/Feed.js","components/pages/Profile.js","components/pop-ups/CheckBetsAfterUpdate.js","components/Home.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","allCycles","cycles","sort","a","b","Nav","onSelect","eventKey","Item","Link","onClick","className","currentCycle","length","indexOf","parseInt","NavDropdown","id","map","i","League","getCurrentCycleScores","cycleID","fetch","method","dataType","then","res","json","data","console","log","setState","currentCycleScores","catch","err","sortByTotalScore","tableArray","state","table","totalScore","sortByCycleScore","currentCycleScore","userName","originIndex","this","membersNames","user","index","membersScores","leagueName","Table","striped","bordered","hover","variant","type","React","Component","AdminNav","cycleCostumizeActions","cycleData","islocked","isclosed","Divider","title","CyclesUpdate","url","result","cycleid","gamesIDs","gamesids","cycleOrderInLeague","cycleorderinleague","isLocked","isClosed","membersscores","gamesDB","setTable","newTable","gameid","hometeam","awayteam","score","Array","isArray","game","newScore","gameID","isbonus","handleGamesInput","e","teamType","hometeamArray","target","value","awayteamArray","addGames","headers","body","JSON","stringify","leagueSize","membersIDs","isFirst","gamesToAdd","renderUpdateTable","deleteGame","markAsBonusGame","unmarkAsBonusGame","handleChange","newCycleScore","updateScores","gamesTable","Form","onSubmit","Group","Control","as","size","onChange","Button","style","color","gamesArray","handleSubmit","x","concat","placeholder","LeagueData","onLeagueNameChange","newLeagueName","changeLeagueName","currentLeagueName","leagueID","answer","onDataChange","updateCurrentCycle","current_cycle","newCurrentCycle","leagueNameProp","Col","Label","cyclesIDs","Row","cycle","names_array","member","verifyBets","ToastMessage","useState","pop","show","xs","Toast","onClose","Header","src","alt","Body","message","AdminPage","fullLeagueData","leagueid","leaguename","cycles_ids","members_ids","members_names","members_scores_league","current_cycle_id","showCycle","cyclesDB","refresh","switchTab","returnedTable","toast","Actions","cyclesArray","find","Cycle","findUserIndexInLeague","userID","games_ids","order_in_league","lock_for_bets","members_scores_cycle","userIndex","userBet","bets","scoreUpdate","bet","members_bets","bonusMark","is_bonus","home_team","away_team","bonus","newCycleBet","checkBets","complete","showBetUpdatingToast","OverlayTrigger","placement","overlay","Tooltip","showenBet","preventDefault","Feed","Profile","CheckBetsAfterUpdate","setShow","delay","autohide","Home","getUserData","userid","username","isAdmin","is_admin","image","currentLeagueID","leagueData","navBar","logOut","SignIn","onUsernameChange","event","onPasswordChange","password","onSubmitSignin","signinEmail","validLogin","badSubmition","autoComplete","controlId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f61cdcaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default function NavBar (props) {\r\n    \r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item >\r\n                    <Nav.Link onClick={()=>{props.onClick()}} > התנתק </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"profile\"> פרופיל </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"feed\"> עדכונים </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey={props.currentCycle}>מחזור {allCycles.length-allCycles.indexOf(parseInt(props.currentCycle))} </Nav.Link>\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\">\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >מחזור {allCycles.length-i}</NavDropdown.Item>\r\n                        );\r\n                    })}\r\n                    </NavDropdown>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"league\" > טבלת ליגה </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}                \r\n\r\n\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class League extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            table: [\r\n                {userName: 'await',\r\n                totalScore: 1,\r\n                currentCycleScore: 1,\r\n                originIndex: 0}\r\n            ],\r\n            currentCycleScores: [],\r\n        }\r\n    }\r\n\r\n    getCurrentCycleScores = (cycleID) => {\r\n        fetch(`https://toto-server.herokuapp.com/home/get-cycle-scores/${cycleID}`,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log ('fetching cycle scores', data);\r\n                this.setState({\r\n                    currentCycleScores: data,\r\n                });\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    sortByTotalScore = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    sortByCycleScore  = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.currentCycleScore - a.currentCycleScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    render (){\r\n        if (this.state.table[0].userName === 'await' && this.props.currentCycle !== 0){\r\n            let membersNames = this.props.membersNames;\r\n            if (this.state.currentCycleScores.length === 0 ){\r\n                this.getCurrentCycleScores(this.props.currentCycle)\r\n            } else {\r\n                let tableArray = membersNames.map((user,i)=>{\r\n                    return {\r\n                        index: i,\r\n                        userName: user,\r\n                        totalScore: this.props.membersScores[i],\r\n                        currentCycleScore: this.state.currentCycleScores[i],\r\n                     };\r\n                });\r\n                tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n                this.setState({table: tableArray});\r\n            }\r\n        };\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1> שלום {this.props.userName} ! לליגת {this.props.leagueName} </h1>\r\n                <p></p>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByCycleScore()}>ניקוד למחזור נוכחי</th> \r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByTotalScore()}>סה\"כ נקודות</th> \r\n\r\n                            <th>שם</th> \r\n\r\n                            <th>#</th> \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.table.map((user,i) => {\r\n                      return( <tr>\r\n                            <td>{user.currentCycleScore}</td>\r\n                            <td>{user.totalScore}</td>\r\n                            <td>{user.userName}</td>\r\n                            <td>{i+1}</td>\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AdminNav(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n\r\n    if (props.cycleID !== 0){\r\n        let cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                            <Nav.Link  eventKey=\"lock\" > נעילת מחזור </Nav.Link>\r\n                        </Nav.Item></>\r\n        if (props.cycleData.islocked){\r\n            if (props.cycleData.isclosed){\r\n                cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"unclose\" > ביטול סגירת מחזור </Nav.Link>\r\n                            </Nav.Item></>\r\n            } else {\r\n                cycleCostumizeActions = <><Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"close\" > סגירת מחזור </Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item  className=\"secondNavItem\">\r\n                                <Nav.Link  eventKey=\"unlock\" > ביטול נעילת מחזור </Nav.Link>\r\n                            </Nav.Item></>\r\n            }\r\n        }\r\n        return (\r\n            <div >\r\n                <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"adminNav\" >\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link  eventKey={props.cycleID} > {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} מחזור </Nav.Link>\r\n                        <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\"  >\r\n                            {allCycles.map((id,i)=>{\r\n                                return(\r\n                                    <NavDropdown.Item eventKey={id} key={i} > {allCycles.length-i} מחזור</NavDropdown.Item>\r\n                                ); \r\n                            })}\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item eventKey=\"addCycle\" >הוסף מחזור חדש  </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav.Item>\r\n                    {cycleCostumizeActions}\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link  eventKey=\"LeagueData\">עמוד ליגה</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"adminNav\" >\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"secondNavItem\" title=\"עבור למחזור\" >\r\n                        {allCycles.map((id,i)=>{\r\n                            return(\r\n                                <NavDropdown.Item eventKey={id} key={i} > {allCycles.length-i} מחזור</NavDropdown.Item>\r\n                            ); \r\n                        })}\r\n\r\n                    </NavDropdown>\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                        <Nav.Link   eventKey=\"addCycle\" >הוסף מחזור חדש </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\n\r\nexport default class CyclesUpdate extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            isClosed: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0}],\r\n            gamesToAdd: 0,\r\n            hometeam: [\"\"],\r\n            awayteam: [\"\"],\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    isClosed: result.isclosed,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                });\r\n                console.log(\"state admin cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.props.cycleID}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let score = game.score;\r\n                if (this.state.isClosed && score === 3)\r\n                    score = 'x';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: score,\r\n                    newScore: game.score,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    isbonus: game.isbonus,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleGamesInput = (e, i, teamType) => {\r\n        if (teamType ===1){\r\n            let hometeamArray = this.state.hometeam;\r\n            hometeamArray[i] = e.target.value;\r\n            this.setState({hometeam: hometeamArray}); \r\n        } else {\r\n            let awayteamArray = this.state.awayteam;\r\n            awayteamArray[i] = e.target.value;\r\n            this.setState({awayteam: awayteamArray}); \r\n        }\r\n    }\r\n\r\n    addGames = () => {\r\n        for (let i=0; i<= this.state.gamesToAdd; i++){\r\n            if (this.state.hometeam[i] !== '' && this.state.awayteam[i] !== ''){\r\n                fetch('https://toto-server.herokuapp.com/addgame',\r\n                    {\r\n                        method: \"post\",\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                            hometeam: this.state.hometeam[i],\r\n                            awayteam: this.state.awayteam[i],\r\n                            cycleID: this.state.cycleID,\r\n                            leagueSize: this.props.data.membersIDs.length,\r\n                            isFirst: (this.state.table[0].hometeam === 'await'),\r\n                        })\r\n                    })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        if (i===this.state.gamesToAdd){\r\n                            let renderUpdateTable = this.state.table;\r\n                            renderUpdateTable[0].cycleid = 0;\r\n                            this.setState({\r\n                                cycleID: 0,\r\n                                gamesToAdd: 0,\r\n                                hometeam: [\"\"],\r\n                                awayteam: [\"\"],\r\n                                table: renderUpdateTable,\r\n                            })                            \r\n                        }\r\n                    }).catch(err => console.log(\"addGame\", err))\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    deleteGame = (gameID) => {\r\n        console.log(\"delete game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/deletegame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response deletegame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            })   \r\n            console.log(\"response deletegame\", data)\r\n        }).catch(err => console.log(\"deletegame\", err))\r\n    }\r\n\r\n    markAsBonusGame = (gameID) => {\r\n        console.log(\"bunus game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/bonusgame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response bonusgame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            }) \r\n            console.log(\"response bonusgame\", data)\r\n        }).catch(err => console.log(\"bonusgame\", err))\r\n    }\r\n\r\n    unmarkAsBonusGame = (gameID) => {\r\n        console.log(\"un-bunus game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/unbonusgame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response unbonusgame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            let renderUpdateTable = this.state.table;\r\n            renderUpdateTable[0].cycleid = 0;\r\n            this.setState({\r\n                cycleID: 0,\r\n                table: renderUpdateTable,\r\n            }) \r\n            console.log(\"response unbonusgame\", data)\r\n        }).catch(err => console.log(\"unbonusgame\", err))\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleScore = this.state.table;\r\n        newCycleScore[i].newScore = e.target.value;\r\n        console.log(\"newCycleScore\", newCycleScore);\r\n        this.setState({table: newCycleScore});\r\n    }\r\n\r\n    updateScores = () => {\r\n        console.log(\"updateScores\", this.state);\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            fetch('https://toto-server.herokuapp.com/updatescores',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        gamesTable: this.state.table,\r\n                        cycleID: this.state.cycleID,\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(\"response updatescores\", data);\r\n                    this.props.onSelect(\"scoreUpdate\");\r\n                    this.setState({cycleID: 0});\r\n                }).catch(err => console.log(\"updatescores\", err))\r\n        }\r\n    }\r\n\r\n\r\n    render (){\r\n        console.log(\"cycle update state\", this.state);\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isClosed){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>תוצאה</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLineFour\" >\r\n                                        <td>{game.score}</td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{i+1}</td>\r\n                                    </tr>\r\n                                );} else {\r\n                                    return( <tr key={i} >\r\n                                        <td>{game.score}</td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{i+1}</td>\r\n                                    </tr>\r\n                                );}\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else if (this.state.isLocked) {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.updateScores()}>\r\n                        <Table striped bordered hover variant=\"dark\" >\r\n                            <thead>\r\n                                <tr >\r\n                                    <th>תוצאה</th> \r\n                                    <th>קבוצת חוץ</th> \r\n                                    <th>קבוצת בית</th> \r\n                                    <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        if (game.isbonus){\r\n                                            return( <tr key={i}  className=\"bonusLineFour\" >\r\n                                                <td>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                            <option value='0' >await</option>\r\n                                                            <option value='1' >1</option>\r\n                                                            <option value='2' >2</option>\r\n                                                            <option value='3' >x</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </td>\r\n                                                <td>{game.awayteam}</td>\r\n                                                <td>{game.hometeam}</td>\r\n                                                <td>{i+1}</td>\r\n                                            </tr>\r\n                                        );} else {\r\n                                            return( <tr key={i} >\r\n                                                <td>\r\n                                                    <Form.Group>\r\n                                                        <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                            <option value='0' >await</option>\r\n                                                            <option value='1' >1</option>\r\n                                                            <option value='2' >2</option>\r\n                                                            <option value='3' >x</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </td>\r\n                                                <td>{game.awayteam}</td>\r\n                                                <td>{game.hometeam}</td>\r\n                                                <td>{i+1}</td>\r\n                                            </tr>\r\n                                        );}\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.updateScores()} >update scores</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else {\r\n            let gamesArray = this.state.hometeam;\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th> \r\n                                    <th>קבוצת חוץ</th> \r\n                                    <th>קבוצת בית</th> \r\n                                    <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tableArray.map((game,i) => {\r\n                                    if (game.isbonus){\r\n                                        return( <tr key={i}  className=\"bonusLineFour\" >\r\n                                            <td>\r\n                                                <Button variant=\"outline-secondary\" onClick={()=> this.deleteGame(game.gameID)}  >מחיקה</Button>\r\n                                                <Button variant=\"outline-secondary\"  onClick={()=> this.unmarkAsBonusGame(game.gameID)} >בטל סימון כבונוס</Button>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );} else {\r\n                                        return( <tr key={i} >\r\n                                            <td>\r\n                                                <Button variant=\"outline-secondary\" onClick={()=> this.deleteGame(game.gameID)}  >מחיקה</Button>\r\n                                                <Button variant=\"outline-secondary\"  onClick={()=> this.markAsBonusGame(game.gameID)} >סמן כבונוס</Button>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );}\r\n                                })}\r\n                                {gamesArray.map((x,i) => {\r\n                                    return( <tr key={i} className=\"Hebrew\" >\r\n                                            <td> <Button style={{color: \"black\"}} type=\"button\"\r\n                                                            onClick={()=> this.setState({gamesToAdd: this.state.gamesToAdd+1,\r\n                                                                                        hometeam: this.state.hometeam.concat([\"\"]), awayteam: this.state.awayteam.concat([\"\"])})} >\r\n                                                + </Button> </td>\r\n                                            <td><Form.Group>\r\n                                                <Form.Control type=\"text\" placeholder=\"קבוצת חוץ\" onChange={(e) => {this.handleGamesInput(e,i,2)}}\r\n                                                                                        value={this.state.awayteam[i]} />\r\n                                            </Form.Group></td>\r\n                                            <td><Form.Group>\r\n                                                <Form.Control type=\"text\" placeholder=\"קבוצת בית\" onChange={(e) => {this.handleGamesInput(e,i,1)}}\r\n                                                                                        value={this.state.hometeam[i]} />\r\n                                            </Form.Group></td>\r\n                                            <td>*</td>\r\n                                        </tr>\r\n                                    );\r\n                                })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.addGames()} >הוסף משחקים</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            changeLeagueName: false,\r\n            currentLeagueName: this.props.data.leagueName,\r\n            newLeagueName: '',\r\n            currentCycle: this.props.data.current_cycle,\r\n        }\r\n    }\r\n\r\n    onLeagueNameChange = (e) => {\r\n        this.setState({newLeagueName: e.target.value})\r\n    }\r\n\r\n    changeLeagueName = () => {\r\n        console.log(\"activate changeLeagueName\", this.state)\r\n        if (this.state.newLeagueName !== '' && this.state.newLeagueName !== this.state.currentLeagueName){\r\n            fetch('https://toto-server.herokuapp.com/changeleaguename',\r\n                {\r\n                    method: \"post\",\r\n                    dataType: \"json\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        leagueID: this.props.data.leagueID,\r\n                        newLeagueName: this.state.newLeagueName\r\n                    }),\r\n            }).then( res => res.json()\r\n            ).then ( answer => {\r\n                let result = answer;\r\n                console.log(\"change league name\", result);\r\n                this.setState({\r\n                    changeLeagueName: false,\r\n                    currentLeagueName: this.state.newLeagueName,\r\n                })\r\n                this.props.onDataChange();\r\n            }).catch(err => console.log('AdminPage', err))\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({currentCycle: e.target.value});\r\n    }\r\n\r\n    updateCurrentCycle = () => {\r\n        console.log(\"activate updateCurrentCycle\", this.state)\r\n        if (this.state.currentCycle !== this.props.data.current_cycle){\r\n            fetch('https://toto-server.herokuapp.com/updatecurrentcycle',\r\n                {\r\n                    method: \"post\",\r\n                    dataType: \"json\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        leagueID: this.props.data.leagueID,\r\n                        newCurrentCycle: this.state.currentCycle\r\n                    }),\r\n            }).then( res => res.json()\r\n            ).then ( answer => {\r\n                let result = answer;\r\n                console.log(\"change current league\", result);\r\n                this.props.onDataChange();\r\n            }).catch(err => console.log('AdminPage', err))\r\n        }\r\n    }\r\n\r\n    render (){\r\n\r\n        let leagueNameProp = <Col><Form.Label className=\"Hebrew\"  >שם הליגה:      {this.state.currentLeagueName} </Form.Label></Col>\r\n        if (this.state.changeLeagueName){\r\n            leagueNameProp =   <><Col><Button onClick={()=>this.changeLeagueName()} > עדכן </Button></Col>\r\n                                <Col><Form.Control className=\"Hebrew\" placeholder={this.state.currentLeagueName} onChange={(e)=>this.onLeagueNameChange(e)} /></Col></>\r\n        }\r\n        let cycles = this.props.data.cyclesIDs;\r\n        cycles.sort(function(a, b){return a-b});\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label >פרטים כללים</Form.Label>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={()=>this.setState({changeLeagueName: true})} size=\"sm\" > שנה שם ליגה</Button>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Form.Label className=\"Hebrew\" >מספר הליגה:   {this.props.data.leagueID} </Form.Label>\r\n                            </Col>\r\n                            {leagueNameProp}\r\n                        </Row>\r\n                        <p></p>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button onClick={()=>this.updateCurrentCycle()} size=\"sm\" >עדכן</Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control as=\"select\" size=\"sm\" value={this.state.currentCycle} onChange={(e)=>this.handleChange(e)} >\r\n                                    {\r\n                                        cycles.map( (cycle, i) => {\r\n                                            return (\r\n                                                <option key={i} value={cycle}>{i+1}</option>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col>   \r\n                                <Form.Label>עדכון מחזור להצגה בטבלת הליגה  </Form.Label>\r\n                            </Col>\r\n                        </Row>\r\n                        <p></p>\r\n                    </Form.Group>\r\n                    <Form.Group><Row>\r\n                    <Col>\r\n                            <Form.Label>רשימת משתתפים</Form.Label>\r\n                            <Table striped bordered hover variant=\"dark\" >\r\n                                <thead>\r\n                                    <tr className=\"adminPageNamesTable\" >\r\n                                        <th>סטטוס</th>\r\n                                        <th>שם</th> \r\n                                        <th>#</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.props.data.names_array.map( (member, i) => {\r\n                                            return (\r\n                                                <tr key={i} className=\"adminPageNamesTable\" >\r\n                                                    <td>פעיל</td>\r\n                                                    <td>{member}</td>\r\n                                                    <td>{i+1}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Label>רשימת מחזורים</Form.Label>\r\n                            <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                    <tr className=\"adminPageCycleTable\" >\r\n                                        <th>סטטוס</th>\r\n                                        <th>#</th> \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.props.data.cyclesIDs.map( (cycle, i) => {\r\n                                            return (\r\n                                                <tr key={i} className=\"adminPageCycleTable\" >\r\n                                                    <td>פעיל</td>\r\n                                                    <td>{i+1}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row></Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function addCycle (leagueID){\r\n        return fetch(`https://toto-server.herokuapp.com/addcycle/${leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"add cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))    \r\n\r\n}\r\n\r\nexport function closeCycle (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/closecycle/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"close cycle\", result);\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function lockCycle (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/lockcycle/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"lock cycle\", result);\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function verifyBets (cycleID){\r\n    return fetch(`https://toto-server.herokuapp.com/verifybets/${cycleID}`,\r\n    {\r\n        method: \"get\",\r\n        dataType: \"json\",\r\n        headers: {'Content-Type': 'application/json'},\r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        let result = data;\r\n        console.log(\"verify bets before lock cycle\", result);\r\n        return result\r\n    }).catch(err => console.log('AdminPage', err))\r\n}\r\n\r\nexport function uncloseCycle (cycleID){\r\n    let url = `https://toto-server.herokuapp.com/unclosecycle/${cycleID}`;\r\n    return fetch(url,\r\n    {\r\n            method: \"get\",\r\n            headers: {'Content-Type': 'application/json'},\r\n    }).then((res) => {\r\n        console.log(\"response unclosecycle\", res)\r\n        res.json()\r\n    }).then((data) => {\r\n        console.log(\"response unclosecycle\", data)\r\n    }).catch(err => console.log(\"unclosecycle\", err))\r\n}\r\n\r\nexport function unlockCycle (cycleID) {\r\n    let url = `https://toto-server.herokuapp.com/unlockcycle/${cycleID}`;\r\n    return fetch(url,\r\n    {\r\n            method: \"get\",\r\n            headers: {'Content-Type': 'application/json'},\r\n    }).then((res) => {\r\n        console.log(\"response unlockcycle\", res)\r\n        res.json()\r\n    }).then((data) => {\r\n        console.log(\"response unlockcycle\", data)\r\n    }).catch(err => console.log(\"unlockcycle\", err))\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nexport default function ToastMessage (props){\r\n\r\n    const [show, setShow] = useState(props.pop);\r\n    \r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => {props.onClose()}} show={show}  >\r\n                <Toast.Header>\r\n            \r\n\r\n          </Toast.Header>\r\n          <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded mr-2\"\r\n              alt=\"\"\r\n            />\r\n                    <Toast.Body>{props.message}</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport AdminNav from './AdminNav';\r\nimport CyclesUpdate from '../AdminComponents/CyclesUpdate';\r\nimport LeagueData from '../AdminComponents/LeagueData';\r\nimport * as Actions from '../AdminComponents/CycleActions';\r\nimport ToastMessage from '../pop-ups/ToastMessage';\r\nimport '../../importStyle.css';\r\n\r\nexport default class AdminPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            membersNames: [],\r\n            membersScores: [],          \r\n            currentCycle: 0,\r\n            cyclesDB: 0,\r\n            showCycle: 0,\r\n            table: 0,\r\n            toast: <p></p>,\r\n            refresh: false,\r\n        }\r\n    }\r\n\r\n    fullLeagueData = () => {\r\n        fetch(`https://toto-server.herokuapp.com/home/leagueadmin/${this.props.leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            this.setState({\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cycles_ids,\r\n                membersIDs: result.members_ids,\r\n                membersNames: result.members_names,\r\n                membersScores: result.members_scores_league,\r\n                currentCycle: result.current_cycle_id,\r\n                showCycle: result.current_cycle_id,\r\n                cyclesDB: result.cyclesDB,\r\n                refresh: true,\r\n            });\r\n            console.log(\"league data in admin page\", result, this.state);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable; \r\n        switch(eventKey){\r\n            case \"LeagueData\":\r\n                this.setState({showCycle: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break;\r\n            case \"addCycle\":\r\n                Actions.addCycle (this.props.leagueID);\r\n                this.setState({toast: <ToastMessage pop={true} onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"נוסף מחזור חדש לליגה!\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"close\":\r\n                Actions.closeCycle (this.state.showCycle);\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"המחזור סגור - לא ניתן לעדכן יותר תוצאות\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"lock\":\r\n                let verified = Actions.verifyBets\r\n                if (verified){\r\n                    Actions.lockCycle (this.state.showCycle);\r\n                    this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                        message=\"המחזור נעול - לא ניתן להמר\"   /> ,\r\n                                leagueID: 0});\r\n                    returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                } else {\r\n                    this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                    message=\"קיימים שחקנים שטרם שלחו הימור - לא ניתן לנעול את המחזור\"   /> ,\r\n                    leagueID: 0});\r\n                    returnedTable = <CyclesUpdate   data={this.state} cycleID={this.state.showCycle}\r\n                                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} />;\r\n                }\r\n                break; \r\n            case \"unlock\":\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"נעילת המחזור בוטלה\"   /> ,\r\n                            leagueID: 0});\r\n                Actions.unlockCycle (this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"unclose\":\r\n                Actions.uncloseCycle (this.state.showCycle);\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"המחזור נפתח לעדכון תוצאות משחקים\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            case \"scoreUpdate\":\r\n                this.setState({toast: <ToastMessage pop={true}  onClose= {()=>{this.setState({toast: 0})}}\r\n                                                    message=\"תוצאות המחזור עודכנו\"   /> ,\r\n                            leagueID: 0});\r\n                returnedTable = <LeagueData data={this.state} onDataChange={()=>this.setState({leagueID:0})} />;\r\n                break; \r\n            default: {\r\n                this.setState({showCycle: eventKey});\r\n                returnedTable = <CyclesUpdate   data={this.state} cycleID={parseInt(eventKey)}\r\n                                            onSelect={(eventKey)=>{this.switchTab(eventKey)}}\r\n                />\r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0 && this.state.leagueID === 0){\r\n                this.fullLeagueData();\r\n        }\r\n        if (this.state.table === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(this.state.showCycle);\r\n        };\r\n        let cyclesArray = this.state.cyclesDB;\r\n        let cycleData = 0;\r\n        if (Array.isArray(cyclesArray) && this.state.showCycle > 0){\r\n            cycleData = cyclesArray.find( cycle => cycle.cycleid === parseInt(this.state.showCycle))\r\n        }\r\n        return (\r\n            <div>\r\n                {this.state.toast}\r\n                <AdminNav   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs} \r\n                            cycleID = {this.state.showCycle}\r\n                            cycleData = {cycleData}\r\n                             />\r\n                {this.state.table}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Cycle extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0, userBet: 0, bets: [0,]}],\r\n            userIndex: 0,\r\n        }\r\n    }\r\n\r\n\r\n    cycleData = () => {\r\n        let membersArray = this.props.membersIDs;\r\n        let findUserIndexInLeague = membersArray.indexOf(this.props.userID);\r\n        fetch(`https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.games_ids,\r\n                    cycleOrderInLeague: result.order_in_league,\r\n                    isLocked: result.lock_for_bets,\r\n                    membersScores: result.members_scores_cycle,\r\n                    gamesDB: result.gamesDB,\r\n                    userIndex: findUserIndexInLeague,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 'await',  cycleid: parseInt(this.props.cycleID), bets: [0,]}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'טרם נקבע';\r\n                if (this.state.isLocked && game.score > 0){\r\n                    if (game.score === 3)\r\n                        scoreUpdate = 'x';\r\n                    else\r\n                        scoreUpdate = game.score;\r\n                }\r\n                let bet = game.members_bets[this.state.userIndex];\r\n                if (this.state.isLocked && bet === 3)\r\n                    bet = 'x';\r\n                let bonusMark = '';\r\n                if (game.is_bonus)\r\n                    bonusMark = 'בונוס! ';\r\n                return {\r\n                    hometeam: game.home_team,\r\n                    awayteam: game.away_team,\r\n                    score: scoreUpdate,\r\n                    userBet: bet,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    bonus: bonusMark,\r\n                    isbonus: game.is_bonus,\r\n                    bets: game.members_bets,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n        console.log(\"new table\", this.state.table)\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleBet = this.state.table;\r\n        newCycleBet[i].userBet = e.target.value;\r\n        this.setState({table: newCycleBet});\r\n    }\r\n\r\n    checkBets = (table) => {\r\n        let complete = true;\r\n        for (let i = 0; i<table.length; i++){\r\n            if (! (table[i].userBet >= 1 && table[i].userBet <= 3 ||  table[i].userBet === 'x')){\r\n                complete = false;\r\n            }\r\n        }\r\n        this.props.showBetUpdatingToast(complete);\r\n        this.setState({cycleID: 0});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            console.log(\"gamesTable\",this.state.table,this.state.userIndex);\r\n            return fetch('https://toto-server.herokuapp.com/updatebets',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        userIndex: this.state.userIndex,\r\n                        gamesTable: this.state.table,\r\n                    })\r\n            }).then((res) => {\r\n                console.log(\"updatebets res\", res);\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(\"updatebets\", data);\r\n                return this.checkBets(this.state.table);\r\n            }).catch(err => console.log(\"updatebets\", err))\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render (){\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData();\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked || tableArray[0].hometeam === 'await'){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr className=\"tr5column\">\r\n                                <th>תוצאה</th> \r\n                                <th>ההימור שלך</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLine\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.membersNames[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td className=\"hebrew\" >בונוס</td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    return( <tr key={i} className=\"tr5column\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.membersNames[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={(e)=> {\r\n                        e.preventDefault()\r\n                        this.handleSubmit()}} >\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>הימור</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                if (game.isbonus){\r\n                                    return( <tr key={i} className=\"bonusLineFour\" >\r\n                                            <td className=\"hebrew\" className=\"bet\" >\r\n                                                <Form.Group className=\"bet\" >\r\n                                                    <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                        <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                        <option value='1' className=\"hebrew\"  >1</option>\r\n                                                        <option value='2' className=\"hebrew\" >2</option>\r\n                                                        <option value='3' className=\"hebrew\" >x</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td className=\"hebrew\" >בונוס</td>\r\n                                        </tr>\r\n                                    );\r\n                                } else {\r\n                                    return( <tr key={i} className=\"hebrew\" >\r\n                                            <td className=\"hebrew\" className=\"bet\" >\r\n                                                <Form.Group className=\"bet\" >\r\n                                                    <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                        <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                        <option value='1' className=\"hebrew\"  >1</option>\r\n                                                        <option value='2' className=\"hebrew\" >2</option>\r\n                                                        <option value='3' className=\"hebrew\" >x</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{i+1}</td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                            })}    \r\n                        </tbody>\r\n                        <Button size=\"lg\" style={{color: \"black\"}} type=\"submit\">שמור הימור</Button>\r\n                    </Table>\r\n                </Form>\r\n            </div>\r\n        );}\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport {Toast} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function Feed (props){\r\n\r\n    return (\r\n        <div><p>feed</p></div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Toast} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function Profile (props){\r\n\r\n    return (\r\n        <div><p>profle</p></div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CheckBetsAfterUpdate (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n    let message = \"ההימור עודכן בהצלחה\";\r\n    if (!props.complete){\r\n        message= \"ההימור עודכן! שים לב, קיימים משחקים שטרם הימרת עליהם\"\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">{message}</strong>\r\n                    </Toast.Header>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport League from './pages/League';\r\nimport Admin from './pages/Admin';\r\nimport Cycle from './pages/Cycle';\r\nimport Feed from './pages/Feed';\r\nimport Profile from './pages/Profile';\r\nimport CheckBetsAfterUpdate from './pop-ups/CheckBetsAfterUpdate';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            navBar: \"טוען טבלה...\",\r\n            userID: 0,\r\n            userName: '',\r\n            isAdmin: 0,\r\n            image: '',\r\n            currentLeagueID: 0,\r\n            leagueName: '',\r\n            membersIDs: [],\r\n            membersNames: [],\r\n            cyclesIDs: [],\r\n            membersScores: [],\r\n            currentCycle: 0,\r\n            showCycle: 0,\r\n            cyclesDB: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n    \r\n\r\n    getUserData = () => {\r\n        fetch(`https://toto-server.herokuapp.com/home/user/${this.props.userID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then( res => res.json() )\r\n        .then (data => {\r\n            const result = data;\r\n            this.setState({\r\n                userID: result.userid,\r\n                userName: result.username,\r\n                isAdmin: result.is_admin,\r\n                image: result.image,\r\n                currentLeagueID: result.leagueData.leagueid,\r\n                leagueName: result.leagueData.leaguename,\r\n                membersIDs: result.leagueData.members_ids,\r\n                membersNames: result.leagueData.members_names,\r\n                cyclesIDs: result.leagueData.cycles_ids,\r\n                membersScores: result.leagueData.members_scores_league,\r\n                currentCycle: result.leagueData.current_cycle_id,\r\n                showCycle: result.leagueData.current_cycle_id,  \r\n            });\r\n            console.log(\"home data\",result, this.state);\r\n        }).catch(err => console.log('home', err));\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        console.log(\"switchTab\", eventKey)\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"profile\":\r\n                returnedTable = <Profile  />\r\n                break;\r\n            case \"league\":\r\n                returnedTable = <League userName={this.state.userName}\r\n                                        image={this.state.image}\r\n                                        leagueName = {this.state.leagueName}\r\n                                        membersNames = {this.state.membersNames}\r\n                                        membersScores = {this.state.membersScores}\r\n                                        currentCycle = {this.state.currentCycle}\r\n                />\r\n                break;\r\n            case \"feed\":\r\n                returnedTable = <Feed />\r\n                break;\r\n            default: \r\n                this.setState({showCycle: eventKey});\r\n                returnedTable =  <Cycle cycleID = {this.state.showCycle}\r\n                                        membersNames = {this.state.membersNames}\r\n                                        membersIDs = {this.state.membersIDs}\r\n                                        userID = {this.state.userID}\r\n                                        showBetUpdatingToast = {(complete) => this.setState({\r\n                                            toast: <CheckBetsAfterUpdate show={true} complete={complete} />\r\n                                        })}\r\n                />\r\n        }\r\n        this.setState({navBar: returnedTable});\r\n    }\r\n\r\n    render (){\r\n        if (this.props.userID !== 0 && this.state.userID === 0){\r\n                this.getUserData();\r\n        }\r\n        if (this.state.isAdmin){\r\n            return (\r\n                <Admin leagueID={this.state.currentLeagueID} />\r\n            );\r\n        } else {\r\n            if (this.state.navBar === \"טוען טבלה...\"  && this.state.currentCycle !== 0){\r\n                this.switchTab(\"league\");\r\n            }\r\n            return(\r\n                <div>\r\n                    <NavBar onClick={()=>{this.props.logOut()}}\r\n                            onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs}\r\n                            currentCycle={this.state.showCycle} />\r\n                    {this.state.toast}\r\n                    {this.state.navBar}\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button , Form} from 'react-bootstrap';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    onSubmitSignin = () => {\r\n        if (this.state.signinEmail !== ''){\r\n            return fetch('https://toto-server.herokuapp.com/signin' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"signin\", user);\r\n                this.props.validLogin(user);\r\n        }).catch(err => console.log('signin', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>שם משתמש</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"שם משתמש\" autoComplete=\"username\"  onChange={this.onUsernameChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמא</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"password\" placeholder=\"סיסמא\" autoComplete=\"current-password\"  onChange={this.onPasswordChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    e.preventDefault();\r\n                                    this.onSubmitSignin();\r\n                                }}>\r\n                        התחברות\r\n                        </Button>      \r\n                    </Form.Group>     \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}\r\n","import React from 'react';\r\nimport Home from './components/Home';\r\nimport SignIn from './components/SignIn';\r\nimport './style.css';\r\nimport './importStyle.css';\r\n\r\n\r\nexport default class App extends React.Component  {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      userID: 0,\r\n\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    if (this.state.userID !== 0){\r\n      return (\r\n        <Home\r\n          userID={this.state.userID} \r\n          logOut={()=>{this.setState({userID:0})}}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SignIn\r\n          validLogin ={(userid) => {this.setState({userID: userid})}}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}