{"version":3,"sources":["components/LeagueComponents/LeaguePageNavbar.js","components/LeagueComponents/LeagueTable.js","components/LeagueComponents/CycleTable.js","components/LeagueComponents/CycleBets.js","components/pages/LeaguePage.js","components/AdminComponents/AdminNav.js","components/AdminComponents/CyclesUpdate.js","components/AdminComponents/LeagueData.js","components/AdminComponents/AddCycle.js","components/AdminComponents/CloseCycle.js","components/AdminComponents/LockCycle.js","components/pages/AdminPage.js","components/pages/ProfilePage.js","components/pages/Join.js","components/pages/CreateLeague.js","components/pages/HomeNavbar.js","components/Home.js","components/pages/SignInForm.js","components/pages/Register.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["LeaguePageNavbar","props","allCycles","cycles","sort","a","b","Nav","onSelect","eventKey","className","Item","Link","length","indexOf","parseInt","betID","NavDropdown","title","id","map","i","cycleID","LeagueTable","cycleData","url","fetch","method","dataType","then","res","json","data","result","setState","cycleid","console","log","state","catch","err","sortByTotalScore","tableArray","table","totalScore","sortByCycleScore","currentCycleScore","userName","originIndex","this","current_cycle","Array","isArray","names_array","user","index","scores_array","membersscores","Table","striped","bordered","hover","variant","type","onClick","React","Component","CycleTable","gamesIDs","gamesids","cycleOrderInLeague","cycleorderinleague","isLocked","islocked","membersScores","gamesDB","setTable","newTable","gameid","hometeam","awayteam","score","bets","game","scoreUpdate","membersbets","OverlayTrigger","placement","overlay","Tooltip","bet","showenBet","Button","CycleBets","findUserIndexInLeague","membersids","userID","userIndex","userBet","gameID","handleChange","e","newCycleBet","target","value","handleSubmit","headers","body","JSON","stringify","gamesTable","onSubmit","Form","preventDefault","Group","Control","as","size","onChange","style","color","LeaguePage","leagueData","leagueID","leagueid","leagueName","leaguename","cyclesIDs","cyclesids","membersIDs","currentCycleTable","currentBetsCycle","switchTab","returnedTable","leagues","Content","AdminNav","actions","Divider","CyclesUpdate","isClosed","isclosed","newScore","newCycleScore","updateScores","addGame","leagueSize","firstGame","deleteGame","placeholder","LeagueData","AddCycle","useState","show","setShow","Row","Col","xs","Toast","onClose","delay","autohide","Header","src","alt","Body","CloseCycle","LockCycle","AdminPage","addCycle","closeCycle","lockCycle","showCycle","toast","ProfilePage","Join","onLeagueNameChange","event","onLeagueIdChange","JoinLeague","username","onJoining","badSubmition","createLeague","isAdmin","controlId","Label","onNameChange","onScoreMethodChange","scoringMethod","onSubmition","newLeague","scoreMethod","submit","language","HomeNavbar","adminTab","disable","Home","userData","userid","defaultLeague","defaultleague","isadmin","LeagueID","currentLeague","navBar","logOut","SignIn","onEmailChange","signinEmail","onPasswordChange","signinPassword","onSubmitSignin","email","password","onRegistration","autocomplete","Register","newEmail","onUsernameChange","newUserName","newPassword","onPasswordAgainChange","passwordAgain","onSubmitRegister","rePassword","eventsHandler","changeLanguage","register","validLogin","about","login","pageDesign","App","update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deee85b5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function LeaguePageNavbar(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"secondNav\" >\r\n               \r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"CycleBets\" >הימורים למחזור {allCycles.length-allCycles.indexOf(parseInt(props.betID))} </Nav.Link>\r\n                </Nav.Item>\r\n               \r\n                    <NavDropdown title=\"החלף מחזור\" id=\"nav-dropdown\" className=\"secondNavItem\">\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id+1000000} key={i} >מחזור {allCycles.length-i}</NavDropdown.Item>\r\n                        );\r\n                    })}\r\n                </NavDropdown>\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"CycleTable\">מחזור {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} </Nav.Link>\r\n                   \r\n                </Nav.Item>\r\n                    <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"LeagueTable\" >טבלת הליגה</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            table: [\r\n                {userName: 'await',\r\n                totalScore: 1,\r\n                currentCycleScore: 1,\r\n                originIndex: 0}],\r\n            cycleID: 0,\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    cycleData: result,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    sortByTotalScore = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    sortByCycleScore  = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.currentCycleScore - a.currentCycleScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    render (){\r\n        if (this.props.data.current_cycle !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.data.current_cycle}`;\r\n            if (this.state.cycleID !== this.props.data.current_cycle){\r\n                this.cycleData(url);\r\n            } \r\n        }\r\n        if (Array.isArray(this.props.data.names_array) && this.state.table[0].userName === 'await' && this.state.cycleID !==0){\r\n            let membersNames = this.props.data.names_array;\r\n            let tableArray = membersNames.map((user,i)=>{\r\n                return {\r\n                    index: i,\r\n                    userName: user,\r\n                    totalScore: this.props.data.scores_array[i],\r\n                    currentCycleScore: this.state.cycleData.membersscores[i],\r\n                 };\r\n            });\r\n            this.setState({table: tableArray});\r\n        };\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByCycleScore()}>מחזור נוכחי</th> \r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByTotalScore()}>נקודות</th> \r\n\r\n                            <th>שם</th> \r\n\r\n                            <th>#</th> \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.table.map((user,i) => {\r\n                      return( <tr>\r\n                            <td>{user.currentCycleScore}</td>\r\n                            <td>{user.totalScore}</td>\r\n                            <td>{user.userName}</td>\r\n                            <td>{i+1}</td>\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class CycleTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0, bets: [0,]}],\r\n\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.props.cycleID, bets: [0,]}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'טרם נקבע';\r\n                if (game.score > 0)\r\n                    scoreUpdate = game.score;\r\n                if (scoreUpdate === 3)\r\n                scoreUpdate = 'x';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: scoreUpdate,\r\n                    cycleid: game.cycleid,\r\n                    bets: game.membersbets,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n        console.log(\"new table\", this.state.table)\r\n    }\r\n\r\n    \r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (this.state.cycleID !== this.props.cycleID){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th>תוצאה</th> \r\n                            <th>קבוצת חוץ</th> \r\n\r\n                            <th>קבוצת בית</th> \r\n\r\n                            <th>#</th> \r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                return( <tr key={i}>\r\n                                            <td><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'left'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-left`} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th>Name</th> \r\n                                                                    <th>Bet</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td>{this.props.data.names_array[i]}</td>\r\n                                                                                <td>{showenBet}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                                <td>{game.awayteam}</td>\r\n\r\n                                                <td>{game.hometeam}</td>\r\n\r\n                                                <td>{i+1}</td>\r\n\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>תוצאה</th> \r\n                            <th>קבוצת חוץ</th> \r\n\r\n                            <th>קבוצת בית</th> \r\n\r\n                            <th>#</th> \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {tableArray.map((game,i) => {\r\n                      return( <tr key={i}>\r\n                            <td>{game.score}</td>\r\n                            <td>{game.awayteam}</td>\r\n\r\n                            <td>{game.hometeam}</td>\r\n\r\n                            <td>{i+1}</td>\r\n\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );}\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class CycleBets extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 0, cycleid: 0}],\r\n            userIndex: 0,\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        let membersArray = this.props.data.membersids;\r\n        let findUserIndexInLeague = membersArray.indexOf(this.props.userID);\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                    userIndex: findUserIndexInLeague,\r\n                });\r\n                console.log(\"state bets cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 'await', cycleid: parseInt(this.props.cycleID)}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'await';\r\n                let bet = 'await';\r\n                if (game.score > 0)\r\n                    scoreUpdate = game.score;\r\n                if (scoreUpdate === 3)\r\n                    scoreUpdate = 'x';\r\n                if (Array.isArray(game.membersbets) && game.membersbets[this.state.userIndex] !== 0){\r\n                    if (game.membersbets[this.state.userIndex] === 3)\r\n                        bet = 'x';\r\n                    else\r\n                        bet = game.membersbets[this.state.userIndex];\r\n                }\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: scoreUpdate,\r\n                    userBet: bet,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleBet = this.state.table;\r\n        newCycleBet[i].userBet = e.target.value;\r\n        this.setState({table: newCycleBet});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            return fetch('https://toto-server.herokuapp.com/updatebets',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        userIndex: this.state.userIndex,\r\n                        gamesTable: this.state.table,\r\n                    })\r\n            }).then((res) => {\r\n                console.log(\"updatebets res\", res);\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(\"updatebets\", data);\r\n                return this.props.onSubmit();\r\n            }).catch(err => console.log(\"updatebets\", err))\r\n        }\r\n    }\r\n\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked || tableArray[0].hometeam === 'await'){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr className=\"tr5column\">\r\n\r\n                            <th>הימור</th> \r\n                            <th>תוצאה</th> \r\n                            <th>קבוצת חוץ</th> \r\n                            <th>קבוצת בית</th> \r\n\r\n\r\n                            <th>#</th> \r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                return( <tr key={i} className=\"tr5column\">\r\n                                        <td>{game.userBet}</td>\r\n\r\n                                            <td>{game.score}</td>\r\n                                            <td>{game.awayteam}</td>\r\n\r\n                                            <td>{game.hometeam}</td>\r\n\r\n                                            <td>{i+1}</td>\r\n\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n            console.log(\"table bets\", this.state.table);\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={(e)=> {\r\n                            e.preventDefault()\r\n                            this.handleSubmit()}} >\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n\r\n                                <th>הימור</th> \r\n                            <th>קבוצת חוץ</th> \r\n                            <th>קבוצת בית</th> \r\n\r\n\r\n                            <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} className=\"hebrew\" >\r\n                                                    <td className=\"hebrew\" className=\"bet\" >\r\n                                                        <Form.Group className=\"bet\" >\r\n                                                            <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                                <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                                <option value='1' className=\"hebrew\"  >1</option>\r\n                                                                <option value='2' className=\"hebrew\" >2</option>\r\n                                                                <option value='3' className=\"hebrew\" >x</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{i+1}</td>\r\n\r\n                                                </tr>\r\n                                        );\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button size=\"lg\" style={{color: \"black\"}} type=\"submit\">שמור הימור</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport LeaguePageNavbar from '../LeagueComponents/LeaguePageNavbar';\r\nimport LeagueTable from '../LeagueComponents/LeagueTable';\r\nimport CycleTable from '../LeagueComponents/CycleTable';\r\nimport CycleBets from '../LeagueComponents/CycleBets';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeaguePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            table: 0,\r\n            data: {},\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            userIndex: 0,\r\n            leagues: this.props.leagues,\r\n            currentCycleTable: 0,\r\n            currentBetsCycle: 0,\r\n        }\r\n    }\r\n\r\n    leagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"league data\", result);\r\n            this.setState({\r\n                data: result,\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                currentCycleTable: result.current_cycle,\r\n                currentBetsCycle: result.cyclesids[result.cyclesids.length-1],\r\n                table: 0,\r\n            });\r\n        }).catch(err => console.log('LeaguePage', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"LeagueTable\":\r\n                returnedTable = <LeagueTable data={this.state.data} />;\r\n                break;\r\n            case \"CycleTable\":\r\n                returnedTable = <CycleTable data={this.state.data} cycleID={this.state.currentCycleTable}/>;\r\n                break;\r\n            case \"CycleBets\":\r\n                returnedTable = <CycleBets data={this.state.data} userID={this.props.userID}\r\n                                            cycleID={this.state.currentBetsCycle} onSubmit={()=>{this.switchTab(\"LeagueTable\")}}  />;\r\n                break;\r\n           default: {\r\n                if (eventKey-1000000 >0){\r\n                    this.setState({currentCycleTable: eventKey-1000000});\r\n                    returnedTable = <CycleTable data={this.state.data} cycleID={eventKey-1000000} />;\r\n                } else {\r\n                    this.setState({currentBetsCycle: eventKey});\r\n                    returnedTable = <CycleBets data={this.state.data} cycleID={eventKey} userID={this.props.userID} onSubmit={(id)=>{this.switchTab(id)}} />;\r\n                }\r\n                    \r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/league/${this.props.leagueID}`;\r\n            if (this.state.leagueID !== this.props.leagueID){\r\n                this.leagueData(url);\r\n            }   \r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(\"LeagueTable\");\r\n        };\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 className=\"hebrew\"> שלום {this.props.userName} ! ברוכים הבאים לליגת {this.state.leagueName} </h1>\r\n                <p></p>\r\n                <LeaguePageNavbar   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                    leagues={this.state.leagues} \r\n                                    cycles={this.state.cyclesIDs}\r\n                                    leagueID={this.state.leagueID}\r\n                                    cycleID={this.state.currentCycleTable}\r\n                                    betID={this.state.currentBetsCycle}\r\n                                    />\r\n                <p></p>\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AdminNav(props){\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n    let actions = <></>;\r\n    if (props.cycleID > 0){\r\n        actions =  <NavDropdown id=\"nav-dropdown\"  title=\"edit cycle\"  className=\"secondNavItem\"  >\r\n                        <NavDropdown.Item eventKey=\"lock\" >lock cycle (no more bets) </NavDropdown.Item>\r\n                        <NavDropdown.Item eventKey=\"close\" >close cycle (no more scores updates) </NavDropdown.Item>\r\n                    </NavDropdown>\r\n    }\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link  eventKey={props.cycleID} >Cycle {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} </Nav.Link>\r\n                </Nav.Item>\r\n                {actions}\r\n                <NavDropdown id=\"nav-dropdown\"  title=\"switch cycle\"  className=\"secondNavItem\"  >\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >cycle {allCycles.length-i}</NavDropdown.Item>\r\n                        ); \r\n                    })}\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item eventKey=\"addCycle\" > add a new cycle </NavDropdown.Item>\r\n                </NavDropdown>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link  eventKey=\"LeagueData\">League Data</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\n\r\nexport default class CyclesUpdate extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            isClosed: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0}],\r\n            hometeam: '',\r\n            awayteam: '',\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    isClosed: result.isclosed,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                });\r\n                console.log(\"state admin cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.props.cycleID}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: game.score,\r\n                    newScore: game.score,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleScore = this.state.table;\r\n        newCycleScore[i].newScore = e.target.value;\r\n        console.log(\"newCycleScore\", newCycleScore);\r\n        this.setState({table: newCycleScore});\r\n    }\r\n\r\n    updateScores = () => {\r\n        console.log(\"updateScores\", this.state);\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            fetch('https://toto-server.herokuapp.com/updatescores',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        gamesTable: this.state.table,\r\n                        cycleID: this.state.cycleID,\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                console.log(\"response updatescores\", data);\r\n                this.props.onSubmit();\r\n                }).catch(err => console.log(\"updatescores\", err))\r\n        }\r\n    }\r\n\r\n    addGame = () => {\r\n        console.log(\"addGame\", this.state, this.props);\r\n        if (this.state.hometeam !== '' && this.state.awayteam !== ''){\r\n            fetch('https://toto-server.herokuapp.com/addgame',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        hometeam: this.state.hometeam,\r\n                        awayteam: this.state.awayteam,\r\n                        cycleID: this.state.cycleID,\r\n                        leagueID: this.props.data.leagueID,\r\n                        leagueSize: this.props.data.membersIDs.length,\r\n                        firstGame: (this.state.table[0].hometeam === 'await'),\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(\"response addGame\", data);\r\n                    this.props.onSubmit();\r\n                }).catch(err => console.log(\"addGame\", err))\r\n        }\r\n    }\r\n\r\n    deleteGame = (gameID) => {\r\n        console.log(\"delete game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/deletegame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response deletegame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            console.log(\"response deletegame\", data)\r\n        }).catch(err => console.log(\"deletegame\", err))\r\n    }\r\n\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isClosed){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr  >\r\n                            <th>#</th> \r\n                            <th>Home Team</th> \r\n                            <th>Away Team</th> \r\n                            <th>Score</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                return( <tr key={i} >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.score}</td>\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else if (this.state.isLocked) {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.updateScores()}>\r\n                        <Table striped bordered hover variant=\"dark\" >\r\n                            <thead>\r\n                                <tr >\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>Score</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} >\r\n                                                    <td>{i+1}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td>\r\n                                                        <Form.Group>\r\n                                                            <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                                <option value='0' >await</option>\r\n                                                                <option value='1' >1</option>\r\n                                                                <option value='2' >2</option>\r\n                                                                <option value='3' >x</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        );\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.updateScores()} >update scores</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else if (this.state.table[0].hometeam === 'await'){\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>update</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>*</td>\r\n                                    <td><Form.Group>\r\n                                        <Form.Control type=\"text\" placeholder=\"home team\" onChange={(e) => this.setState({hometeam: e.target.value})} value={this.state.hometeam} />\r\n                                    </Form.Group></td>\r\n                                    <td><Form.Group>\r\n                                        <Form.Control type=\"text\" placeholder=\"away team\" onChange={(e) => this.setState({awayteam: e.target.value})} value={this.state.awayteam} />\r\n                                    </Form.Group></td>\r\n                                    <td> <Button style={{color: \"black\"}} type=\"button\" onClick={()=> this.addGame()}  > add </Button> </td>\r\n                                </tr>    \r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>update</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} >\r\n                                                    <td>{i+1}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td> <Button style={{color: \"black\"}} type=\"button\" onClick={() => this.deleteGame(game.gameID)} >delete</Button> </td>\r\n                                                </tr>\r\n                                        );\r\n                                    })}\r\n                                    <tr>\r\n                                                    <td>*</td>\r\n                                                    <td><Form.Group>\r\n                                                        <Form.Control type=\"text\" placeholder=\"home team\" onChange={(e) => this.setState({hometeam: e.target.value})} value={this.state.hometeam} />\r\n                                                    </Form.Group></td>\r\n                                                    <td><Form.Group>\r\n                                                        <Form.Control type=\"text\" placeholder=\"away team\" onChange={(e) => this.setState({awayteam: e.target.value})} value={this.state.awayteam} />\r\n                                                    </Form.Group></td>\r\n                                                    <td> <Button style={{color: \"black\"}} type=\"button\" onClick={()=> this.addGame()}  > add </Button> </td>\r\n                                                </tr>    \r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport '../../style.css';\r\n\r\nexport default class LeagueData extends React.Component {\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1>League Data</h1>\r\n                <h1>members in league</h1>\r\n                <h1>cycles list</h1>\r\n                <h1>more info</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AddCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">A NEW CYCLE IS OPEN!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>start adding games...</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CloseCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">NO MORE CHANGES!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>This cycle is now closed for updates</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function LockCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">NO MORE BETS!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>This cycle is now locked</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport AdminNav from '../AdminComponents/AdminNav';\r\nimport CyclesUpdate from '../AdminComponents/CyclesUpdate';\r\nimport LeagueData from '../AdminComponents/LeagueData';\r\nimport AddCycle from '../AdminComponents/AddCycle';\r\nimport CloseCycle from '../AdminComponents/CloseCycle';\r\nimport LockCycle from '../AdminComponents/LockCycle';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class AdminPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            names_array: [],\r\n            scores_array: [],\r\n            current_cycle: 0,\r\n            showCycle: 0,\r\n            table: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n\r\n    leagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"league data in admin page\", result);\r\n            this.setState({\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                names_array: result.names_array,\r\n                scores_array: result.scores_array,\r\n                current_cycle: result.current_cycle,\r\n                table: 0,\r\n            });\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    addCycle = (leagueID) => {\r\n        fetch(`https://toto-server.herokuapp.com/addcycle/${leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"add cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    closeCycle = (cycleID) => {\r\n        fetch(`https://toto-server.herokuapp.com/closecycle/${cycleID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"close cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    lockCycle = (cycleID) => {\r\n        fetch(`https://toto-server.herokuapp.com/lockcycle/${cycleID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"lock cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"LeagueData\":\r\n                this.setState({showCycle: 0});\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            case \"addCycle\":\r\n                this.setState({toast: <AddCycle  show={true} /> });\r\n                this.addCycle(this.state.leagueID);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break; \r\n            case \"close\":\r\n                this.setState({toast: <CloseCycle show={true} /> });\r\n                this.closeCycle(this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            case \"lock\":\r\n                this.setState({toast: <LockCycle show={true} /> });\r\n                this.lockCycle(this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            default: {\r\n                this.setState({showCycle: eventKey});\r\n                returnedTable = <CyclesUpdate data={this.state} cycleID={parseInt(eventKey)}\r\n                                                onSubmit={()=> this.setState({leagueID: 0})} />\r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/league/${this.props.leagueID}`;\r\n            if (this.state.leagueID === 0){\r\n                this.leagueData(url);\r\n            }\r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(this.state.current_cycle);\r\n        };\r\n        let toast = this.state.toast;\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 > League {this.state.leagueName} - Admin Page </h1>\r\n                {toast}\r\n                <AdminNav   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs} \r\n                            cycleID = {this.state.showCycle}  />\r\n                <p></p>\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class ProfilePage extends React.Component {\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1>Profile Page - under construction</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Join extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leagueName: '',\r\n            leagueID: 0,\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onLeagueNameChange = (event) => {\r\n        this.setState({leagueName: event.target.value});\r\n    }\r\n    onLeagueIdChange = (event) => {\r\n        this.setState({leagueID: event.target.value});\r\n    }\r\n\r\n    JoinLeague = () => {\r\n        fetch('https://toto-server.herokuapp.com/joinLeague' , {\r\n            method: \"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                leagueName: this.state.leagueName,\r\n                leagueID: this.state.leagueID,\r\n                userID: this.props.userID,\r\n                userName: this.props.username,\r\n            })\r\n        }).then( (res) => res.json())\r\n        .then( data => {\r\n            let leagueID = data[data.length-1];\r\n            console.log(\"join league\", leagueID);\r\n            this.props.onJoining(leagueID);\r\n        }).catch(err => console.log('join', err))\r\n    }\r\n    render (){\r\n        let createLeague = <></>;\r\n        if (this.props.isAdmin === 0){\r\n            createLeague = <Form.Group>\r\n            OR... &nbsp;&nbsp;&nbsp;\r\n                                <Button variant=\"primary\" type=\"submit\" \r\n                                    onClick = {(e)=> {\r\n                                        e.preventDefault();\r\n                                        this.props.createLeague()}} >\r\n                                    Create new League as Admin\r\n                                </Button>\r\n                            </Form.Group>\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"joinForm\">\r\n                    <Form.Group controlId=\"text\">\r\n                        <Form.Label>League Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter league name\" \r\n                                        onChange={this.onLeagueNameChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"text\">\r\n                        <Form.Label>League ID</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter league ID number\" \r\n                                        onChange={this.onLeagueIdChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" size=\"lg\"\r\n                            onClick = {()=> this.JoinLeague()}>\r\n                            Join League\r\n                        </Button>\r\n                    </Form.Group>\r\n                    {createLeague}\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class createLeague extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leagueName: '',\r\n            scoringMethod: 1,\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({leagueName: event.target.value});\r\n    }\r\n    onScoreMethodChange = (event) => {\r\n        this.setState({scoringMethod: event.target.value});\r\n    }\r\n\r\n    onSubmition = () => {\r\n        console.log(\"create league\", this.state);\r\n        if (this.state.leagueName !== ''){\r\n            fetch('https://toto-server.herokuapp.com/createleague' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    leagueName: this.state.leagueName,\r\n                    scoringMethod: this.state.scoringMethod,\r\n                    userID: this.props.userID,\r\n                    userName: this.props.userName,\r\n                })\r\n            }).then((res) => {\r\n                console.log(res);\r\n                res.json()\r\n            })\r\n            .then( data => {\r\n                console.log(\"new league\", data);\r\n                this.props.newLeague();\r\n            }).catch(err => console.log('create league', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        let leagueName=\"League Name\";\r\n        let scoreMethod=\"Scoring method\";\r\n        let submit = \"Create new league as admin\";\r\n        if (this.props.language === \"hebrew\"){\r\n            leagueName=\"שם הליגה\";\r\n            scoreMethod=\"שיטת ניקוד\";\r\n            submit = \"צור ליגה חדשה כמנהל ליגה\";\r\n        }\r\n        console.log(\"inside create league\", this.state)\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{leagueName}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"League Name\" \r\n                                        onChange={this.onNameChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>{scoreMethod}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control as=\"select\" size=\"sm\" onChange={(e)=>this.onScoreMethodChange(e)} value={this.state.scoringMethod}>\r\n                            <option value='1' >The simple method: 1 point for each correct guess (1, 2 or x)</option>\r\n                            <option value='2' >The simple method with an option for bonus games (2 points)</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    this.onSubmition();\r\n                                }}>\r\n                        {submit}\r\n                        </Button>      \r\n                    </Form.Group>           \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}","\r\nimport React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function HomeNavbar (props) {\r\n    \r\n    let adminTab =  <Nav.Item >\r\n                        <Nav.Link eventKey=\"adminPage\"> דף ניהול ליגה </Nav.Link>\r\n                    </Nav.Item>;\r\n    let createLeague = <></>;\r\n    if (props.isAdmin === 0){\r\n        adminTab = <Nav.Item >\r\n        <Nav.Link disable>  </Nav.Link>\r\n                    </Nav.Item>;;\r\n        createLeague = <NavDropdown.Item eventKey=\"create\" > פתח ליגה חדשה כאדמין </NavDropdown.Item>\r\n    }\r\n    \r\n    return (\r\n        \r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item >\r\n                    <Nav.Link eventKey={props.leagueID} > עמוד בית </Nav.Link>\r\n                </Nav.Item>\r\n                <NavDropdown title=\"החלף ליגה\" id=\"nav-dropdown\">\r\n                    {props.leagues.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >ליגה {id}</NavDropdown.Item>\r\n                        );\r\n                        })\r\n                    }\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item eventKey=\"join\" > הצטרף לליגה קיימת</NavDropdown.Item>\r\n                    {createLeague}\r\n                </NavDropdown>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"profilePage\"> פרופיל (בהכנה) </Nav.Link>\r\n                </Nav.Item>\r\n                {adminTab}\r\n                <Nav.Item >\r\n                    <Nav.Link onClick={()=>{props.onClick()}} >התנתק  </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}                \r\n\r\n\r\n","import React from 'react';\r\nimport LeaguePage from './pages/LeaguePage';\r\nimport AdminPage from './pages/AdminPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport Join from './pages/Join';\r\nimport CreateLeague from './pages/CreateLeague';\r\nimport HomeNavbar from './pages/HomeNavbar';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: 0,\r\n            userName: '',\r\n            defaultLeague: 0,\r\n            currentLeague: 0,\r\n            isAdmin: 0,\r\n            leagues: [],\r\n            navBar: 0,\r\n            language: this.props.language,\r\n        }\r\n    }\r\n    \r\n\r\n    userData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then( res => res.json() )\r\n        .then (data => {\r\n            const result = data[0];\r\n            this.setState({\r\n                userID: result.userid,\r\n                userName: result.username,\r\n                defaultLeague: result.defaultleague,\r\n                isAdmin: result.isadmin,\r\n                leagues: result.leagues,\r\n            });\r\n            console.log(\"home data\",result, this.state);\r\n        }).catch(err => console.log('home', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        console.log(\"switchTab\", eventKey)\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"profilePage\":\r\n                returnedTable = <ProfilePage  userID = {this.state.userID}/>\r\n                break;\r\n            case \"adminPage\":\r\n                returnedTable = <AdminPage  leagueID = {this.state.isAdmin}/>\r\n                break;\r\n            case \"create\":\r\n                returnedTable = <CreateLeague userID = {this.state.userID}\r\n                                              userName= {this.state.userName}\r\n                                              newLeague = {()=>{this.setState({userID: 0, defaultLeague:0})}} \r\n                                              language = {this.state.language}    />;\r\n                break;\r\n            case \"join\":\r\n                returnedTable = <Join  userID={this.state.userID} \r\n                                        username={this.state.userName}\r\n                                        onJoining = {(LeagueID)=>{this.switchTab(LeagueID)}}\r\n                                        isAdmin = {this.state.isAdmin}\r\n                                        createLeague = {()=>{this.switchTab(\"create\")}}  />\r\n                break;\r\n            default:{\r\n                    this.setState({currentLeague: parseInt(eventKey)});\r\n                    returnedTable =  <LeaguePage userName = {this.state.userName} \r\n                                                userID = {this.state.userID}\r\n                                                leagueID = {parseInt(eventKey)}\r\n                                                leagues={this.state.leagues} />\r\n            }\r\n        }\r\n        this.setState({navBar: returnedTable});\r\n    }\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/user/${this.props.user}`;\r\n        if (this.props.user !== 0){\r\n            if (this.state.userID === 0) {\r\n                this.userData(url);\r\n            }\r\n        }\r\n        if (this.state.defaultLeague === 0 && this.state.userID !== 0){\r\n            return (\r\n                <Join   userID={this.state.userID} \r\n                        username={this.state.userName}\r\n                        onJoining = {()=>{this.userData(url)}}\r\n                        isAdmin = {this.state.isAdmin}\r\n                        createLeague = {()=>{   \r\n                            console.log(\"create\")\r\n                            this.switchTab(\"create\") }}  />\r\n            );\r\n        }\r\n        else {\r\n            let Content = this.state.navBar;\r\n            if (Content === 0 && this.state.userID !== 0){\r\n                if (this.state.currentLeague === 0)\r\n                    this.switchTab(this.state.defaultLeague);\r\n                else \r\n                    this.switchTab(this.state.currentLeague);\r\n            }\r\n            return (\r\n                <div>\r\n                    <HomeNavbar onClick={()=>{this.props.logOut()}}\r\n                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                isAdmin={this.state.isAdmin}\r\n                                leagues={this.state.leagues} \r\n                                leagueID={this.state.currentLeague} />\r\n                    {Content}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signinEmail: '',\r\n            signinPassword: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signinEmail: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({signinPassword: event.target.value});\r\n    }\r\n\r\n    onSubmitSignin = () => {\r\n        if (this.state.signinEmail !== ''){\r\n            return fetch('https://toto-server.herokuapp.com/signin' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: this.state.signinEmail,\r\n                    password: this.state.signinPassword\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"signin\", user);\r\n                this.props.onRegistration(user);\r\n        }).catch(err => console.log('signin', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        let email=\"Email address\";\r\n        let password=\"Password\";\r\n        let submit = \"Log In\";\r\n        if (this.props.language === \"hebrew\"){\r\n            email=\"כתובת אימייל\";\r\n            password=\"סיסמא\";\r\n            submit = \"התחברות\";\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{email}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" autocomplete=\"username\"\r\n                                        onChange={this.onEmailChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{password}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\r\n                                        onChange={this.onPasswordChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    e.preventDefault();\r\n                                    this.onSubmitSignin();\r\n                                }}>\r\n                        {submit}\r\n                        </Button>      \r\n                    </Form.Group>           \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newEmail: '',\r\n            newUserName: '',\r\n            newPassword: '',\r\n            passwordAgain: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({newEmail: event.target.value});\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({newUserName: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({newPassword: event.target.value});\r\n    }\r\n    onPasswordAgainChange = (event) => {\r\n        this.setState({passwordAgain: event.target.value});\r\n    }\r\n\r\n\r\n    onSubmitRegister = () => {\r\n        if (this.state.newPassword === this.state.passwordAgain){\r\n            fetch('https://toto-server.herokuapp.com/register' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: this.state.newEmail,\r\n                    username: this.state.newUserName,\r\n                    password: this.state.newPassword\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"register\", user);\r\n                this.props.onRegistration(user);\r\n            }).catch(err => console.log('register', err))\r\n        }\r\n    }\r\n    \r\n\r\n    render (){\r\n        let email=\"Email address\";\r\n        let username = \"User Name\";\r\n        let password=\"Password\";\r\n        let rePassword=\"Please re-enter Password\";\r\n        let submit = \"Register\";\r\n        if (this.props.language === \"hebrew\"){\r\n            email=\"כתובת אימייל\";\r\n            username=\"שם משתמש (ציבורי)\";\r\n            password=\"סיסמא\";\r\n            rePassword=\"הזנת הסיסמא בשנית\";\r\n            submit = \"הרשמה\";\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"registerForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{email}</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" autocomplete=\"username\"\r\n                                        onChange={this.onEmailChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formUsername\">\r\n                        <Form.Label>{username}</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter a unique user name (public)\" autocomplete=\"username\"\r\n                                        onChange={this.onUsernameChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{password}</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" autocomplete=\"new-password\"\r\n                                        onChange={this.onPasswordChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{rePassword}</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password (again)\" autocomplete=\"new-password\"\r\n                                        onChange={this.onPasswordAgainChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"\r\n                                            onClick= {()=> this.onSubmitRegister()}>\r\n                            {submit}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport SignInForm from './pages/SignInForm';\r\nimport Register from './pages/Register';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            register: false,\r\n            language: this.props.language,\r\n            userID: 0,\r\n        };\r\n    }\r\n\r\n    eventsHandler = (eventKey) => {\r\n        switch(eventKey){\r\n            case \"english\":\r\n            case \"hebrew\":\r\n                this.props.changeLanguage(eventKey);\r\n                this.setState({language: eventKey});\r\n                break;\r\n            case \"register\":\r\n                this.setState({register: true});\r\n                break;\r\n            case \"login\":\r\n            case \"about\":\r\n                this.setState({register: false});\r\n                break;\r\n            default:\r\n                this.setState({register: false});\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let Content = <SignInForm onRegistration={(user)=> this.setState({userID: user})}\r\n                                  language = {this.state.language} />\r\n        if (this.state.register){\r\n            Content = <Register   onRegistration = {(user)=> this.setState({userID: user})}\r\n                                  language = {this.state.language} /> \r\n        }\r\n        if (this.state.userID !== 0){\r\n            this.props.validLogin(parseInt(this.state.userID));\r\n        }\r\n        let about = 'About';\r\n        let register = 'Register';\r\n        let login = 'Log In';\r\n        let pageDesign = \"signinPage English\"\r\n        if (this.state.language === 'hebrew'){\r\n            about = 'אודות';\r\n            register = 'הרשמה';\r\n            login = 'כניסה לחשבון';\r\n            pageDesign = \"signinPage Hebrew\"\r\n        }\r\n        return (\r\n            <div className={pageDesign} >\r\n                <Nav onSelect={(eventKey) => this.eventsHandler(eventKey)} >\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"english\" >English</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"hebrew\"  >עברית</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"about\"  >{about}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"register\" >{register} </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"login\" >{login}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <div></div>\r\n                {Content}\r\n                <div></div>\r\n            </div>\r\n        );   \r\n    }\r\n}","import React from 'react';\nimport Home from './components/Home';\nimport SignIn from './components/SignIn';\nimport './style.css';\nimport './importStyle.css';\n\n\nexport default class App extends React.Component  {\n  constructor (props) {\n    super(props);\n    this.state = {\n      userID: 0,\n      language: 'english',\n\n    }\n  }\n  \n  render(){\n    if (this.state.userID !== 0){\n      return (\n        <Home\n          user={this.state.userID} \n          logOut={()=>{this.setState({userID:0})}}\n          language = {this.state.language}\n        />\n      );\n    } else {\n      return (\n        <SignIn\n          validLogin ={(userid) => {this.setState({userID: userid})}}\n          changeLanguage = {(update)=>{this.setState({language: update})}}\n        />\n      );\n    }\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}