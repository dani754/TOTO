{"version":3,"sources":["components/LeagueComponents/LeaguePageNavbar.js","components/LeagueComponents/LeagueTable.js","components/LeagueComponents/CycleTable.js","components/LeagueComponents/CycleBets.js","components/LeagueComponents/CheckBetsAfterUpdate.js","components/pages/LeaguePage.js","components/AdminComponents/AdminNav.js","components/AdminComponents/CyclesUpdate.js","components/AdminComponents/LeagueData.js","components/AdminComponents/AddCycle.js","components/AdminComponents/CloseCycle.js","components/AdminComponents/LockCycle.js","components/pages/AdminPage.js","components/pages/ProfilePage.js","components/pages/Join.js","components/pages/CreateLeague.js","components/pages/HomeNavbar.js","components/Home.js","components/pages/SignInForm.js","components/pages/Register.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["LeaguePageNavbar","props","allCycles","cycles","sort","a","b","Nav","onSelect","eventKey","className","Item","Link","length","indexOf","parseInt","cycleID","NavDropdown","id","map","i","LeagueTable","cycleData","url","fetch","method","dataType","then","res","json","data","result","setState","cycleid","console","log","state","catch","err","sortByTotalScore","tableArray","table","totalScore","sortByCycleScore","currentCycleScore","userName","originIndex","this","current_cycle","Array","isArray","names_array","user","index","scores_array","membersscores","Table","striped","bordered","hover","variant","type","onClick","React","Component","CycleTable","findUserIndexInLeague","membersids","userID","gamesIDs","gamesids","cycleOrderInLeague","cycleorderinleague","isLocked","islocked","membersScores","gamesDB","userIndex","setTable","newTable","gameid","hometeam","awayteam","score","userBet","bets","game","scoreUpdate","bet","membersbets","bonusMark","isbonus","gameID","bonus","handleChange","e","newCycleBet","target","value","handleSubmit","headers","body","JSON","stringify","gamesTable","onSubmit","OverlayTrigger","placement","overlay","Tooltip","style","showenBet","Button","Form","preventDefault","Group","Control","as","size","onChange","color","CheckBetsAfterUpdate","useState","show","setShow","message","complete","Row","Col","xs","Toast","onClose","delay","autohide","Header","src","alt","LeaguePage","leagueData","leagueID","leagueid","leagueName","leaguename","cyclesIDs","cyclesids","membersIDs","currentCycleTable","checkBets","toast","switchTab","returnedTable","leagues","Content","betID","currentBetsCycle","AdminNav","actions","title","Divider","CyclesUpdate","isClosed","isclosed","newScore","newCycleScore","updateScores","addGame","leagueSize","firstGame","deleteGame","placeholder","LeagueData","AddCycle","Body","CloseCycle","LockCycle","AdminPage","addCycle","closeCycle","lockCycle","showCycle","ProfilePage","Join","onLeagueNameChange","event","onLeagueIdChange","JoinLeague","username","onJoining","badSubmition","createLeague","isAdmin","controlId","Label","onNameChange","onScoreMethodChange","scoringMethod","onSubmition","newLeague","scoreMethod","submit","language","HomeNavbar","adminTab","disable","Home","userData","userid","defaultLeague","defaultleague","isadmin","LeagueID","currentLeague","navBar","logOut","SignIn","onEmailChange","signinEmail","onPasswordChange","signinPassword","onSubmitSignin","email","password","onRegistration","autocomplete","Register","newEmail","onUsernameChange","newUserName","newPassword","onPasswordAgainChange","passwordAgain","onSubmitRegister","rePassword","eventsHandler","changeLanguage","register","validLogin","about","login","pageDesign","App","update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df7d4ac7.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function LeaguePageNavbar(props){\r\n\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} className=\"secondNav\" >\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"CycleTable\">מחזור {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} </Nav.Link>\r\n                    <NavDropdown id=\"nav-dropdown\" className=\"inlineDropmenu\">\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >מחזור {allCycles.length-i}</NavDropdown.Item>\r\n                        );\r\n                    })}\r\n                    </NavDropdown>\r\n                </Nav.Item>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link eventKey=\"LeagueTable\" >טבלת הליגה</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeagueTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            table: [\r\n                {userName: 'await',\r\n                totalScore: 1,\r\n                currentCycleScore: 1,\r\n                originIndex: 0}],\r\n            cycleID: 0,\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    cycleData: result,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    sortByTotalScore = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    sortByCycleScore  = () => {\r\n        let tableArray = this.state.table;\r\n        tableArray.sort(function(a, b){return b.currentCycleScore - a.currentCycleScore});\r\n        console.log(\"new sort array\", tableArray);\r\n        this.setState({table: tableArray});\r\n    }\r\n\r\n    render (){\r\n        if (this.props.data.current_cycle !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.data.current_cycle}`;\r\n            if (this.state.cycleID !== this.props.data.current_cycle){\r\n                this.cycleData(url);\r\n            } \r\n        }\r\n        if (Array.isArray(this.props.data.names_array) && this.state.table[0].userName === 'await' && this.state.cycleID !==0){\r\n            let membersNames = this.props.data.names_array;\r\n            let tableArray = membersNames.map((user,i)=>{\r\n                return {\r\n                    index: i,\r\n                    userName: user,\r\n                    totalScore: this.props.data.scores_array[i],\r\n                    currentCycleScore: this.state.cycleData.membersscores[i],\r\n                 };\r\n            });\r\n            tableArray.sort(function(a, b){return b.totalScore - a.totalScore});\r\n            this.setState({table: tableArray});\r\n        };\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByCycleScore()}>ניקוד למחזור נוכחי</th> \r\n                            <th type=\"button\" className=\"sortButton\" onClick={()=>this.sortByTotalScore()}>סה\"כ נקודות</th> \r\n\r\n                            <th>שם</th> \r\n\r\n                            <th>#</th> \r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.table.map((user,i) => {\r\n                      return( <tr>\r\n                            <td>{user.currentCycleScore}</td>\r\n                            <td>{user.totalScore}</td>\r\n                            <td>{user.userName}</td>\r\n                            <td>{i+1}</td>\r\n                        </tr>);\r\n                    })}                \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class CycleTable extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0, userBet: 0, bets: [0,]}],\r\n            userIndex: 0,\r\n        }\r\n    }\r\n\r\n\r\n    cycleData = (url) => {\r\n        let membersArray = this.props.data.membersids;\r\n        let findUserIndexInLeague = membersArray.indexOf(this.props.userID);\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                    userIndex: findUserIndexInLeague,\r\n                });\r\n                console.log(\"state cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 'await',  cycleid: parseInt(this.props.cycleID), bets: [0,]}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'טרם נקבע';\r\n                if (this.state.isLocked && game.score > 0){\r\n                    if (game.score === 3)\r\n                        scoreUpdate = 'x';\r\n                    else\r\n                        scoreUpdate = game.score;\r\n                }\r\n                let bet = game.membersbets[this.state.userIndex];\r\n                if (this.state.isLocked && bet === 3)\r\n                    bet = 'x';\r\n                let bonusMark = '';\r\n                if (game.isbonus)\r\n                    bonusMark = 'בונוס! ';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: scoreUpdate,\r\n                    userBet: bet,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    bonus: bonusMark,\r\n                    isbonus: game.isbonus,\r\n                    bets: game.membersbets,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n        console.log(\"new table\", this.state.table)\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleBet = this.state.table;\r\n        newCycleBet[i].userBet = e.target.value;\r\n        this.setState({table: newCycleBet});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            return fetch('https://toto-server.herokuapp.com/updatebets',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        userIndex: this.state.userIndex,\r\n                        gamesTable: this.state.table,\r\n                    })\r\n            }).then((res) => {\r\n                console.log(\"updatebets res\", res);\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(\"updatebets\", data);\r\n                return this.props.onSubmit(this.state.table);\r\n            }).catch(err => console.log(\"updatebets\", err))\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked || tableArray[0].hometeam === 'await'){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr className=\"tr5column\">\r\n                                <th>תוצאה</th> \r\n                                <th>ההימור שלך</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                return( <tr key={i} className=\"tr5column\" >\r\n                                            <td ><OverlayTrigger className=\"OverlayTrigger\"\r\n                                                placement={'right'}\r\n                                                overlay={\r\n                                                    <Tooltip id={`tooltip-right`} style={{\"width\": \"150%\"}} >\r\n                                                        <Table className=\"tooltipTable\">\r\n                                                            <thead>\r\n                                                                <tr  className=\"tooltipTableLine\">\r\n                                                                    <th></th> \r\n                                                                    <th>:הימורים</th>    \r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {game.bets.map((bet,i) => {\r\n                                                                        let showenBet = bet;\r\n                                                                        if (bet === 3)\r\n                                                                            showenBet = 'x';\r\n                                                                        return (\r\n                                                                            <tr key={i} className=\"tooltipTableLine\">\r\n                                                                                <td className=\"tooltipTableText\" >{showenBet}</td>\r\n                                                                                <td  className=\"tooltipTableText\" >{this.props.data.names_array[i]}</td>\r\n                                                                            </tr>\r\n                                                                        ); \r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </Table>\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <Button className=\"invisibleButton\">{game.score}</Button>\r\n                                                </OverlayTrigger></td>\r\n                                            <td>{game.userBet}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{game.bonus}{i+1}</td>\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={(e)=> {\r\n                        e.preventDefault()\r\n                        this.handleSubmit()}} >\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>הימור</th> \r\n                                <th>קבוצת חוץ</th> \r\n                                <th>קבוצת בית</th> \r\n                                <th>#</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game,i) => {\r\n                                return( <tr key={i} className=\"hebrew\" >\r\n                                        <td className=\"hebrew\" className=\"bet\" >\r\n                                            <Form.Group className=\"bet\" >\r\n                                                <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                    <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                    <option value='1' className=\"hebrew\"  >1</option>\r\n                                                    <option value='2' className=\"hebrew\" >2</option>\r\n                                                    <option value='3' className=\"hebrew\" >x</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                        </td>\r\n                                        <td>{game.awayteam}</td>\r\n                                        <td>{game.hometeam}</td>\r\n                                        <td>{game.bonus}{i+1}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}    \r\n                        </tbody>\r\n                        <Button size=\"lg\" style={{color: \"black\"}} type=\"submit\">שמור הימור</Button>\r\n                    </Table>\r\n                </Form>\r\n            </div>\r\n        );}\r\n    }\r\n}","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class CycleBets extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 0, cycleid: 0}],\r\n            userIndex: 0,\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        let membersArray = this.props.data.membersids;\r\n        let findUserIndexInLeague = membersArray.indexOf(this.props.userID);\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                    userIndex: findUserIndexInLeague,\r\n                });\r\n                console.log(\"state bets cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', userBet: 'await', cycleid: parseInt(this.props.cycleID)}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                let scoreUpdate = 'await';\r\n                if (this.state.isLocked){\r\n                    if (game.score > 0)\r\n                    scoreUpdate = game.score;\r\n                    if (scoreUpdate === 3)\r\n                        scoreUpdate = 'x';\r\n                }\r\n                let bet = 'await';\r\n                if (Array.isArray(game.membersbets) && game.membersbets[this.state.userIndex] !== 0){\r\n                    if (this.state.isLocked && game.membersbets[this.state.userIndex] === 3)\r\n                        bet = 'x';\r\n                    else\r\n                        bet = game.membersbets[this.state.userIndex];\r\n                }\r\n                let bonusMark = '';\r\n                if (game.isbonus)\r\n                    bonusMark = 'בונוס! ';\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: scoreUpdate,\r\n                    userBet: bet,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                    bonus: bonusMark,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleBet = this.state.table;\r\n        newCycleBet[i].userBet = e.target.value;\r\n        this.setState({table: newCycleBet});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            return fetch('https://toto-server.herokuapp.com/updatebets',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        userIndex: this.state.userIndex,\r\n                        gamesTable: this.state.table,\r\n                    })\r\n            }).then((res) => {\r\n                console.log(\"updatebets res\", res);\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                console.log(\"updatebets\", data);\r\n                return this.props.onSubmit(this.state.table);\r\n            }).catch(err => console.log(\"updatebets\", err))\r\n        }\r\n    }\r\n\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isLocked || tableArray[0].hometeam === 'await'){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr className=\"tr5column\">\r\n\r\n                            <th>הימור</th> \r\n                            <th>תוצאה</th> \r\n                            <th>קבוצת חוץ</th> \r\n                            <th>קבוצת בית</th> \r\n\r\n\r\n                            <th>#</th> \r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                return( <tr key={i} className=\"tr5column\">\r\n                                        <td>{game.userBet}</td>\r\n\r\n                                            <td>{game.score}</td>\r\n                                            <td>{game.awayteam}</td>\r\n\r\n                                            <td>{game.hometeam}</td>\r\n\r\n                                            <td>{game.bonus}{i+1}</td>\r\n\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n            console.log(\"table bets\", this.state.table);\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={(e)=> {\r\n                            e.preventDefault()\r\n                            this.handleSubmit()}} >\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n\r\n                                <th>הימור</th> \r\n                            <th>קבוצת חוץ</th> \r\n                            <th>קבוצת בית</th> \r\n\r\n\r\n                            <th>#</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} className=\"hebrew\" >\r\n                                                    <td className=\"hebrew\" className=\"bet\" >\r\n                                                        <Form.Group className=\"bet\" >\r\n                                                            <Form.Control className=\"bet\"  as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.userBet}>\r\n                                                                <option value='0' className=\"hebrew\" >ממתין</option>\r\n                                                                <option value='1' className=\"hebrew\"  >1</option>\r\n                                                                <option value='2' className=\"hebrew\" >2</option>\r\n                                                                <option value='3' className=\"hebrew\" >x</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{game.bonus}{i+1}</td>\r\n\r\n                                                </tr>\r\n                                        );\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button size=\"lg\" style={{color: \"black\"}} type=\"submit\">שמור הימור</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CheckBetsAfterUpdate (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n    let message = \"ההימור עודכן בהצלחה\";\r\n    if (!props.complete){\r\n        message= \"ההימור עודכן! שים לב, קיימים משחקים שטרם הימרת עליהם\"\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">{message}</strong>\r\n                    </Toast.Header>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport LeaguePageNavbar from '../LeagueComponents/LeaguePageNavbar';\r\nimport LeagueTable from '../LeagueComponents/LeagueTable';\r\nimport CycleTable from '../LeagueComponents/CycleTable';\r\nimport CycleBets from '../LeagueComponents/CycleBets';\r\nimport CheckBetsAfterUpdate from '../LeagueComponents/CheckBetsAfterUpdate';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class LeaguePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            table: 0,\r\n            data: {},\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            userIndex: 0,\r\n            leagues: this.props.leagues,\r\n            currentCycleTable: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n\r\n    leagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"league data\", result);\r\n            this.setState({\r\n                data: result,\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                currentCycleTable: result.current_cycle,\r\n                table: 0,\r\n            });\r\n        }).catch(err => console.log('LeaguePage', err))\r\n    }\r\n\r\n    checkBets = (table) => {\r\n        let complete = true;\r\n        for (let i = 0; i<table.length; i++){\r\n            if (! (table[i].userBet >= 1 && table[i].userBet <= 3 ||  table[i].userBet === 'x')){\r\n                complete = false;\r\n            }\r\n        }\r\n        this.setState({\r\n            toast: <CheckBetsAfterUpdate show={true} complete={complete} />\r\n        });\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"LeagueTable\":\r\n                returnedTable = <LeagueTable data={this.state.data} />;\r\n                break;\r\n            case \"CycleTable\":\r\n                returnedTable = <CycleTable data={this.state.data} cycleID={this.state.currentCycleTable}\r\n                                            userID={this.props.userID} onSubmit={(table)=> {\r\n                                                                                    this.switchTab(\"LeagueTable\")\r\n                                                                                    this.checkBets(table) } }  />\r\n                break;\r\n           default:\r\n                this.setState({currentCycleTable: eventKey});\r\n                returnedTable = <CycleTable data={this.state.data} cycleID={eventKey}\r\n                                            userID={this.props.userID} onSubmit={(table)=> {\r\n                                                                                    this.switchTab(\"LeagueTable\")\r\n                                                                                    this.checkBets(table) } }  />\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/league/${this.props.leagueID}`;\r\n            if (this.state.leagueID !== this.props.leagueID){\r\n                this.leagueData(url);\r\n            }   \r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(\"LeagueTable\");\r\n        };\r\n        let toast = this.state.toast;\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 className=\"hebrew\"> שלום {this.props.userName} ! ברוכים הבאים לליגת {this.state.leagueName} </h1>\r\n                {toast}\r\n                <LeaguePageNavbar   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                    leagues={this.state.leagues} \r\n                                    cycles={this.state.cyclesIDs}\r\n                                    leagueID={this.state.leagueID}\r\n                                    cycleID={this.state.currentCycleTable}\r\n                                    betID={this.state.currentBetsCycle}\r\n                                    />\r\n                <p></p>\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AdminNav(props){\r\n    let allCycles = props.cycles;\r\n    allCycles.sort(function(a, b){return b-a});\r\n    let actions = <></>;\r\n    if (props.cycleID > 0){\r\n        actions =  <NavDropdown id=\"nav-dropdown\"  title=\"edit cycle\"  className=\"secondNavItem\"  >\r\n                        <NavDropdown.Item eventKey=\"lock\" >lock cycle (no more bets) </NavDropdown.Item>\r\n                        <NavDropdown.Item eventKey=\"close\" >close cycle (no more scores updates) </NavDropdown.Item>\r\n                    </NavDropdown>\r\n    }\r\n    return (\r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link  eventKey={props.cycleID} >Cycle {allCycles.length-allCycles.indexOf(parseInt(props.cycleID))} </Nav.Link>\r\n                </Nav.Item>\r\n                {actions}\r\n                <NavDropdown id=\"nav-dropdown\"  title=\"switch cycle\"  className=\"secondNavItem\"  >\r\n                    {allCycles.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >cycle {allCycles.length-i}</NavDropdown.Item>\r\n                        ); \r\n                    })}\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item eventKey=\"addCycle\" > add a new cycle </NavDropdown.Item>\r\n                </NavDropdown>\r\n                <Nav.Item className=\"secondNavItem\">\r\n                    <Nav.Link  eventKey=\"LeagueData\">League Data</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport '../../style.css';\r\n\r\nexport default class CyclesUpdate extends React.Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            cycleID: 0,\r\n            gamesIDs: [],\r\n            cycleOrderInLeague: 0,\r\n            isLocked: true,\r\n            isClosed: true,\r\n            membersScores: [],\r\n            gamesDB: [],\r\n            table: [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: 0}],\r\n            hometeam: '',\r\n            awayteam: '',\r\n        }\r\n    }\r\n\r\n    cycleData = (url) => {\r\n        fetch(url,\r\n            {\r\n                method: \"get\",\r\n                dataType: 'json',\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let result = data;\r\n                this.setState({\r\n                    cycleID: result.cycleid,\r\n                    gamesIDs: result.gamesids,\r\n                    cycleOrderInLeague: result.cycleorderinleague,\r\n                    isLocked: result.islocked,\r\n                    isClosed: result.isclosed,\r\n                    membersScores: result.membersscores,\r\n                    gamesDB: result.gamesDB,\r\n                });\r\n                console.log(\"state admin cycle\" , this.state)\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    setTable = () => {\r\n        let newTable = [{gameid: 1, hometeam: 'await', awayteam: 'await', score: 'await', cycleid: this.props.cycleID}];\r\n        if (Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            newTable = this.state.gamesDB.map((game)=>{\r\n                return {\r\n                    hometeam: game.hometeam,\r\n                    awayteam: game.awayteam,\r\n                    score: game.score,\r\n                    newScore: game.score,\r\n                    cycleid: game.cycleid,\r\n                    gameID: game.gameid,\r\n                };\r\n            });\r\n        }\r\n        this.setState({table: newTable});\r\n    }\r\n\r\n    handleChange = (e, i) => {\r\n        let newCycleScore = this.state.table;\r\n        newCycleScore[i].newScore = e.target.value;\r\n        console.log(\"newCycleScore\", newCycleScore);\r\n        this.setState({table: newCycleScore});\r\n    }\r\n\r\n    updateScores = () => {\r\n        console.log(\"updateScores\", this.state);\r\n        if (this.state.table[0].cycleid === this.state.cycleID && Array.isArray(this.state.gamesDB) && this.state.gamesDB.length > 0){\r\n            fetch('https://toto-server.herokuapp.com/updatescores',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        gamesTable: this.state.table,\r\n                        cycleID: this.state.cycleID,\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                console.log(\"response updatescores\", data);\r\n                this.props.onSubmit();\r\n                }).catch(err => console.log(\"updatescores\", err))\r\n        }\r\n    }\r\n\r\n    addGame = () => {\r\n        console.log(\"addGame\", this.state, this.props);\r\n        if (this.state.hometeam !== '' && this.state.awayteam !== ''){\r\n            fetch('https://toto-server.herokuapp.com/addgame',\r\n                {\r\n                    method: \"post\",\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        hometeam: this.state.hometeam,\r\n                        awayteam: this.state.awayteam,\r\n                        cycleID: this.state.cycleID,\r\n                        leagueID: this.props.data.leagueID,\r\n                        leagueSize: this.props.data.membersIDs.length,\r\n                        firstGame: (this.state.table[0].hometeam === 'await'),\r\n                    })\r\n                })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    console.log(\"response addGame\", data);\r\n                    this.props.onSubmit();\r\n                }).catch(err => console.log(\"addGame\", err))\r\n        }\r\n    }\r\n\r\n    deleteGame = (gameID) => {\r\n        console.log(\"delete game\", gameID);\r\n        let url = `https://toto-server.herokuapp.com/deletegame/${gameID}`;\r\n        fetch(url,\r\n        {\r\n                method: \"get\",\r\n                headers: {'Content-Type': 'application/json'},\r\n        }).then((res) => {\r\n            console.log(\"response deletegame\", res)\r\n            res.json()\r\n        }).then((data) => {\r\n            console.log(\"response deletegame\", data)\r\n        }).catch(err => console.log(\"deletegame\", err))\r\n    }\r\n\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/cycle/${this.props.cycleID}`;\r\n        if (parseInt(this.state.cycleID) !== parseInt(this.props.cycleID)){\r\n            this.cycleData(url);\r\n        }\r\n        let tableArray = this.state.table;\r\n        if (tableArray[0].cycleid !== this.state.cycleID && this.state.cycleID !== 0){\r\n            this.setTable();\r\n        }\r\n        if (this.state.isClosed){\r\n            return(\r\n                <div>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr  >\r\n                            <th>#</th> \r\n                            <th>Home Team</th> \r\n                            <th>Away Team</th> \r\n                            <th>Score</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableArray.map((game, i) => {\r\n                                return( <tr key={i} >\r\n                                            <td>{i+1}</td>\r\n                                            <td>{game.hometeam}</td>\r\n                                            <td>{game.awayteam}</td>\r\n                                            <td>{game.score}</td>\r\n                                        </tr>\r\n                                );\r\n                            })}                \r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        } else if (this.state.isLocked) {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.updateScores()}>\r\n                        <Table striped bordered hover variant=\"dark\" >\r\n                            <thead>\r\n                                <tr >\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>Score</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} >\r\n                                                    <td>{i+1}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td>\r\n                                                        <Form.Group>\r\n                                                            <Form.Control as=\"select\" size=\"sm\"  key={i} onChange={(e)=>this.handleChange(e, i)} value={game.newScore}>\r\n                                                                <option value='0' >await</option>\r\n                                                                <option value='1' >1</option>\r\n                                                                <option value='2' >2</option>\r\n                                                                <option value='3' >x</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        );\r\n                                    })}    \r\n                            </tbody>\r\n                            <Button style={{color: \"black\"}} type=\"button\" onClick={()=>this.updateScores()} >update scores</Button>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else if (this.state.table[0].hometeam === 'await'){\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>update</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>*</td>\r\n                                    <td><Form.Group>\r\n                                        <Form.Control type=\"text\" placeholder=\"home team\" onChange={(e) => this.setState({hometeam: e.target.value})} value={this.state.hometeam} />\r\n                                    </Form.Group></td>\r\n                                    <td><Form.Group>\r\n                                        <Form.Control type=\"text\" placeholder=\"away team\" onChange={(e) => this.setState({awayteam: e.target.value})} value={this.state.awayteam} />\r\n                                    </Form.Group></td>\r\n                                    <td> <Button style={{color: \"black\"}} type=\"button\" onClick={()=> this.addGame()}  > add </Button> </td>\r\n                                </tr>    \r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Form onSubmit={()=>this.handleSubmit()}>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>#</th> \r\n                                <th>Home Team</th> \r\n                                <th>Away Team</th> \r\n                                <th>update</th> \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                    {tableArray.map((game,i) => {\r\n                                        return( <tr key={i} >\r\n                                                    <td>{i+1}</td>\r\n                                                    <td>{game.hometeam}</td>\r\n                                                    <td>{game.awayteam}</td>\r\n                                                    <td>\r\n                                                        <Button variant=\"outline-secondary\" >delete</Button></td>\r\n                                                </tr>\r\n                                        );\r\n                                    })}\r\n                                    <tr>\r\n                                                    <td>*</td>\r\n                                                    <td><Form.Group>\r\n                                                        <Form.Control type=\"text\" placeholder=\"home team\" onChange={(e) => this.setState({hometeam: e.target.value})} value={this.state.hometeam} />\r\n                                                    </Form.Group></td>\r\n                                                    <td><Form.Group>\r\n                                                        <Form.Control type=\"text\" placeholder=\"away team\" onChange={(e) => this.setState({awayteam: e.target.value})} value={this.state.awayteam} />\r\n                                                    </Form.Group></td>\r\n                                                    <td> <Button style={{color: \"black\"}} type=\"button\" onClick={()=> this.addGame()}  > add </Button> </td>\r\n                                                </tr>    \r\n                            </tbody>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport '../../style.css';\r\n\r\nexport default class LeagueData extends React.Component {\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1>League Data</h1>\r\n                <h1>members in league</h1>\r\n                <h1>cycles list</h1>\r\n                <h1>more info</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function AddCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">A NEW CYCLE IS OPEN!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>start adding games...</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function CloseCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">NO MORE CHANGES!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>This cycle is now closed for updates</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function LockCycle (props){\r\n\r\n    const [show, setShow] = useState(props.show);\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={6}>\r\n                <Toast onClose={() => setShow(false)} show={show} delay={4000} autohide>\r\n                    <Toast.Header>\r\n                        <img\r\n                        src=\"holder.js/20x20?text=%20\"\r\n                        className=\"rounded mr-2\"\r\n                        alt=\"\"\r\n                        />\r\n                        <strong className=\"mr-auto\">NO MORE BETS!</strong>\r\n                    </Toast.Header>\r\n                    <Toast.Body>This cycle is now locked</Toast.Body>\r\n                </Toast>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport AdminNav from '../AdminComponents/AdminNav';\r\nimport CyclesUpdate from '../AdminComponents/CyclesUpdate';\r\nimport LeagueData from '../AdminComponents/LeagueData';\r\nimport AddCycle from '../AdminComponents/AddCycle';\r\nimport CloseCycle from '../AdminComponents/CloseCycle';\r\nimport LockCycle from '../AdminComponents/LockCycle';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class AdminPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leagueID: 0,\r\n            leagueName: '',\r\n            cyclesIDs: [],\r\n            membersIDs: [],\r\n            names_array: [],\r\n            scores_array: [],\r\n            current_cycle: 0,\r\n            showCycle: 0,\r\n            table: 0,\r\n            toast: <p></p>,\r\n        }\r\n    }\r\n\r\n    leagueData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"league data in admin page\", result);\r\n            this.setState({\r\n                leagueID: result.leagueid,\r\n                leagueName: result.leaguename,\r\n                cyclesIDs: result.cyclesids,\r\n                membersIDs: result.membersids,\r\n                names_array: result.names_array,\r\n                scores_array: result.scores_array,\r\n                current_cycle: result.current_cycle,\r\n                table: 0,\r\n            });\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    addCycle = (leagueID) => {\r\n        fetch(`https://toto-server.herokuapp.com/addcycle/${leagueID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"add cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    closeCycle = (cycleID) => {\r\n        fetch(`https://toto-server.herokuapp.com/closecycle/${cycleID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"close cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    lockCycle = (cycleID) => {\r\n        fetch(`https://toto-server.herokuapp.com/lockcycle/${cycleID}`,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let result = data;\r\n            console.log(\"lock cycle\", result);\r\n        }).catch(err => console.log('AdminPage', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"LeagueData\":\r\n                this.setState({showCycle: 0});\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            case \"addCycle\":\r\n                this.setState({toast: <AddCycle  show={true} /> });\r\n                this.addCycle(this.state.leagueID);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break; \r\n            case \"close\":\r\n                this.setState({toast: <CloseCycle show={true} /> });\r\n                this.closeCycle(this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            case \"lock\":\r\n                this.setState({toast: <LockCycle show={true} /> });\r\n                this.lockCycle(this.state.showCycle);\r\n                returnedTable = <LeagueData data={this.state} />;\r\n                break;\r\n            default: {\r\n                this.setState({showCycle: eventKey});\r\n                returnedTable = <CyclesUpdate data={this.state} cycleID={parseInt(eventKey)}\r\n                                                onSubmit={()=> this.setState({leagueID: 0})} />\r\n            }\r\n        }\r\n        this.setState({table: returnedTable});\r\n    }\r\n\r\n\r\n    render (){\r\n        if (this.props.leagueID !== 0){\r\n            let url = `https://toto-server.herokuapp.com/home/league/${this.props.leagueID}`;\r\n            if (this.state.leagueID === 0){\r\n                this.leagueData(url);\r\n            }\r\n        }\r\n        let Content = this.state.table;\r\n        if (Content === 0 && this.state.leagueID !== 0){\r\n            this.switchTab(this.state.current_cycle);\r\n        };\r\n        let toast = this.state.toast;\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h1 > League {this.state.leagueName} - Admin Page </h1>\r\n                {toast}\r\n                <AdminNav   onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                            cycles={this.state.cyclesIDs} \r\n                            cycleID = {this.state.showCycle}  />\r\n                <p></p>\r\n                {Content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class ProfilePage extends React.Component {\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1>Profile Page - under construction</h1>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Join extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leagueName: '',\r\n            leagueID: 0,\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onLeagueNameChange = (event) => {\r\n        this.setState({leagueName: event.target.value});\r\n    }\r\n    onLeagueIdChange = (event) => {\r\n        this.setState({leagueID: event.target.value});\r\n    }\r\n\r\n    JoinLeague = () => {\r\n        fetch('https://toto-server.herokuapp.com/joinLeague' , {\r\n            method: \"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                leagueName: this.state.leagueName,\r\n                leagueID: this.state.leagueID,\r\n                userID: this.props.userID,\r\n                userName: this.props.username,\r\n            })\r\n        }).then( (res) => res.json())\r\n        .then( data => {\r\n            let leagueID = data[data.length-1];\r\n            console.log(\"join league\", leagueID);\r\n            this.props.onJoining(leagueID);\r\n        }).catch(err => console.log('join', err))\r\n    }\r\n    render (){\r\n        let createLeague = <></>;\r\n        if (this.props.isAdmin === 0){\r\n            createLeague = <Form.Group>\r\n            OR... &nbsp;&nbsp;&nbsp;\r\n                                <Button variant=\"primary\" type=\"submit\" \r\n                                    onClick = {(e)=> {\r\n                                        e.preventDefault();\r\n                                        this.props.createLeague()}} >\r\n                                    Create new League as Admin\r\n                                </Button>\r\n                            </Form.Group>\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"joinForm\">\r\n                    <Form.Group controlId=\"text\">\r\n                        <Form.Label>League Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter league name\" \r\n                                        onChange={this.onLeagueNameChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"text\">\r\n                        <Form.Label>League ID</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter league ID number\" \r\n                                        onChange={this.onLeagueIdChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" size=\"lg\"\r\n                            onClick = {()=> this.JoinLeague()}>\r\n                            Join League\r\n                        </Button>\r\n                    </Form.Group>\r\n                    {createLeague}\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class createLeague extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leagueName: '',\r\n            scoringMethod: 1,\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({leagueName: event.target.value});\r\n    }\r\n    onScoreMethodChange = (event) => {\r\n        this.setState({scoringMethod: event.target.value});\r\n    }\r\n\r\n    onSubmition = () => {\r\n        console.log(\"create league\", this.state);\r\n        if (this.state.leagueName !== ''){\r\n            fetch('https://toto-server.herokuapp.com/createleague' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    leagueName: this.state.leagueName,\r\n                    scoringMethod: this.state.scoringMethod,\r\n                    userID: this.props.userID,\r\n                    userName: this.props.userName,\r\n                })\r\n            }).then((res) => {\r\n                console.log(res);\r\n                res.json()\r\n            })\r\n            .then( data => {\r\n                console.log(\"new league\", data);\r\n                this.props.newLeague();\r\n            }).catch(err => console.log('create league', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        let leagueName=\"League Name\";\r\n        let scoreMethod=\"Scoring method\";\r\n        let submit = \"Create new league as admin\";\r\n        if (this.props.language === \"hebrew\"){\r\n            leagueName=\"שם הליגה\";\r\n            scoreMethod=\"שיטת ניקוד\";\r\n            submit = \"צור ליגה חדשה כמנהל ליגה\";\r\n        }\r\n        console.log(\"inside create league\", this.state)\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{leagueName}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"League Name\" \r\n                                        onChange={this.onNameChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>{scoreMethod}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control as=\"select\" size=\"sm\" onChange={(e)=>this.onScoreMethodChange(e)} value={this.state.scoringMethod}>\r\n                            <option value='1' >The simple method: 1 point for each correct guess (1, 2 or x)</option>\r\n                            <option value='2' >The simple method with an option for bonus games (2 points)</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    this.onSubmition();\r\n                                }}>\r\n                        {submit}\r\n                        </Button>      \r\n                    </Form.Group>           \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}","\r\nimport React from 'react';\r\nimport {NavDropdown, Nav} from 'react-bootstrap';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default function HomeNavbar (props) {\r\n    \r\n    let adminTab =  <Nav.Item >\r\n                        <Nav.Link eventKey=\"adminPage\"> דף ניהול ליגה </Nav.Link>\r\n                    </Nav.Item>;\r\n    let createLeague = <></>;\r\n    if (props.isAdmin === 0){\r\n        adminTab = <Nav.Item >\r\n        <Nav.Link disable>  </Nav.Link>\r\n                    </Nav.Item>;;\r\n        createLeague = <NavDropdown.Item eventKey=\"create\" > פתח ליגה חדשה כאדמין </NavDropdown.Item>\r\n    }\r\n    \r\n    return (\r\n        \r\n        <div >\r\n            <Nav onSelect={(eventKey)=>props.onSelect(eventKey)} >\r\n                <Nav.Item >\r\n                    <Nav.Link eventKey={props.leagueID} > עמוד בית </Nav.Link>\r\n                </Nav.Item>\r\n                <NavDropdown title=\"החלף ליגה\" id=\"nav-dropdown\">\r\n                    {props.leagues.map((id,i)=>{\r\n                        return(\r\n                            <NavDropdown.Item eventKey={id} key={i} >ליגה {id}</NavDropdown.Item>\r\n                        );\r\n                        })\r\n                    }\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item eventKey=\"join\" > הצטרף לליגה קיימת</NavDropdown.Item>\r\n                    {createLeague}\r\n                </NavDropdown>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"profilePage\"> פרופיל (בהכנה) </Nav.Link>\r\n                </Nav.Item>\r\n                {adminTab}\r\n                <Nav.Item >\r\n                    <Nav.Link onClick={()=>{props.onClick()}} >התנתק  </Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        </div>\r\n    );\r\n}                \r\n\r\n\r\n","import React from 'react';\r\nimport LeaguePage from './pages/LeaguePage';\r\nimport AdminPage from './pages/AdminPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport Join from './pages/Join';\r\nimport CreateLeague from './pages/CreateLeague';\r\nimport HomeNavbar from './pages/HomeNavbar';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userID: 0,\r\n            userName: '',\r\n            defaultLeague: 0,\r\n            currentLeague: 0,\r\n            isAdmin: 0,\r\n            leagues: [],\r\n            navBar: 0,\r\n            language: this.props.language,\r\n        }\r\n    }\r\n    \r\n\r\n    userData = (url) => {\r\n        fetch(url,\r\n        {\r\n            method: \"get\",\r\n            dataType: \"json\",\r\n            headers: {'Content-Type': 'application/json'},\r\n        })\r\n        .then( res => res.json() )\r\n        .then (data => {\r\n            const result = data[0];\r\n            this.setState({\r\n                userID: result.userid,\r\n                userName: result.username,\r\n                defaultLeague: result.defaultleague,\r\n                isAdmin: result.isadmin,\r\n                leagues: result.leagues,\r\n            });\r\n            console.log(\"home data\",result, this.state);\r\n        }).catch(err => console.log('home', err))\r\n    }\r\n\r\n    switchTab = (eventKey) => {\r\n        console.log(\"switchTab\", eventKey)\r\n        let returnedTable;\r\n        switch(eventKey){\r\n            case \"profilePage\":\r\n                returnedTable = <ProfilePage  userID = {this.state.userID}/>\r\n                break;\r\n            case \"adminPage\":\r\n                returnedTable = <AdminPage  leagueID = {this.state.isAdmin}/>\r\n                break;\r\n            case \"create\":\r\n                returnedTable = <CreateLeague userID = {this.state.userID}\r\n                                              userName= {this.state.userName}\r\n                                              newLeague = {()=>{this.setState({userID: 0, defaultLeague:0})}} \r\n                                              language = {this.state.language}    />;\r\n                break;\r\n            case \"join\":\r\n                returnedTable = <Join  userID={this.state.userID} \r\n                                        username={this.state.userName}\r\n                                        onJoining = {(LeagueID)=>{this.switchTab(LeagueID)}}\r\n                                        isAdmin = {this.state.isAdmin}\r\n                                        createLeague = {()=>{this.switchTab(\"create\")}}  />\r\n                break;\r\n            default:{\r\n                    this.setState({currentLeague: parseInt(eventKey)});\r\n                    returnedTable =  <LeaguePage userName = {this.state.userName} \r\n                                                userID = {this.state.userID}\r\n                                                leagueID = {parseInt(eventKey)}\r\n                                                leagues={this.state.leagues} />\r\n            }\r\n        }\r\n        this.setState({navBar: returnedTable});\r\n    }\r\n\r\n    render (){\r\n        let url = `https://toto-server.herokuapp.com/home/user/${this.props.user}`;\r\n        if (this.props.user !== 0){\r\n            if (this.state.userID === 0) {\r\n                this.userData(url);\r\n            }\r\n        }\r\n        if (this.state.defaultLeague === 0 && this.state.userID !== 0){\r\n            return (\r\n                <Join   userID={this.state.userID} \r\n                        username={this.state.userName}\r\n                        onJoining = {()=>{this.userData(url)}}\r\n                        isAdmin = {this.state.isAdmin}\r\n                        createLeague = {()=>{   \r\n                            console.log(\"create\")\r\n                            this.switchTab(\"create\") }}  />\r\n            );\r\n        }\r\n        else {\r\n            let Content = this.state.navBar;\r\n            if (Content === 0 && this.state.userID !== 0){\r\n                if (this.state.currentLeague === 0)\r\n                    this.switchTab(this.state.defaultLeague);\r\n                else \r\n                    this.switchTab(this.state.currentLeague);\r\n            }\r\n            return (\r\n                <div>\r\n                    <HomeNavbar onClick={()=>{this.props.logOut()}}\r\n                                onSelect={(eventKey)=>{this.switchTab(eventKey)}} \r\n                                isAdmin={this.state.isAdmin}\r\n                                leagues={this.state.leagues} \r\n                                leagueID={this.state.currentLeague} />\r\n                    {Content}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signinEmail: '',\r\n            signinPassword: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signinEmail: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({signinPassword: event.target.value});\r\n    }\r\n\r\n    onSubmitSignin = () => {\r\n        if (this.state.signinEmail !== ''){\r\n            return fetch('https://toto-server.herokuapp.com/signin' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: this.state.signinEmail,\r\n                    password: this.state.signinPassword\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"signin\", user);\r\n                this.props.onRegistration(user);\r\n        }).catch(err => console.log('signin', err))\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        let email=\"Email address\";\r\n        let password=\"Password\";\r\n        let submit = \"Log In\";\r\n        if (this.props.language === \"hebrew\"){\r\n            email=\"כתובת אימייל\";\r\n            password=\"סיסמא\";\r\n            submit = \"התחברות\";\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"signinForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{email}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" autocomplete=\"username\"\r\n                                        onChange={this.onEmailChange} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{password}</Form.Label>\r\n                        <p></p>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" autocomplete=\"current-password\"\r\n                                        onChange={this.onPasswordChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\" \r\n                                onClick = {(e)=> {\r\n                                    e.preventDefault();\r\n                                    this.onSubmitSignin();\r\n                                }}>\r\n                        {submit}\r\n                        </Button>      \r\n                    </Form.Group>           \r\n                </Form>  \r\n            </div>\r\n        );    \r\n    }\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../../style.css';\r\nimport '../../importStyle.css';\r\n\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newEmail: '',\r\n            newUserName: '',\r\n            newPassword: '',\r\n            passwordAgain: '',\r\n            badSubmition: false,\r\n        };\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({newEmail: event.target.value});\r\n    }\r\n    onUsernameChange = (event) => {\r\n        this.setState({newUserName: event.target.value});\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({newPassword: event.target.value});\r\n    }\r\n    onPasswordAgainChange = (event) => {\r\n        this.setState({passwordAgain: event.target.value});\r\n    }\r\n\r\n\r\n    onSubmitRegister = () => {\r\n        if (this.state.newPassword === this.state.passwordAgain){\r\n            fetch('https://toto-server.herokuapp.com/register' , {\r\n                method: \"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: this.state.newEmail,\r\n                    username: this.state.newUserName,\r\n                    password: this.state.newPassword\r\n                })\r\n            }).then((res) => res.json())\r\n            .then( data => {\r\n                let user = parseInt(data);\r\n                console.log(\"register\", user);\r\n                this.props.onRegistration(user);\r\n            }).catch(err => console.log('register', err))\r\n        }\r\n    }\r\n    \r\n\r\n    render (){\r\n        let email=\"Email address\";\r\n        let username = \"User Name\";\r\n        let password=\"Password\";\r\n        let rePassword=\"Please re-enter Password\";\r\n        let submit = \"Register\";\r\n        if (this.props.language === \"hebrew\"){\r\n            email=\"כתובת אימייל\";\r\n            username=\"שם משתמש (ציבורי)\";\r\n            password=\"סיסמא\";\r\n            rePassword=\"הזנת הסיסמא בשנית\";\r\n            submit = \"הרשמה\";\r\n        }\r\n        return (\r\n            <div>\r\n                <Form className=\"registerForm\">\r\n                    <Form.Group>\r\n                        <Form.Label>{email}</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" autocomplete=\"username\"\r\n                                        onChange={this.onEmailChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formUsername\">\r\n                        <Form.Label>{username}</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter a unique user name (public)\" autocomplete=\"username\"\r\n                                        onChange={this.onUsernameChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{password}</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" autocomplete=\"new-password\"\r\n                                        onChange={this.onPasswordChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>{rePassword}</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password (again)\" autocomplete=\"new-password\"\r\n                                        onChange={this.onPasswordAgainChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"\r\n                                            onClick= {()=> this.onSubmitRegister()}>\r\n                            {submit}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport SignInForm from './pages/SignInForm';\r\nimport Register from './pages/Register';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport '../style.css';\r\nimport '../importStyle.css';\r\n\r\n\r\nexport default class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            register: false,\r\n            language: this.props.language,\r\n            userID: 0,\r\n        };\r\n    }\r\n\r\n    eventsHandler = (eventKey) => {\r\n        switch(eventKey){\r\n            case \"english\":\r\n            case \"hebrew\":\r\n                this.props.changeLanguage(eventKey);\r\n                this.setState({language: eventKey});\r\n                break;\r\n            case \"register\":\r\n                this.setState({register: true});\r\n                break;\r\n            case \"login\":\r\n            case \"about\":\r\n                this.setState({register: false});\r\n                break;\r\n            default:\r\n                this.setState({register: false});\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let Content = <SignInForm onRegistration={(user)=> this.setState({userID: user})}\r\n                                  language = {this.state.language} />\r\n        if (this.state.register){\r\n            Content = <Register   onRegistration = {(user)=> this.setState({userID: user})}\r\n                                  language = {this.state.language} /> \r\n        }\r\n        if (this.state.userID !== 0){\r\n            this.props.validLogin(parseInt(this.state.userID));\r\n        }\r\n        let about = 'About';\r\n        let register = 'Register';\r\n        let login = 'Log In';\r\n        let pageDesign = \"signinPage English\"\r\n        if (this.state.language === 'hebrew'){\r\n            about = 'אודות';\r\n            register = 'הרשמה';\r\n            login = 'כניסה לחשבון';\r\n            pageDesign = \"signinPage Hebrew\"\r\n        }\r\n        return (\r\n            <div className={pageDesign} >\r\n                <Nav onSelect={(eventKey) => this.eventsHandler(eventKey)} >\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"english\" >English</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"hebrew\"  >עברית</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"about\"  >{about}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"register\" >{register} </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"login\" >{login}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <div></div>\r\n                {Content}\r\n                <div></div>\r\n            </div>\r\n        );   \r\n    }\r\n}","import React from 'react';\nimport Home from './components/Home';\nimport SignIn from './components/SignIn';\nimport './style.css';\nimport './importStyle.css';\n\n\nexport default class App extends React.Component  {\n  constructor (props) {\n    super(props);\n    this.state = {\n      userID: 0,\n      language: 'english',\n\n    }\n  }\n  \n  render(){\n    if (this.state.userID !== 0){\n      return (\n        <Home\n          user={this.state.userID} \n          logOut={()=>{this.setState({userID:0})}}\n          language = {this.state.language}\n        />\n      );\n    } else {\n      return (\n        <SignIn\n          validLogin ={(userid) => {this.setState({userID: userid})}}\n          changeLanguage = {(update)=>{this.setState({language: update})}}\n        />\n      );\n    }\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}